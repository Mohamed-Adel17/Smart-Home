
Smart_Home_MC2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000334a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000011c  00800060  0000334a  000033de  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000043  0080017c  0080017c  000034fa  2**0
                  ALLOC
  3 .stab         00002a0c  00000000  00000000  000034fc  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001c99  00000000  00000000  00005f08  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000180  00000000  00000000  00007ba1  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000001d6  00000000  00000000  00007d21  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000262b  00000000  00000000  00007ef7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001253  00000000  00000000  0000a522  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001208  00000000  00000000  0000b775  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001a0  00000000  00000000  0000c980  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000035c  00000000  00000000  0000cb20  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000176a  00000000  00000000  0000ce7c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000068  00000000  00000000  0000e5e6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 19 12 	jmp	0x2432	; 0x2432 <__vector_4>
      14:	0c 94 e2 11 	jmp	0x23c4	; 0x23c4 <__vector_5>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ea e4       	ldi	r30, 0x4A	; 74
      68:	f3 e3       	ldi	r31, 0x33	; 51
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	ac 37       	cpi	r26, 0x7C	; 124
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	ac e7       	ldi	r26, 0x7C	; 124
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	af 3b       	cpi	r26, 0xBF	; 191
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 f4 18 	call	0x31e8	; 0x31e8 <main>
      8a:	0c 94 a3 19 	jmp	0x3346	; 0x3346 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 3a 0a 	call	0x1474	; 0x1474 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 36 08 	call	0x106c	; 0x106c <__subsf3>
      be:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <__udivdi3>:
      ea:	ae e5       	ldi	r26, 0x5E	; 94
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 6c 19 	jmp	0x32d8	; 0x32d8 <__prologue_saves__>
      f6:	a8 e0       	ldi	r26, 0x08	; 8
      f8:	4e 01       	movw	r8, r28
      fa:	08 94       	sec
      fc:	81 1c       	adc	r8, r1
      fe:	91 1c       	adc	r9, r1
     100:	f4 01       	movw	r30, r8
     102:	6a 2e       	mov	r6, r26
     104:	11 92       	st	Z+, r1
     106:	6a 94       	dec	r6
     108:	e9 f7       	brne	.-6      	; 0x104 <__udivdi3+0x1a>
     10a:	29 83       	std	Y+1, r18	; 0x01
     10c:	3a 83       	std	Y+2, r19	; 0x02
     10e:	4b 83       	std	Y+3, r20	; 0x03
     110:	5c 83       	std	Y+4, r21	; 0x04
     112:	6d 83       	std	Y+5, r22	; 0x05
     114:	7e 83       	std	Y+6, r23	; 0x06
     116:	8f 83       	std	Y+7, r24	; 0x07
     118:	98 87       	std	Y+8, r25	; 0x08
     11a:	ce 01       	movw	r24, r28
     11c:	09 96       	adiw	r24, 0x09	; 9
     11e:	fc 01       	movw	r30, r24
     120:	11 92       	st	Z+, r1
     122:	aa 95       	dec	r26
     124:	e9 f7       	brne	.-6      	; 0x120 <__udivdi3+0x36>
     126:	a9 86       	std	Y+9, r10	; 0x09
     128:	ba 86       	std	Y+10, r11	; 0x0a
     12a:	cb 86       	std	Y+11, r12	; 0x0b
     12c:	dc 86       	std	Y+12, r13	; 0x0c
     12e:	ed 86       	std	Y+13, r14	; 0x0d
     130:	fe 86       	std	Y+14, r15	; 0x0e
     132:	0f 87       	std	Y+15, r16	; 0x0f
     134:	18 8b       	std	Y+16, r17	; 0x10
     136:	29 84       	ldd	r2, Y+9	; 0x09
     138:	3a 84       	ldd	r3, Y+10	; 0x0a
     13a:	4b 84       	ldd	r4, Y+11	; 0x0b
     13c:	5c 84       	ldd	r5, Y+12	; 0x0c
     13e:	ed 84       	ldd	r14, Y+13	; 0x0d
     140:	fe 84       	ldd	r15, Y+14	; 0x0e
     142:	0f 85       	ldd	r16, Y+15	; 0x0f
     144:	18 89       	ldd	r17, Y+16	; 0x10
     146:	69 80       	ldd	r6, Y+1	; 0x01
     148:	7a 80       	ldd	r7, Y+2	; 0x02
     14a:	8b 80       	ldd	r8, Y+3	; 0x03
     14c:	9c 80       	ldd	r9, Y+4	; 0x04
     14e:	6d a6       	std	Y+45, r6	; 0x2d
     150:	7e a6       	std	Y+46, r7	; 0x2e
     152:	8f a6       	std	Y+47, r8	; 0x2f
     154:	98 aa       	std	Y+48, r9	; 0x30
     156:	6d 80       	ldd	r6, Y+5	; 0x05
     158:	7e 80       	ldd	r7, Y+6	; 0x06
     15a:	8f 80       	ldd	r8, Y+7	; 0x07
     15c:	98 84       	ldd	r9, Y+8	; 0x08
     15e:	e1 14       	cp	r14, r1
     160:	f1 04       	cpc	r15, r1
     162:	01 05       	cpc	r16, r1
     164:	11 05       	cpc	r17, r1
     166:	09 f0       	breq	.+2      	; 0x16a <__udivdi3+0x80>
     168:	b3 c3       	rjmp	.+1894   	; 0x8d0 <__stack+0x71>
     16a:	62 14       	cp	r6, r2
     16c:	73 04       	cpc	r7, r3
     16e:	84 04       	cpc	r8, r4
     170:	95 04       	cpc	r9, r5
     172:	08 f0       	brcs	.+2      	; 0x176 <__udivdi3+0x8c>
     174:	3d c1       	rjmp	.+634    	; 0x3f0 <__udivdi3+0x306>
     176:	00 e0       	ldi	r16, 0x00	; 0
     178:	20 16       	cp	r2, r16
     17a:	00 e0       	ldi	r16, 0x00	; 0
     17c:	30 06       	cpc	r3, r16
     17e:	01 e0       	ldi	r16, 0x01	; 1
     180:	40 06       	cpc	r4, r16
     182:	00 e0       	ldi	r16, 0x00	; 0
     184:	50 06       	cpc	r5, r16
     186:	88 f4       	brcc	.+34     	; 0x1aa <__udivdi3+0xc0>
     188:	1f ef       	ldi	r17, 0xFF	; 255
     18a:	21 16       	cp	r2, r17
     18c:	31 04       	cpc	r3, r1
     18e:	41 04       	cpc	r4, r1
     190:	51 04       	cpc	r5, r1
     192:	39 f0       	breq	.+14     	; 0x1a2 <__udivdi3+0xb8>
     194:	30 f0       	brcs	.+12     	; 0x1a2 <__udivdi3+0xb8>
     196:	48 e0       	ldi	r20, 0x08	; 8
     198:	e4 2e       	mov	r14, r20
     19a:	f1 2c       	mov	r15, r1
     19c:	01 2d       	mov	r16, r1
     19e:	11 2d       	mov	r17, r1
     1a0:	18 c0       	rjmp	.+48     	; 0x1d2 <__udivdi3+0xe8>
     1a2:	ee 24       	eor	r14, r14
     1a4:	ff 24       	eor	r15, r15
     1a6:	87 01       	movw	r16, r14
     1a8:	14 c0       	rjmp	.+40     	; 0x1d2 <__udivdi3+0xe8>
     1aa:	20 e0       	ldi	r18, 0x00	; 0
     1ac:	22 16       	cp	r2, r18
     1ae:	20 e0       	ldi	r18, 0x00	; 0
     1b0:	32 06       	cpc	r3, r18
     1b2:	20 e0       	ldi	r18, 0x00	; 0
     1b4:	42 06       	cpc	r4, r18
     1b6:	21 e0       	ldi	r18, 0x01	; 1
     1b8:	52 06       	cpc	r5, r18
     1ba:	30 f0       	brcs	.+12     	; 0x1c8 <__udivdi3+0xde>
     1bc:	38 e1       	ldi	r19, 0x18	; 24
     1be:	e3 2e       	mov	r14, r19
     1c0:	f1 2c       	mov	r15, r1
     1c2:	01 2d       	mov	r16, r1
     1c4:	11 2d       	mov	r17, r1
     1c6:	05 c0       	rjmp	.+10     	; 0x1d2 <__udivdi3+0xe8>
     1c8:	20 e1       	ldi	r18, 0x10	; 16
     1ca:	e2 2e       	mov	r14, r18
     1cc:	f1 2c       	mov	r15, r1
     1ce:	01 2d       	mov	r16, r1
     1d0:	11 2d       	mov	r17, r1
     1d2:	d2 01       	movw	r26, r4
     1d4:	c1 01       	movw	r24, r2
     1d6:	0e 2c       	mov	r0, r14
     1d8:	04 c0       	rjmp	.+8      	; 0x1e2 <__udivdi3+0xf8>
     1da:	b6 95       	lsr	r27
     1dc:	a7 95       	ror	r26
     1de:	97 95       	ror	r25
     1e0:	87 95       	ror	r24
     1e2:	0a 94       	dec	r0
     1e4:	d2 f7       	brpl	.-12     	; 0x1da <__udivdi3+0xf0>
     1e6:	88 59       	subi	r24, 0x98	; 152
     1e8:	9f 4f       	sbci	r25, 0xFF	; 255
     1ea:	dc 01       	movw	r26, r24
     1ec:	2c 91       	ld	r18, X
     1ee:	80 e2       	ldi	r24, 0x20	; 32
     1f0:	90 e0       	ldi	r25, 0x00	; 0
     1f2:	a0 e0       	ldi	r26, 0x00	; 0
     1f4:	b0 e0       	ldi	r27, 0x00	; 0
     1f6:	8e 19       	sub	r24, r14
     1f8:	9f 09       	sbc	r25, r15
     1fa:	a0 0b       	sbc	r26, r16
     1fc:	b1 0b       	sbc	r27, r17
     1fe:	7c 01       	movw	r14, r24
     200:	8d 01       	movw	r16, r26
     202:	e2 1a       	sub	r14, r18
     204:	f1 08       	sbc	r15, r1
     206:	01 09       	sbc	r16, r1
     208:	11 09       	sbc	r17, r1
     20a:	e1 14       	cp	r14, r1
     20c:	f1 04       	cpc	r15, r1
     20e:	01 05       	cpc	r16, r1
     210:	11 05       	cpc	r17, r1
     212:	a1 f1       	breq	.+104    	; 0x27c <__udivdi3+0x192>
     214:	0e 2c       	mov	r0, r14
     216:	04 c0       	rjmp	.+8      	; 0x220 <__udivdi3+0x136>
     218:	22 0c       	add	r2, r2
     21a:	33 1c       	adc	r3, r3
     21c:	44 1c       	adc	r4, r4
     21e:	55 1c       	adc	r5, r5
     220:	0a 94       	dec	r0
     222:	d2 f7       	brpl	.-12     	; 0x218 <__udivdi3+0x12e>
     224:	a4 01       	movw	r20, r8
     226:	93 01       	movw	r18, r6
     228:	0e 2c       	mov	r0, r14
     22a:	04 c0       	rjmp	.+8      	; 0x234 <__udivdi3+0x14a>
     22c:	22 0f       	add	r18, r18
     22e:	33 1f       	adc	r19, r19
     230:	44 1f       	adc	r20, r20
     232:	55 1f       	adc	r21, r21
     234:	0a 94       	dec	r0
     236:	d2 f7       	brpl	.-12     	; 0x22c <__udivdi3+0x142>
     238:	80 e2       	ldi	r24, 0x20	; 32
     23a:	90 e0       	ldi	r25, 0x00	; 0
     23c:	8e 19       	sub	r24, r14
     23e:	9f 09       	sbc	r25, r15
     240:	6d a4       	ldd	r6, Y+45	; 0x2d
     242:	7e a4       	ldd	r7, Y+46	; 0x2e
     244:	8f a4       	ldd	r8, Y+47	; 0x2f
     246:	98 a8       	ldd	r9, Y+48	; 0x30
     248:	04 c0       	rjmp	.+8      	; 0x252 <__udivdi3+0x168>
     24a:	96 94       	lsr	r9
     24c:	87 94       	ror	r8
     24e:	77 94       	ror	r7
     250:	67 94       	ror	r6
     252:	8a 95       	dec	r24
     254:	d2 f7       	brpl	.-12     	; 0x24a <__udivdi3+0x160>
     256:	62 2a       	or	r6, r18
     258:	73 2a       	or	r7, r19
     25a:	84 2a       	or	r8, r20
     25c:	95 2a       	or	r9, r21
     25e:	ad a4       	ldd	r10, Y+45	; 0x2d
     260:	be a4       	ldd	r11, Y+46	; 0x2e
     262:	cf a4       	ldd	r12, Y+47	; 0x2f
     264:	d8 a8       	ldd	r13, Y+48	; 0x30
     266:	04 c0       	rjmp	.+8      	; 0x270 <__udivdi3+0x186>
     268:	aa 0c       	add	r10, r10
     26a:	bb 1c       	adc	r11, r11
     26c:	cc 1c       	adc	r12, r12
     26e:	dd 1c       	adc	r13, r13
     270:	ea 94       	dec	r14
     272:	d2 f7       	brpl	.-12     	; 0x268 <__udivdi3+0x17e>
     274:	ad a6       	std	Y+45, r10	; 0x2d
     276:	be a6       	std	Y+46, r11	; 0x2e
     278:	cf a6       	std	Y+47, r12	; 0x2f
     27a:	d8 aa       	std	Y+48, r13	; 0x30
     27c:	62 01       	movw	r12, r4
     27e:	ee 24       	eor	r14, r14
     280:	ff 24       	eor	r15, r15
     282:	cd aa       	std	Y+53, r12	; 0x35
     284:	de aa       	std	Y+54, r13	; 0x36
     286:	ef aa       	std	Y+55, r14	; 0x37
     288:	f8 ae       	std	Y+56, r15	; 0x38
     28a:	92 01       	movw	r18, r4
     28c:	81 01       	movw	r16, r2
     28e:	20 70       	andi	r18, 0x00	; 0
     290:	30 70       	andi	r19, 0x00	; 0
     292:	09 af       	std	Y+57, r16	; 0x39
     294:	1a af       	std	Y+58, r17	; 0x3a
     296:	2b af       	std	Y+59, r18	; 0x3b
     298:	3c af       	std	Y+60, r19	; 0x3c
     29a:	c4 01       	movw	r24, r8
     29c:	b3 01       	movw	r22, r6
     29e:	a7 01       	movw	r20, r14
     2a0:	96 01       	movw	r18, r12
     2a2:	0e 94 4a 19 	call	0x3294	; 0x3294 <__udivmodsi4>
     2a6:	7b 01       	movw	r14, r22
     2a8:	8c 01       	movw	r16, r24
     2aa:	c4 01       	movw	r24, r8
     2ac:	b3 01       	movw	r22, r6
     2ae:	2d a9       	ldd	r18, Y+53	; 0x35
     2b0:	3e a9       	ldd	r19, Y+54	; 0x36
     2b2:	4f a9       	ldd	r20, Y+55	; 0x37
     2b4:	58 ad       	ldd	r21, Y+56	; 0x38
     2b6:	0e 94 4a 19 	call	0x3294	; 0x3294 <__udivmodsi4>
     2ba:	c9 01       	movw	r24, r18
     2bc:	da 01       	movw	r26, r20
     2be:	3c 01       	movw	r6, r24
     2c0:	4d 01       	movw	r8, r26
     2c2:	c4 01       	movw	r24, r8
     2c4:	b3 01       	movw	r22, r6
     2c6:	29 ad       	ldd	r18, Y+57	; 0x39
     2c8:	3a ad       	ldd	r19, Y+58	; 0x3a
     2ca:	4b ad       	ldd	r20, Y+59	; 0x3b
     2cc:	5c ad       	ldd	r21, Y+60	; 0x3c
     2ce:	0e 94 2b 19 	call	0x3256	; 0x3256 <__mulsi3>
     2d2:	9b 01       	movw	r18, r22
     2d4:	ac 01       	movw	r20, r24
     2d6:	87 01       	movw	r16, r14
     2d8:	ff 24       	eor	r15, r15
     2da:	ee 24       	eor	r14, r14
     2dc:	ad a4       	ldd	r10, Y+45	; 0x2d
     2de:	be a4       	ldd	r11, Y+46	; 0x2e
     2e0:	cf a4       	ldd	r12, Y+47	; 0x2f
     2e2:	d8 a8       	ldd	r13, Y+48	; 0x30
     2e4:	c6 01       	movw	r24, r12
     2e6:	aa 27       	eor	r26, r26
     2e8:	bb 27       	eor	r27, r27
     2ea:	57 01       	movw	r10, r14
     2ec:	68 01       	movw	r12, r16
     2ee:	a8 2a       	or	r10, r24
     2f0:	b9 2a       	or	r11, r25
     2f2:	ca 2a       	or	r12, r26
     2f4:	db 2a       	or	r13, r27
     2f6:	a2 16       	cp	r10, r18
     2f8:	b3 06       	cpc	r11, r19
     2fa:	c4 06       	cpc	r12, r20
     2fc:	d5 06       	cpc	r13, r21
     2fe:	e0 f4       	brcc	.+56     	; 0x338 <__udivdi3+0x24e>
     300:	08 94       	sec
     302:	61 08       	sbc	r6, r1
     304:	71 08       	sbc	r7, r1
     306:	81 08       	sbc	r8, r1
     308:	91 08       	sbc	r9, r1
     30a:	a2 0c       	add	r10, r2
     30c:	b3 1c       	adc	r11, r3
     30e:	c4 1c       	adc	r12, r4
     310:	d5 1c       	adc	r13, r5
     312:	a2 14       	cp	r10, r2
     314:	b3 04       	cpc	r11, r3
     316:	c4 04       	cpc	r12, r4
     318:	d5 04       	cpc	r13, r5
     31a:	70 f0       	brcs	.+28     	; 0x338 <__udivdi3+0x24e>
     31c:	a2 16       	cp	r10, r18
     31e:	b3 06       	cpc	r11, r19
     320:	c4 06       	cpc	r12, r20
     322:	d5 06       	cpc	r13, r21
     324:	48 f4       	brcc	.+18     	; 0x338 <__udivdi3+0x24e>
     326:	08 94       	sec
     328:	61 08       	sbc	r6, r1
     32a:	71 08       	sbc	r7, r1
     32c:	81 08       	sbc	r8, r1
     32e:	91 08       	sbc	r9, r1
     330:	a2 0c       	add	r10, r2
     332:	b3 1c       	adc	r11, r3
     334:	c4 1c       	adc	r12, r4
     336:	d5 1c       	adc	r13, r5
     338:	a2 1a       	sub	r10, r18
     33a:	b3 0a       	sbc	r11, r19
     33c:	c4 0a       	sbc	r12, r20
     33e:	d5 0a       	sbc	r13, r21
     340:	c6 01       	movw	r24, r12
     342:	b5 01       	movw	r22, r10
     344:	2d a9       	ldd	r18, Y+53	; 0x35
     346:	3e a9       	ldd	r19, Y+54	; 0x36
     348:	4f a9       	ldd	r20, Y+55	; 0x37
     34a:	58 ad       	ldd	r21, Y+56	; 0x38
     34c:	0e 94 4a 19 	call	0x3294	; 0x3294 <__udivmodsi4>
     350:	7b 01       	movw	r14, r22
     352:	8c 01       	movw	r16, r24
     354:	c6 01       	movw	r24, r12
     356:	b5 01       	movw	r22, r10
     358:	2d a9       	ldd	r18, Y+53	; 0x35
     35a:	3e a9       	ldd	r19, Y+54	; 0x36
     35c:	4f a9       	ldd	r20, Y+55	; 0x37
     35e:	58 ad       	ldd	r21, Y+56	; 0x38
     360:	0e 94 4a 19 	call	0x3294	; 0x3294 <__udivmodsi4>
     364:	c9 01       	movw	r24, r18
     366:	da 01       	movw	r26, r20
     368:	5c 01       	movw	r10, r24
     36a:	6d 01       	movw	r12, r26
     36c:	c6 01       	movw	r24, r12
     36e:	b5 01       	movw	r22, r10
     370:	29 ad       	ldd	r18, Y+57	; 0x39
     372:	3a ad       	ldd	r19, Y+58	; 0x3a
     374:	4b ad       	ldd	r20, Y+59	; 0x3b
     376:	5c ad       	ldd	r21, Y+60	; 0x3c
     378:	0e 94 2b 19 	call	0x3256	; 0x3256 <__mulsi3>
     37c:	9b 01       	movw	r18, r22
     37e:	ac 01       	movw	r20, r24
     380:	87 01       	movw	r16, r14
     382:	ff 24       	eor	r15, r15
     384:	ee 24       	eor	r14, r14
     386:	8d a5       	ldd	r24, Y+45	; 0x2d
     388:	9e a5       	ldd	r25, Y+46	; 0x2e
     38a:	af a5       	ldd	r26, Y+47	; 0x2f
     38c:	b8 a9       	ldd	r27, Y+48	; 0x30
     38e:	a0 70       	andi	r26, 0x00	; 0
     390:	b0 70       	andi	r27, 0x00	; 0
     392:	e8 2a       	or	r14, r24
     394:	f9 2a       	or	r15, r25
     396:	0a 2b       	or	r16, r26
     398:	1b 2b       	or	r17, r27
     39a:	e2 16       	cp	r14, r18
     39c:	f3 06       	cpc	r15, r19
     39e:	04 07       	cpc	r16, r20
     3a0:	15 07       	cpc	r17, r21
     3a2:	c0 f4       	brcc	.+48     	; 0x3d4 <__udivdi3+0x2ea>
     3a4:	08 94       	sec
     3a6:	a1 08       	sbc	r10, r1
     3a8:	b1 08       	sbc	r11, r1
     3aa:	c1 08       	sbc	r12, r1
     3ac:	d1 08       	sbc	r13, r1
     3ae:	e2 0c       	add	r14, r2
     3b0:	f3 1c       	adc	r15, r3
     3b2:	04 1d       	adc	r16, r4
     3b4:	15 1d       	adc	r17, r5
     3b6:	e2 14       	cp	r14, r2
     3b8:	f3 04       	cpc	r15, r3
     3ba:	04 05       	cpc	r16, r4
     3bc:	15 05       	cpc	r17, r5
     3be:	50 f0       	brcs	.+20     	; 0x3d4 <__udivdi3+0x2ea>
     3c0:	e2 16       	cp	r14, r18
     3c2:	f3 06       	cpc	r15, r19
     3c4:	04 07       	cpc	r16, r20
     3c6:	15 07       	cpc	r17, r21
     3c8:	28 f4       	brcc	.+10     	; 0x3d4 <__udivdi3+0x2ea>
     3ca:	08 94       	sec
     3cc:	a1 08       	sbc	r10, r1
     3ce:	b1 08       	sbc	r11, r1
     3d0:	c1 08       	sbc	r12, r1
     3d2:	d1 08       	sbc	r13, r1
     3d4:	d3 01       	movw	r26, r6
     3d6:	99 27       	eor	r25, r25
     3d8:	88 27       	eor	r24, r24
     3da:	86 01       	movw	r16, r12
     3dc:	75 01       	movw	r14, r10
     3de:	e8 2a       	or	r14, r24
     3e0:	f9 2a       	or	r15, r25
     3e2:	0a 2b       	or	r16, r26
     3e4:	1b 2b       	or	r17, r27
     3e6:	e9 aa       	std	Y+49, r14	; 0x31
     3e8:	fa aa       	std	Y+50, r15	; 0x32
     3ea:	0b ab       	std	Y+51, r16	; 0x33
     3ec:	1c ab       	std	Y+52, r17	; 0x34
     3ee:	cf c4       	rjmp	.+2462   	; 0xd8e <__stack+0x52f>
     3f0:	21 14       	cp	r2, r1
     3f2:	31 04       	cpc	r3, r1
     3f4:	41 04       	cpc	r4, r1
     3f6:	51 04       	cpc	r5, r1
     3f8:	71 f4       	brne	.+28     	; 0x416 <__udivdi3+0x32c>
     3fa:	61 e0       	ldi	r22, 0x01	; 1
     3fc:	70 e0       	ldi	r23, 0x00	; 0
     3fe:	80 e0       	ldi	r24, 0x00	; 0
     400:	90 e0       	ldi	r25, 0x00	; 0
     402:	20 e0       	ldi	r18, 0x00	; 0
     404:	30 e0       	ldi	r19, 0x00	; 0
     406:	40 e0       	ldi	r20, 0x00	; 0
     408:	50 e0       	ldi	r21, 0x00	; 0
     40a:	0e 94 4a 19 	call	0x3294	; 0x3294 <__udivmodsi4>
     40e:	c9 01       	movw	r24, r18
     410:	da 01       	movw	r26, r20
     412:	1c 01       	movw	r2, r24
     414:	2d 01       	movw	r4, r26
     416:	00 e0       	ldi	r16, 0x00	; 0
     418:	20 16       	cp	r2, r16
     41a:	00 e0       	ldi	r16, 0x00	; 0
     41c:	30 06       	cpc	r3, r16
     41e:	01 e0       	ldi	r16, 0x01	; 1
     420:	40 06       	cpc	r4, r16
     422:	00 e0       	ldi	r16, 0x00	; 0
     424:	50 06       	cpc	r5, r16
     426:	88 f4       	brcc	.+34     	; 0x44a <__udivdi3+0x360>
     428:	1f ef       	ldi	r17, 0xFF	; 255
     42a:	21 16       	cp	r2, r17
     42c:	31 04       	cpc	r3, r1
     42e:	41 04       	cpc	r4, r1
     430:	51 04       	cpc	r5, r1
     432:	31 f0       	breq	.+12     	; 0x440 <__udivdi3+0x356>
     434:	28 f0       	brcs	.+10     	; 0x440 <__udivdi3+0x356>
     436:	48 e0       	ldi	r20, 0x08	; 8
     438:	50 e0       	ldi	r21, 0x00	; 0
     43a:	60 e0       	ldi	r22, 0x00	; 0
     43c:	70 e0       	ldi	r23, 0x00	; 0
     43e:	17 c0       	rjmp	.+46     	; 0x46e <__udivdi3+0x384>
     440:	40 e0       	ldi	r20, 0x00	; 0
     442:	50 e0       	ldi	r21, 0x00	; 0
     444:	60 e0       	ldi	r22, 0x00	; 0
     446:	70 e0       	ldi	r23, 0x00	; 0
     448:	12 c0       	rjmp	.+36     	; 0x46e <__udivdi3+0x384>
     44a:	20 e0       	ldi	r18, 0x00	; 0
     44c:	22 16       	cp	r2, r18
     44e:	20 e0       	ldi	r18, 0x00	; 0
     450:	32 06       	cpc	r3, r18
     452:	20 e0       	ldi	r18, 0x00	; 0
     454:	42 06       	cpc	r4, r18
     456:	21 e0       	ldi	r18, 0x01	; 1
     458:	52 06       	cpc	r5, r18
     45a:	28 f0       	brcs	.+10     	; 0x466 <__udivdi3+0x37c>
     45c:	48 e1       	ldi	r20, 0x18	; 24
     45e:	50 e0       	ldi	r21, 0x00	; 0
     460:	60 e0       	ldi	r22, 0x00	; 0
     462:	70 e0       	ldi	r23, 0x00	; 0
     464:	04 c0       	rjmp	.+8      	; 0x46e <__udivdi3+0x384>
     466:	40 e1       	ldi	r20, 0x10	; 16
     468:	50 e0       	ldi	r21, 0x00	; 0
     46a:	60 e0       	ldi	r22, 0x00	; 0
     46c:	70 e0       	ldi	r23, 0x00	; 0
     46e:	d2 01       	movw	r26, r4
     470:	c1 01       	movw	r24, r2
     472:	04 2e       	mov	r0, r20
     474:	04 c0       	rjmp	.+8      	; 0x47e <__udivdi3+0x394>
     476:	b6 95       	lsr	r27
     478:	a7 95       	ror	r26
     47a:	97 95       	ror	r25
     47c:	87 95       	ror	r24
     47e:	0a 94       	dec	r0
     480:	d2 f7       	brpl	.-12     	; 0x476 <__udivdi3+0x38c>
     482:	88 59       	subi	r24, 0x98	; 152
     484:	9f 4f       	sbci	r25, 0xFF	; 255
     486:	dc 01       	movw	r26, r24
     488:	2c 91       	ld	r18, X
     48a:	e0 e2       	ldi	r30, 0x20	; 32
     48c:	ee 2e       	mov	r14, r30
     48e:	f1 2c       	mov	r15, r1
     490:	01 2d       	mov	r16, r1
     492:	11 2d       	mov	r17, r1
     494:	d8 01       	movw	r26, r16
     496:	c7 01       	movw	r24, r14
     498:	84 1b       	sub	r24, r20
     49a:	95 0b       	sbc	r25, r21
     49c:	a6 0b       	sbc	r26, r22
     49e:	b7 0b       	sbc	r27, r23
     4a0:	82 1b       	sub	r24, r18
     4a2:	91 09       	sbc	r25, r1
     4a4:	a1 09       	sbc	r26, r1
     4a6:	b1 09       	sbc	r27, r1
     4a8:	00 97       	sbiw	r24, 0x00	; 0
     4aa:	a1 05       	cpc	r26, r1
     4ac:	b1 05       	cpc	r27, r1
     4ae:	61 f4       	brne	.+24     	; 0x4c8 <__udivdi3+0x3de>
     4b0:	64 01       	movw	r12, r8
     4b2:	53 01       	movw	r10, r6
     4b4:	a2 18       	sub	r10, r2
     4b6:	b3 08       	sbc	r11, r3
     4b8:	c4 08       	sbc	r12, r4
     4ba:	d5 08       	sbc	r13, r5
     4bc:	31 e0       	ldi	r19, 0x01	; 1
     4be:	63 2e       	mov	r6, r19
     4c0:	71 2c       	mov	r7, r1
     4c2:	81 2c       	mov	r8, r1
     4c4:	91 2c       	mov	r9, r1
     4c6:	1e c1       	rjmp	.+572    	; 0x704 <__udivdi3+0x61a>
     4c8:	6f 96       	adiw	r28, 0x1f	; 31
     4ca:	8f af       	std	Y+63, r24	; 0x3f
     4cc:	6f 97       	sbiw	r28, 0x1f	; 31
     4ce:	08 2e       	mov	r0, r24
     4d0:	04 c0       	rjmp	.+8      	; 0x4da <__udivdi3+0x3f0>
     4d2:	22 0c       	add	r2, r2
     4d4:	33 1c       	adc	r3, r3
     4d6:	44 1c       	adc	r4, r4
     4d8:	55 1c       	adc	r5, r5
     4da:	0a 94       	dec	r0
     4dc:	d2 f7       	brpl	.-12     	; 0x4d2 <__udivdi3+0x3e8>
     4de:	ee 2d       	mov	r30, r14
     4e0:	e8 1b       	sub	r30, r24
     4e2:	64 01       	movw	r12, r8
     4e4:	53 01       	movw	r10, r6
     4e6:	0e 2e       	mov	r0, r30
     4e8:	04 c0       	rjmp	.+8      	; 0x4f2 <__udivdi3+0x408>
     4ea:	d6 94       	lsr	r13
     4ec:	c7 94       	ror	r12
     4ee:	b7 94       	ror	r11
     4f0:	a7 94       	ror	r10
     4f2:	0a 94       	dec	r0
     4f4:	d2 f7       	brpl	.-12     	; 0x4ea <__udivdi3+0x400>
     4f6:	a4 01       	movw	r20, r8
     4f8:	93 01       	movw	r18, r6
     4fa:	6f 96       	adiw	r28, 0x1f	; 31
     4fc:	0f ac       	ldd	r0, Y+63	; 0x3f
     4fe:	6f 97       	sbiw	r28, 0x1f	; 31
     500:	04 c0       	rjmp	.+8      	; 0x50a <__udivdi3+0x420>
     502:	22 0f       	add	r18, r18
     504:	33 1f       	adc	r19, r19
     506:	44 1f       	adc	r20, r20
     508:	55 1f       	adc	r21, r21
     50a:	0a 94       	dec	r0
     50c:	d2 f7       	brpl	.-12     	; 0x502 <__udivdi3+0x418>
     50e:	6d a4       	ldd	r6, Y+45	; 0x2d
     510:	7e a4       	ldd	r7, Y+46	; 0x2e
     512:	8f a4       	ldd	r8, Y+47	; 0x2f
     514:	98 a8       	ldd	r9, Y+48	; 0x30
     516:	0e 2e       	mov	r0, r30
     518:	04 c0       	rjmp	.+8      	; 0x522 <__udivdi3+0x438>
     51a:	96 94       	lsr	r9
     51c:	87 94       	ror	r8
     51e:	77 94       	ror	r7
     520:	67 94       	ror	r6
     522:	0a 94       	dec	r0
     524:	d2 f7       	brpl	.-12     	; 0x51a <__udivdi3+0x430>
     526:	84 01       	movw	r16, r8
     528:	73 01       	movw	r14, r6
     52a:	e2 2a       	or	r14, r18
     52c:	f3 2a       	or	r15, r19
     52e:	04 2b       	or	r16, r20
     530:	15 2b       	or	r17, r21
     532:	e9 a6       	std	Y+41, r14	; 0x29
     534:	fa a6       	std	Y+42, r15	; 0x2a
     536:	0b a7       	std	Y+43, r16	; 0x2b
     538:	1c a7       	std	Y+44, r17	; 0x2c
     53a:	32 01       	movw	r6, r4
     53c:	88 24       	eor	r8, r8
     53e:	99 24       	eor	r9, r9
     540:	92 01       	movw	r18, r4
     542:	81 01       	movw	r16, r2
     544:	20 70       	andi	r18, 0x00	; 0
     546:	30 70       	andi	r19, 0x00	; 0
     548:	21 96       	adiw	r28, 0x01	; 1
     54a:	0c af       	std	Y+60, r16	; 0x3c
     54c:	1d af       	std	Y+61, r17	; 0x3d
     54e:	2e af       	std	Y+62, r18	; 0x3e
     550:	3f af       	std	Y+63, r19	; 0x3f
     552:	21 97       	sbiw	r28, 0x01	; 1
     554:	c6 01       	movw	r24, r12
     556:	b5 01       	movw	r22, r10
     558:	a4 01       	movw	r20, r8
     55a:	93 01       	movw	r18, r6
     55c:	0e 94 4a 19 	call	0x3294	; 0x3294 <__udivmodsi4>
     560:	7b 01       	movw	r14, r22
     562:	8c 01       	movw	r16, r24
     564:	c6 01       	movw	r24, r12
     566:	b5 01       	movw	r22, r10
     568:	a4 01       	movw	r20, r8
     56a:	93 01       	movw	r18, r6
     56c:	0e 94 4a 19 	call	0x3294	; 0x3294 <__udivmodsi4>
     570:	c9 01       	movw	r24, r18
     572:	da 01       	movw	r26, r20
     574:	25 96       	adiw	r28, 0x05	; 5
     576:	8c af       	std	Y+60, r24	; 0x3c
     578:	9d af       	std	Y+61, r25	; 0x3d
     57a:	ae af       	std	Y+62, r26	; 0x3e
     57c:	bf af       	std	Y+63, r27	; 0x3f
     57e:	25 97       	sbiw	r28, 0x05	; 5
     580:	bc 01       	movw	r22, r24
     582:	cd 01       	movw	r24, r26
     584:	21 96       	adiw	r28, 0x01	; 1
     586:	2c ad       	ldd	r18, Y+60	; 0x3c
     588:	3d ad       	ldd	r19, Y+61	; 0x3d
     58a:	4e ad       	ldd	r20, Y+62	; 0x3e
     58c:	5f ad       	ldd	r21, Y+63	; 0x3f
     58e:	21 97       	sbiw	r28, 0x01	; 1
     590:	0e 94 2b 19 	call	0x3256	; 0x3256 <__mulsi3>
     594:	9b 01       	movw	r18, r22
     596:	ac 01       	movw	r20, r24
     598:	87 01       	movw	r16, r14
     59a:	ff 24       	eor	r15, r15
     59c:	ee 24       	eor	r14, r14
     59e:	a9 a4       	ldd	r10, Y+41	; 0x29
     5a0:	ba a4       	ldd	r11, Y+42	; 0x2a
     5a2:	cb a4       	ldd	r12, Y+43	; 0x2b
     5a4:	dc a4       	ldd	r13, Y+44	; 0x2c
     5a6:	c6 01       	movw	r24, r12
     5a8:	aa 27       	eor	r26, r26
     5aa:	bb 27       	eor	r27, r27
     5ac:	5c 01       	movw	r10, r24
     5ae:	6d 01       	movw	r12, r26
     5b0:	ae 28       	or	r10, r14
     5b2:	bf 28       	or	r11, r15
     5b4:	c0 2a       	or	r12, r16
     5b6:	d1 2a       	or	r13, r17
     5b8:	a2 16       	cp	r10, r18
     5ba:	b3 06       	cpc	r11, r19
     5bc:	c4 06       	cpc	r12, r20
     5be:	d5 06       	cpc	r13, r21
     5c0:	60 f5       	brcc	.+88     	; 0x61a <__udivdi3+0x530>
     5c2:	25 96       	adiw	r28, 0x05	; 5
     5c4:	6c ad       	ldd	r22, Y+60	; 0x3c
     5c6:	7d ad       	ldd	r23, Y+61	; 0x3d
     5c8:	8e ad       	ldd	r24, Y+62	; 0x3e
     5ca:	9f ad       	ldd	r25, Y+63	; 0x3f
     5cc:	25 97       	sbiw	r28, 0x05	; 5
     5ce:	61 50       	subi	r22, 0x01	; 1
     5d0:	70 40       	sbci	r23, 0x00	; 0
     5d2:	80 40       	sbci	r24, 0x00	; 0
     5d4:	90 40       	sbci	r25, 0x00	; 0
     5d6:	25 96       	adiw	r28, 0x05	; 5
     5d8:	6c af       	std	Y+60, r22	; 0x3c
     5da:	7d af       	std	Y+61, r23	; 0x3d
     5dc:	8e af       	std	Y+62, r24	; 0x3e
     5de:	9f af       	std	Y+63, r25	; 0x3f
     5e0:	25 97       	sbiw	r28, 0x05	; 5
     5e2:	a2 0c       	add	r10, r2
     5e4:	b3 1c       	adc	r11, r3
     5e6:	c4 1c       	adc	r12, r4
     5e8:	d5 1c       	adc	r13, r5
     5ea:	a2 14       	cp	r10, r2
     5ec:	b3 04       	cpc	r11, r3
     5ee:	c4 04       	cpc	r12, r4
     5f0:	d5 04       	cpc	r13, r5
     5f2:	98 f0       	brcs	.+38     	; 0x61a <__udivdi3+0x530>
     5f4:	a2 16       	cp	r10, r18
     5f6:	b3 06       	cpc	r11, r19
     5f8:	c4 06       	cpc	r12, r20
     5fa:	d5 06       	cpc	r13, r21
     5fc:	70 f4       	brcc	.+28     	; 0x61a <__udivdi3+0x530>
     5fe:	61 50       	subi	r22, 0x01	; 1
     600:	70 40       	sbci	r23, 0x00	; 0
     602:	80 40       	sbci	r24, 0x00	; 0
     604:	90 40       	sbci	r25, 0x00	; 0
     606:	25 96       	adiw	r28, 0x05	; 5
     608:	6c af       	std	Y+60, r22	; 0x3c
     60a:	7d af       	std	Y+61, r23	; 0x3d
     60c:	8e af       	std	Y+62, r24	; 0x3e
     60e:	9f af       	std	Y+63, r25	; 0x3f
     610:	25 97       	sbiw	r28, 0x05	; 5
     612:	a2 0c       	add	r10, r2
     614:	b3 1c       	adc	r11, r3
     616:	c4 1c       	adc	r12, r4
     618:	d5 1c       	adc	r13, r5
     61a:	a2 1a       	sub	r10, r18
     61c:	b3 0a       	sbc	r11, r19
     61e:	c4 0a       	sbc	r12, r20
     620:	d5 0a       	sbc	r13, r21
     622:	c6 01       	movw	r24, r12
     624:	b5 01       	movw	r22, r10
     626:	a4 01       	movw	r20, r8
     628:	93 01       	movw	r18, r6
     62a:	0e 94 4a 19 	call	0x3294	; 0x3294 <__udivmodsi4>
     62e:	7b 01       	movw	r14, r22
     630:	8c 01       	movw	r16, r24
     632:	c6 01       	movw	r24, r12
     634:	b5 01       	movw	r22, r10
     636:	a4 01       	movw	r20, r8
     638:	93 01       	movw	r18, r6
     63a:	0e 94 4a 19 	call	0x3294	; 0x3294 <__udivmodsi4>
     63e:	c9 01       	movw	r24, r18
     640:	da 01       	movw	r26, r20
     642:	3c 01       	movw	r6, r24
     644:	4d 01       	movw	r8, r26
     646:	c4 01       	movw	r24, r8
     648:	b3 01       	movw	r22, r6
     64a:	21 96       	adiw	r28, 0x01	; 1
     64c:	2c ad       	ldd	r18, Y+60	; 0x3c
     64e:	3d ad       	ldd	r19, Y+61	; 0x3d
     650:	4e ad       	ldd	r20, Y+62	; 0x3e
     652:	5f ad       	ldd	r21, Y+63	; 0x3f
     654:	21 97       	sbiw	r28, 0x01	; 1
     656:	0e 94 2b 19 	call	0x3256	; 0x3256 <__mulsi3>
     65a:	9b 01       	movw	r18, r22
     65c:	ac 01       	movw	r20, r24
     65e:	87 01       	movw	r16, r14
     660:	ff 24       	eor	r15, r15
     662:	ee 24       	eor	r14, r14
     664:	89 a5       	ldd	r24, Y+41	; 0x29
     666:	9a a5       	ldd	r25, Y+42	; 0x2a
     668:	ab a5       	ldd	r26, Y+43	; 0x2b
     66a:	bc a5       	ldd	r27, Y+44	; 0x2c
     66c:	a0 70       	andi	r26, 0x00	; 0
     66e:	b0 70       	andi	r27, 0x00	; 0
     670:	57 01       	movw	r10, r14
     672:	68 01       	movw	r12, r16
     674:	a8 2a       	or	r10, r24
     676:	b9 2a       	or	r11, r25
     678:	ca 2a       	or	r12, r26
     67a:	db 2a       	or	r13, r27
     67c:	a2 16       	cp	r10, r18
     67e:	b3 06       	cpc	r11, r19
     680:	c4 06       	cpc	r12, r20
     682:	d5 06       	cpc	r13, r21
     684:	e0 f4       	brcc	.+56     	; 0x6be <__udivdi3+0x5d4>
     686:	08 94       	sec
     688:	61 08       	sbc	r6, r1
     68a:	71 08       	sbc	r7, r1
     68c:	81 08       	sbc	r8, r1
     68e:	91 08       	sbc	r9, r1
     690:	a2 0c       	add	r10, r2
     692:	b3 1c       	adc	r11, r3
     694:	c4 1c       	adc	r12, r4
     696:	d5 1c       	adc	r13, r5
     698:	a2 14       	cp	r10, r2
     69a:	b3 04       	cpc	r11, r3
     69c:	c4 04       	cpc	r12, r4
     69e:	d5 04       	cpc	r13, r5
     6a0:	70 f0       	brcs	.+28     	; 0x6be <__udivdi3+0x5d4>
     6a2:	a2 16       	cp	r10, r18
     6a4:	b3 06       	cpc	r11, r19
     6a6:	c4 06       	cpc	r12, r20
     6a8:	d5 06       	cpc	r13, r21
     6aa:	48 f4       	brcc	.+18     	; 0x6be <__udivdi3+0x5d4>
     6ac:	08 94       	sec
     6ae:	61 08       	sbc	r6, r1
     6b0:	71 08       	sbc	r7, r1
     6b2:	81 08       	sbc	r8, r1
     6b4:	91 08       	sbc	r9, r1
     6b6:	a2 0c       	add	r10, r2
     6b8:	b3 1c       	adc	r11, r3
     6ba:	c4 1c       	adc	r12, r4
     6bc:	d5 1c       	adc	r13, r5
     6be:	8d a5       	ldd	r24, Y+45	; 0x2d
     6c0:	9e a5       	ldd	r25, Y+46	; 0x2e
     6c2:	af a5       	ldd	r26, Y+47	; 0x2f
     6c4:	b8 a9       	ldd	r27, Y+48	; 0x30
     6c6:	6f 96       	adiw	r28, 0x1f	; 31
     6c8:	0f ac       	ldd	r0, Y+63	; 0x3f
     6ca:	6f 97       	sbiw	r28, 0x1f	; 31
     6cc:	04 c0       	rjmp	.+8      	; 0x6d6 <__udivdi3+0x5ec>
     6ce:	88 0f       	add	r24, r24
     6d0:	99 1f       	adc	r25, r25
     6d2:	aa 1f       	adc	r26, r26
     6d4:	bb 1f       	adc	r27, r27
     6d6:	0a 94       	dec	r0
     6d8:	d2 f7       	brpl	.-12     	; 0x6ce <__udivdi3+0x5e4>
     6da:	8d a7       	std	Y+45, r24	; 0x2d
     6dc:	9e a7       	std	Y+46, r25	; 0x2e
     6de:	af a7       	std	Y+47, r26	; 0x2f
     6e0:	b8 ab       	std	Y+48, r27	; 0x30
     6e2:	a2 1a       	sub	r10, r18
     6e4:	b3 0a       	sbc	r11, r19
     6e6:	c4 0a       	sbc	r12, r20
     6e8:	d5 0a       	sbc	r13, r21
     6ea:	25 96       	adiw	r28, 0x05	; 5
     6ec:	ec ac       	ldd	r14, Y+60	; 0x3c
     6ee:	fd ac       	ldd	r15, Y+61	; 0x3d
     6f0:	0e ad       	ldd	r16, Y+62	; 0x3e
     6f2:	1f ad       	ldd	r17, Y+63	; 0x3f
     6f4:	25 97       	sbiw	r28, 0x05	; 5
     6f6:	d7 01       	movw	r26, r14
     6f8:	99 27       	eor	r25, r25
     6fa:	88 27       	eor	r24, r24
     6fc:	68 2a       	or	r6, r24
     6fe:	79 2a       	or	r7, r25
     700:	8a 2a       	or	r8, r26
     702:	9b 2a       	or	r9, r27
     704:	82 01       	movw	r16, r4
     706:	22 27       	eor	r18, r18
     708:	33 27       	eor	r19, r19
     70a:	29 96       	adiw	r28, 0x09	; 9
     70c:	0c af       	std	Y+60, r16	; 0x3c
     70e:	1d af       	std	Y+61, r17	; 0x3d
     710:	2e af       	std	Y+62, r18	; 0x3e
     712:	3f af       	std	Y+63, r19	; 0x3f
     714:	29 97       	sbiw	r28, 0x09	; 9
     716:	a2 01       	movw	r20, r4
     718:	91 01       	movw	r18, r2
     71a:	40 70       	andi	r20, 0x00	; 0
     71c:	50 70       	andi	r21, 0x00	; 0
     71e:	2d 96       	adiw	r28, 0x0d	; 13
     720:	2c af       	std	Y+60, r18	; 0x3c
     722:	3d af       	std	Y+61, r19	; 0x3d
     724:	4e af       	std	Y+62, r20	; 0x3e
     726:	5f af       	std	Y+63, r21	; 0x3f
     728:	2d 97       	sbiw	r28, 0x0d	; 13
     72a:	c6 01       	movw	r24, r12
     72c:	b5 01       	movw	r22, r10
     72e:	29 96       	adiw	r28, 0x09	; 9
     730:	2c ad       	ldd	r18, Y+60	; 0x3c
     732:	3d ad       	ldd	r19, Y+61	; 0x3d
     734:	4e ad       	ldd	r20, Y+62	; 0x3e
     736:	5f ad       	ldd	r21, Y+63	; 0x3f
     738:	29 97       	sbiw	r28, 0x09	; 9
     73a:	0e 94 4a 19 	call	0x3294	; 0x3294 <__udivmodsi4>
     73e:	7b 01       	movw	r14, r22
     740:	8c 01       	movw	r16, r24
     742:	c6 01       	movw	r24, r12
     744:	b5 01       	movw	r22, r10
     746:	29 96       	adiw	r28, 0x09	; 9
     748:	2c ad       	ldd	r18, Y+60	; 0x3c
     74a:	3d ad       	ldd	r19, Y+61	; 0x3d
     74c:	4e ad       	ldd	r20, Y+62	; 0x3e
     74e:	5f ad       	ldd	r21, Y+63	; 0x3f
     750:	29 97       	sbiw	r28, 0x09	; 9
     752:	0e 94 4a 19 	call	0x3294	; 0x3294 <__udivmodsi4>
     756:	c9 01       	movw	r24, r18
     758:	da 01       	movw	r26, r20
     75a:	61 96       	adiw	r28, 0x11	; 17
     75c:	8c af       	std	Y+60, r24	; 0x3c
     75e:	9d af       	std	Y+61, r25	; 0x3d
     760:	ae af       	std	Y+62, r26	; 0x3e
     762:	bf af       	std	Y+63, r27	; 0x3f
     764:	61 97       	sbiw	r28, 0x11	; 17
     766:	bc 01       	movw	r22, r24
     768:	cd 01       	movw	r24, r26
     76a:	2d 96       	adiw	r28, 0x0d	; 13
     76c:	2c ad       	ldd	r18, Y+60	; 0x3c
     76e:	3d ad       	ldd	r19, Y+61	; 0x3d
     770:	4e ad       	ldd	r20, Y+62	; 0x3e
     772:	5f ad       	ldd	r21, Y+63	; 0x3f
     774:	2d 97       	sbiw	r28, 0x0d	; 13
     776:	0e 94 2b 19 	call	0x3256	; 0x3256 <__mulsi3>
     77a:	9b 01       	movw	r18, r22
     77c:	ac 01       	movw	r20, r24
     77e:	87 01       	movw	r16, r14
     780:	ff 24       	eor	r15, r15
     782:	ee 24       	eor	r14, r14
     784:	ad a4       	ldd	r10, Y+45	; 0x2d
     786:	be a4       	ldd	r11, Y+46	; 0x2e
     788:	cf a4       	ldd	r12, Y+47	; 0x2f
     78a:	d8 a8       	ldd	r13, Y+48	; 0x30
     78c:	c6 01       	movw	r24, r12
     78e:	aa 27       	eor	r26, r26
     790:	bb 27       	eor	r27, r27
     792:	57 01       	movw	r10, r14
     794:	68 01       	movw	r12, r16
     796:	a8 2a       	or	r10, r24
     798:	b9 2a       	or	r11, r25
     79a:	ca 2a       	or	r12, r26
     79c:	db 2a       	or	r13, r27
     79e:	a2 16       	cp	r10, r18
     7a0:	b3 06       	cpc	r11, r19
     7a2:	c4 06       	cpc	r12, r20
     7a4:	d5 06       	cpc	r13, r21
     7a6:	60 f5       	brcc	.+88     	; 0x800 <__udivdi3+0x716>
     7a8:	61 96       	adiw	r28, 0x11	; 17
     7aa:	6c ad       	ldd	r22, Y+60	; 0x3c
     7ac:	7d ad       	ldd	r23, Y+61	; 0x3d
     7ae:	8e ad       	ldd	r24, Y+62	; 0x3e
     7b0:	9f ad       	ldd	r25, Y+63	; 0x3f
     7b2:	61 97       	sbiw	r28, 0x11	; 17
     7b4:	61 50       	subi	r22, 0x01	; 1
     7b6:	70 40       	sbci	r23, 0x00	; 0
     7b8:	80 40       	sbci	r24, 0x00	; 0
     7ba:	90 40       	sbci	r25, 0x00	; 0
     7bc:	61 96       	adiw	r28, 0x11	; 17
     7be:	6c af       	std	Y+60, r22	; 0x3c
     7c0:	7d af       	std	Y+61, r23	; 0x3d
     7c2:	8e af       	std	Y+62, r24	; 0x3e
     7c4:	9f af       	std	Y+63, r25	; 0x3f
     7c6:	61 97       	sbiw	r28, 0x11	; 17
     7c8:	a2 0c       	add	r10, r2
     7ca:	b3 1c       	adc	r11, r3
     7cc:	c4 1c       	adc	r12, r4
     7ce:	d5 1c       	adc	r13, r5
     7d0:	a2 14       	cp	r10, r2
     7d2:	b3 04       	cpc	r11, r3
     7d4:	c4 04       	cpc	r12, r4
     7d6:	d5 04       	cpc	r13, r5
     7d8:	98 f0       	brcs	.+38     	; 0x800 <__udivdi3+0x716>
     7da:	a2 16       	cp	r10, r18
     7dc:	b3 06       	cpc	r11, r19
     7de:	c4 06       	cpc	r12, r20
     7e0:	d5 06       	cpc	r13, r21
     7e2:	70 f4       	brcc	.+28     	; 0x800 <__udivdi3+0x716>
     7e4:	61 50       	subi	r22, 0x01	; 1
     7e6:	70 40       	sbci	r23, 0x00	; 0
     7e8:	80 40       	sbci	r24, 0x00	; 0
     7ea:	90 40       	sbci	r25, 0x00	; 0
     7ec:	61 96       	adiw	r28, 0x11	; 17
     7ee:	6c af       	std	Y+60, r22	; 0x3c
     7f0:	7d af       	std	Y+61, r23	; 0x3d
     7f2:	8e af       	std	Y+62, r24	; 0x3e
     7f4:	9f af       	std	Y+63, r25	; 0x3f
     7f6:	61 97       	sbiw	r28, 0x11	; 17
     7f8:	a2 0c       	add	r10, r2
     7fa:	b3 1c       	adc	r11, r3
     7fc:	c4 1c       	adc	r12, r4
     7fe:	d5 1c       	adc	r13, r5
     800:	a2 1a       	sub	r10, r18
     802:	b3 0a       	sbc	r11, r19
     804:	c4 0a       	sbc	r12, r20
     806:	d5 0a       	sbc	r13, r21
     808:	c6 01       	movw	r24, r12
     80a:	b5 01       	movw	r22, r10
     80c:	29 96       	adiw	r28, 0x09	; 9
     80e:	2c ad       	ldd	r18, Y+60	; 0x3c
     810:	3d ad       	ldd	r19, Y+61	; 0x3d
     812:	4e ad       	ldd	r20, Y+62	; 0x3e
     814:	5f ad       	ldd	r21, Y+63	; 0x3f
     816:	29 97       	sbiw	r28, 0x09	; 9
     818:	0e 94 4a 19 	call	0x3294	; 0x3294 <__udivmodsi4>
     81c:	7b 01       	movw	r14, r22
     81e:	8c 01       	movw	r16, r24
     820:	c6 01       	movw	r24, r12
     822:	b5 01       	movw	r22, r10
     824:	29 96       	adiw	r28, 0x09	; 9
     826:	2c ad       	ldd	r18, Y+60	; 0x3c
     828:	3d ad       	ldd	r19, Y+61	; 0x3d
     82a:	4e ad       	ldd	r20, Y+62	; 0x3e
     82c:	5f ad       	ldd	r21, Y+63	; 0x3f
     82e:	29 97       	sbiw	r28, 0x09	; 9
     830:	0e 94 4a 19 	call	0x3294	; 0x3294 <__udivmodsi4>
     834:	c9 01       	movw	r24, r18
     836:	da 01       	movw	r26, r20
     838:	5c 01       	movw	r10, r24
     83a:	6d 01       	movw	r12, r26
     83c:	c6 01       	movw	r24, r12
     83e:	b5 01       	movw	r22, r10
     840:	2d 96       	adiw	r28, 0x0d	; 13
     842:	2c ad       	ldd	r18, Y+60	; 0x3c
     844:	3d ad       	ldd	r19, Y+61	; 0x3d
     846:	4e ad       	ldd	r20, Y+62	; 0x3e
     848:	5f ad       	ldd	r21, Y+63	; 0x3f
     84a:	2d 97       	sbiw	r28, 0x0d	; 13
     84c:	0e 94 2b 19 	call	0x3256	; 0x3256 <__mulsi3>
     850:	9b 01       	movw	r18, r22
     852:	ac 01       	movw	r20, r24
     854:	87 01       	movw	r16, r14
     856:	ff 24       	eor	r15, r15
     858:	ee 24       	eor	r14, r14
     85a:	8d a5       	ldd	r24, Y+45	; 0x2d
     85c:	9e a5       	ldd	r25, Y+46	; 0x2e
     85e:	af a5       	ldd	r26, Y+47	; 0x2f
     860:	b8 a9       	ldd	r27, Y+48	; 0x30
     862:	a0 70       	andi	r26, 0x00	; 0
     864:	b0 70       	andi	r27, 0x00	; 0
     866:	e8 2a       	or	r14, r24
     868:	f9 2a       	or	r15, r25
     86a:	0a 2b       	or	r16, r26
     86c:	1b 2b       	or	r17, r27
     86e:	e2 16       	cp	r14, r18
     870:	f3 06       	cpc	r15, r19
     872:	04 07       	cpc	r16, r20
     874:	15 07       	cpc	r17, r21
     876:	c0 f4       	brcc	.+48     	; 0x8a8 <__stack+0x49>
     878:	08 94       	sec
     87a:	a1 08       	sbc	r10, r1
     87c:	b1 08       	sbc	r11, r1
     87e:	c1 08       	sbc	r12, r1
     880:	d1 08       	sbc	r13, r1
     882:	e2 0c       	add	r14, r2
     884:	f3 1c       	adc	r15, r3
     886:	04 1d       	adc	r16, r4
     888:	15 1d       	adc	r17, r5
     88a:	e2 14       	cp	r14, r2
     88c:	f3 04       	cpc	r15, r3
     88e:	04 05       	cpc	r16, r4
     890:	15 05       	cpc	r17, r5
     892:	50 f0       	brcs	.+20     	; 0x8a8 <__stack+0x49>
     894:	e2 16       	cp	r14, r18
     896:	f3 06       	cpc	r15, r19
     898:	04 07       	cpc	r16, r20
     89a:	15 07       	cpc	r17, r21
     89c:	28 f4       	brcc	.+10     	; 0x8a8 <__stack+0x49>
     89e:	08 94       	sec
     8a0:	a1 08       	sbc	r10, r1
     8a2:	b1 08       	sbc	r11, r1
     8a4:	c1 08       	sbc	r12, r1
     8a6:	d1 08       	sbc	r13, r1
     8a8:	61 96       	adiw	r28, 0x11	; 17
     8aa:	ec ac       	ldd	r14, Y+60	; 0x3c
     8ac:	fd ac       	ldd	r15, Y+61	; 0x3d
     8ae:	0e ad       	ldd	r16, Y+62	; 0x3e
     8b0:	1f ad       	ldd	r17, Y+63	; 0x3f
     8b2:	61 97       	sbiw	r28, 0x11	; 17
     8b4:	d7 01       	movw	r26, r14
     8b6:	99 27       	eor	r25, r25
     8b8:	88 27       	eor	r24, r24
     8ba:	96 01       	movw	r18, r12
     8bc:	85 01       	movw	r16, r10
     8be:	08 2b       	or	r16, r24
     8c0:	19 2b       	or	r17, r25
     8c2:	2a 2b       	or	r18, r26
     8c4:	3b 2b       	or	r19, r27
     8c6:	09 ab       	std	Y+49, r16	; 0x31
     8c8:	1a ab       	std	Y+50, r17	; 0x32
     8ca:	2b ab       	std	Y+51, r18	; 0x33
     8cc:	3c ab       	std	Y+52, r19	; 0x34
     8ce:	62 c2       	rjmp	.+1220   	; 0xd94 <__stack+0x535>
     8d0:	6e 14       	cp	r6, r14
     8d2:	7f 04       	cpc	r7, r15
     8d4:	80 06       	cpc	r8, r16
     8d6:	91 06       	cpc	r9, r17
     8d8:	08 f4       	brcc	.+2      	; 0x8dc <__stack+0x7d>
     8da:	51 c2       	rjmp	.+1186   	; 0xd7e <__stack+0x51f>
     8dc:	20 e0       	ldi	r18, 0x00	; 0
     8de:	e2 16       	cp	r14, r18
     8e0:	20 e0       	ldi	r18, 0x00	; 0
     8e2:	f2 06       	cpc	r15, r18
     8e4:	21 e0       	ldi	r18, 0x01	; 1
     8e6:	02 07       	cpc	r16, r18
     8e8:	20 e0       	ldi	r18, 0x00	; 0
     8ea:	12 07       	cpc	r17, r18
     8ec:	88 f4       	brcc	.+34     	; 0x910 <__stack+0xb1>
     8ee:	3f ef       	ldi	r19, 0xFF	; 255
     8f0:	e3 16       	cp	r14, r19
     8f2:	f1 04       	cpc	r15, r1
     8f4:	01 05       	cpc	r16, r1
     8f6:	11 05       	cpc	r17, r1
     8f8:	31 f0       	breq	.+12     	; 0x906 <__stack+0xa7>
     8fa:	28 f0       	brcs	.+10     	; 0x906 <__stack+0xa7>
     8fc:	48 e0       	ldi	r20, 0x08	; 8
     8fe:	50 e0       	ldi	r21, 0x00	; 0
     900:	60 e0       	ldi	r22, 0x00	; 0
     902:	70 e0       	ldi	r23, 0x00	; 0
     904:	17 c0       	rjmp	.+46     	; 0x934 <__stack+0xd5>
     906:	40 e0       	ldi	r20, 0x00	; 0
     908:	50 e0       	ldi	r21, 0x00	; 0
     90a:	60 e0       	ldi	r22, 0x00	; 0
     90c:	70 e0       	ldi	r23, 0x00	; 0
     90e:	12 c0       	rjmp	.+36     	; 0x934 <__stack+0xd5>
     910:	40 e0       	ldi	r20, 0x00	; 0
     912:	e4 16       	cp	r14, r20
     914:	40 e0       	ldi	r20, 0x00	; 0
     916:	f4 06       	cpc	r15, r20
     918:	40 e0       	ldi	r20, 0x00	; 0
     91a:	04 07       	cpc	r16, r20
     91c:	41 e0       	ldi	r20, 0x01	; 1
     91e:	14 07       	cpc	r17, r20
     920:	28 f0       	brcs	.+10     	; 0x92c <__stack+0xcd>
     922:	48 e1       	ldi	r20, 0x18	; 24
     924:	50 e0       	ldi	r21, 0x00	; 0
     926:	60 e0       	ldi	r22, 0x00	; 0
     928:	70 e0       	ldi	r23, 0x00	; 0
     92a:	04 c0       	rjmp	.+8      	; 0x934 <__stack+0xd5>
     92c:	40 e1       	ldi	r20, 0x10	; 16
     92e:	50 e0       	ldi	r21, 0x00	; 0
     930:	60 e0       	ldi	r22, 0x00	; 0
     932:	70 e0       	ldi	r23, 0x00	; 0
     934:	d8 01       	movw	r26, r16
     936:	c7 01       	movw	r24, r14
     938:	04 2e       	mov	r0, r20
     93a:	04 c0       	rjmp	.+8      	; 0x944 <__stack+0xe5>
     93c:	b6 95       	lsr	r27
     93e:	a7 95       	ror	r26
     940:	97 95       	ror	r25
     942:	87 95       	ror	r24
     944:	0a 94       	dec	r0
     946:	d2 f7       	brpl	.-12     	; 0x93c <__stack+0xdd>
     948:	88 59       	subi	r24, 0x98	; 152
     94a:	9f 4f       	sbci	r25, 0xFF	; 255
     94c:	dc 01       	movw	r26, r24
     94e:	2c 91       	ld	r18, X
     950:	30 e2       	ldi	r19, 0x20	; 32
     952:	a3 2e       	mov	r10, r19
     954:	b1 2c       	mov	r11, r1
     956:	c1 2c       	mov	r12, r1
     958:	d1 2c       	mov	r13, r1
     95a:	d6 01       	movw	r26, r12
     95c:	c5 01       	movw	r24, r10
     95e:	84 1b       	sub	r24, r20
     960:	95 0b       	sbc	r25, r21
     962:	a6 0b       	sbc	r26, r22
     964:	b7 0b       	sbc	r27, r23
     966:	82 1b       	sub	r24, r18
     968:	91 09       	sbc	r25, r1
     96a:	a1 09       	sbc	r26, r1
     96c:	b1 09       	sbc	r27, r1
     96e:	00 97       	sbiw	r24, 0x00	; 0
     970:	a1 05       	cpc	r26, r1
     972:	b1 05       	cpc	r27, r1
     974:	89 f4       	brne	.+34     	; 0x998 <__stack+0x139>
     976:	e6 14       	cp	r14, r6
     978:	f7 04       	cpc	r15, r7
     97a:	08 05       	cpc	r16, r8
     97c:	19 05       	cpc	r17, r9
     97e:	08 f4       	brcc	.+2      	; 0x982 <__stack+0x123>
     980:	f2 c1       	rjmp	.+996    	; 0xd66 <__stack+0x507>
     982:	6d a4       	ldd	r6, Y+45	; 0x2d
     984:	7e a4       	ldd	r7, Y+46	; 0x2e
     986:	8f a4       	ldd	r8, Y+47	; 0x2f
     988:	98 a8       	ldd	r9, Y+48	; 0x30
     98a:	62 14       	cp	r6, r2
     98c:	73 04       	cpc	r7, r3
     98e:	84 04       	cpc	r8, r4
     990:	95 04       	cpc	r9, r5
     992:	08 f0       	brcs	.+2      	; 0x996 <__stack+0x137>
     994:	e8 c1       	rjmp	.+976    	; 0xd66 <__stack+0x507>
     996:	f3 c1       	rjmp	.+998    	; 0xd7e <__stack+0x51f>
     998:	6e 96       	adiw	r28, 0x1e	; 30
     99a:	8f af       	std	Y+63, r24	; 0x3f
     99c:	6e 97       	sbiw	r28, 0x1e	; 30
     99e:	08 2e       	mov	r0, r24
     9a0:	04 c0       	rjmp	.+8      	; 0x9aa <__stack+0x14b>
     9a2:	ee 0c       	add	r14, r14
     9a4:	ff 1c       	adc	r15, r15
     9a6:	00 1f       	adc	r16, r16
     9a8:	11 1f       	adc	r17, r17
     9aa:	0a 94       	dec	r0
     9ac:	d2 f7       	brpl	.-12     	; 0x9a2 <__stack+0x143>
     9ae:	6a 2d       	mov	r22, r10
     9b0:	68 1b       	sub	r22, r24
     9b2:	d2 01       	movw	r26, r4
     9b4:	c1 01       	movw	r24, r2
     9b6:	06 2e       	mov	r0, r22
     9b8:	04 c0       	rjmp	.+8      	; 0x9c2 <__stack+0x163>
     9ba:	b6 95       	lsr	r27
     9bc:	a7 95       	ror	r26
     9be:	97 95       	ror	r25
     9c0:	87 95       	ror	r24
     9c2:	0a 94       	dec	r0
     9c4:	d2 f7       	brpl	.-12     	; 0x9ba <__stack+0x15b>
     9c6:	5c 01       	movw	r10, r24
     9c8:	6d 01       	movw	r12, r26
     9ca:	ae 28       	or	r10, r14
     9cc:	bf 28       	or	r11, r15
     9ce:	c0 2a       	or	r12, r16
     9d0:	d1 2a       	or	r13, r17
     9d2:	ad a2       	std	Y+37, r10	; 0x25
     9d4:	be a2       	std	Y+38, r11	; 0x26
     9d6:	cf a2       	std	Y+39, r12	; 0x27
     9d8:	d8 a6       	std	Y+40, r13	; 0x28
     9da:	72 01       	movw	r14, r4
     9dc:	61 01       	movw	r12, r2
     9de:	6e 96       	adiw	r28, 0x1e	; 30
     9e0:	0f ac       	ldd	r0, Y+63	; 0x3f
     9e2:	6e 97       	sbiw	r28, 0x1e	; 30
     9e4:	04 c0       	rjmp	.+8      	; 0x9ee <__stack+0x18f>
     9e6:	cc 0c       	add	r12, r12
     9e8:	dd 1c       	adc	r13, r13
     9ea:	ee 1c       	adc	r14, r14
     9ec:	ff 1c       	adc	r15, r15
     9ee:	0a 94       	dec	r0
     9f0:	d2 f7       	brpl	.-12     	; 0x9e6 <__stack+0x187>
     9f2:	c9 a2       	std	Y+33, r12	; 0x21
     9f4:	da a2       	std	Y+34, r13	; 0x22
     9f6:	eb a2       	std	Y+35, r14	; 0x23
     9f8:	fc a2       	std	Y+36, r15	; 0x24
     9fa:	64 01       	movw	r12, r8
     9fc:	53 01       	movw	r10, r6
     9fe:	06 2e       	mov	r0, r22
     a00:	04 c0       	rjmp	.+8      	; 0xa0a <__stack+0x1ab>
     a02:	d6 94       	lsr	r13
     a04:	c7 94       	ror	r12
     a06:	b7 94       	ror	r11
     a08:	a7 94       	ror	r10
     a0a:	0a 94       	dec	r0
     a0c:	d2 f7       	brpl	.-12     	; 0xa02 <__stack+0x1a3>
     a0e:	d4 01       	movw	r26, r8
     a10:	c3 01       	movw	r24, r6
     a12:	6e 96       	adiw	r28, 0x1e	; 30
     a14:	0f ac       	ldd	r0, Y+63	; 0x3f
     a16:	6e 97       	sbiw	r28, 0x1e	; 30
     a18:	04 c0       	rjmp	.+8      	; 0xa22 <__stack+0x1c3>
     a1a:	88 0f       	add	r24, r24
     a1c:	99 1f       	adc	r25, r25
     a1e:	aa 1f       	adc	r26, r26
     a20:	bb 1f       	adc	r27, r27
     a22:	0a 94       	dec	r0
     a24:	d2 f7       	brpl	.-12     	; 0xa1a <__stack+0x1bb>
     a26:	ed a4       	ldd	r14, Y+45	; 0x2d
     a28:	fe a4       	ldd	r15, Y+46	; 0x2e
     a2a:	0f a5       	ldd	r16, Y+47	; 0x2f
     a2c:	18 a9       	ldd	r17, Y+48	; 0x30
     a2e:	04 c0       	rjmp	.+8      	; 0xa38 <__stack+0x1d9>
     a30:	16 95       	lsr	r17
     a32:	07 95       	ror	r16
     a34:	f7 94       	ror	r15
     a36:	e7 94       	ror	r14
     a38:	6a 95       	dec	r22
     a3a:	d2 f7       	brpl	.-12     	; 0xa30 <__stack+0x1d1>
     a3c:	37 01       	movw	r6, r14
     a3e:	48 01       	movw	r8, r16
     a40:	68 2a       	or	r6, r24
     a42:	79 2a       	or	r7, r25
     a44:	8a 2a       	or	r8, r26
     a46:	9b 2a       	or	r9, r27
     a48:	6d 8e       	std	Y+29, r6	; 0x1d
     a4a:	7e 8e       	std	Y+30, r7	; 0x1e
     a4c:	8f 8e       	std	Y+31, r8	; 0x1f
     a4e:	98 a2       	std	Y+32, r9	; 0x20
     a50:	ed a0       	ldd	r14, Y+37	; 0x25
     a52:	fe a0       	ldd	r15, Y+38	; 0x26
     a54:	0f a1       	ldd	r16, Y+39	; 0x27
     a56:	18 a5       	ldd	r17, Y+40	; 0x28
     a58:	38 01       	movw	r6, r16
     a5a:	88 24       	eor	r8, r8
     a5c:	99 24       	eor	r9, r9
     a5e:	98 01       	movw	r18, r16
     a60:	87 01       	movw	r16, r14
     a62:	20 70       	andi	r18, 0x00	; 0
     a64:	30 70       	andi	r19, 0x00	; 0
     a66:	65 96       	adiw	r28, 0x15	; 21
     a68:	0c af       	std	Y+60, r16	; 0x3c
     a6a:	1d af       	std	Y+61, r17	; 0x3d
     a6c:	2e af       	std	Y+62, r18	; 0x3e
     a6e:	3f af       	std	Y+63, r19	; 0x3f
     a70:	65 97       	sbiw	r28, 0x15	; 21
     a72:	c6 01       	movw	r24, r12
     a74:	b5 01       	movw	r22, r10
     a76:	a4 01       	movw	r20, r8
     a78:	93 01       	movw	r18, r6
     a7a:	0e 94 4a 19 	call	0x3294	; 0x3294 <__udivmodsi4>
     a7e:	7b 01       	movw	r14, r22
     a80:	8c 01       	movw	r16, r24
     a82:	c6 01       	movw	r24, r12
     a84:	b5 01       	movw	r22, r10
     a86:	a4 01       	movw	r20, r8
     a88:	93 01       	movw	r18, r6
     a8a:	0e 94 4a 19 	call	0x3294	; 0x3294 <__udivmodsi4>
     a8e:	c9 01       	movw	r24, r18
     a90:	da 01       	movw	r26, r20
     a92:	1c 01       	movw	r2, r24
     a94:	2d 01       	movw	r4, r26
     a96:	c2 01       	movw	r24, r4
     a98:	b1 01       	movw	r22, r2
     a9a:	65 96       	adiw	r28, 0x15	; 21
     a9c:	2c ad       	ldd	r18, Y+60	; 0x3c
     a9e:	3d ad       	ldd	r19, Y+61	; 0x3d
     aa0:	4e ad       	ldd	r20, Y+62	; 0x3e
     aa2:	5f ad       	ldd	r21, Y+63	; 0x3f
     aa4:	65 97       	sbiw	r28, 0x15	; 21
     aa6:	0e 94 2b 19 	call	0x3256	; 0x3256 <__mulsi3>
     aaa:	9b 01       	movw	r18, r22
     aac:	ac 01       	movw	r20, r24
     aae:	87 01       	movw	r16, r14
     ab0:	ff 24       	eor	r15, r15
     ab2:	ee 24       	eor	r14, r14
     ab4:	ad 8c       	ldd	r10, Y+29	; 0x1d
     ab6:	be 8c       	ldd	r11, Y+30	; 0x1e
     ab8:	cf 8c       	ldd	r12, Y+31	; 0x1f
     aba:	d8 a0       	ldd	r13, Y+32	; 0x20
     abc:	c6 01       	movw	r24, r12
     abe:	aa 27       	eor	r26, r26
     ac0:	bb 27       	eor	r27, r27
     ac2:	57 01       	movw	r10, r14
     ac4:	68 01       	movw	r12, r16
     ac6:	a8 2a       	or	r10, r24
     ac8:	b9 2a       	or	r11, r25
     aca:	ca 2a       	or	r12, r26
     acc:	db 2a       	or	r13, r27
     ace:	a2 16       	cp	r10, r18
     ad0:	b3 06       	cpc	r11, r19
     ad2:	c4 06       	cpc	r12, r20
     ad4:	d5 06       	cpc	r13, r21
     ad6:	00 f5       	brcc	.+64     	; 0xb18 <__stack+0x2b9>
     ad8:	08 94       	sec
     ada:	21 08       	sbc	r2, r1
     adc:	31 08       	sbc	r3, r1
     ade:	41 08       	sbc	r4, r1
     ae0:	51 08       	sbc	r5, r1
     ae2:	ed a0       	ldd	r14, Y+37	; 0x25
     ae4:	fe a0       	ldd	r15, Y+38	; 0x26
     ae6:	0f a1       	ldd	r16, Y+39	; 0x27
     ae8:	18 a5       	ldd	r17, Y+40	; 0x28
     aea:	ae 0c       	add	r10, r14
     aec:	bf 1c       	adc	r11, r15
     aee:	c0 1e       	adc	r12, r16
     af0:	d1 1e       	adc	r13, r17
     af2:	ae 14       	cp	r10, r14
     af4:	bf 04       	cpc	r11, r15
     af6:	c0 06       	cpc	r12, r16
     af8:	d1 06       	cpc	r13, r17
     afa:	70 f0       	brcs	.+28     	; 0xb18 <__stack+0x2b9>
     afc:	a2 16       	cp	r10, r18
     afe:	b3 06       	cpc	r11, r19
     b00:	c4 06       	cpc	r12, r20
     b02:	d5 06       	cpc	r13, r21
     b04:	48 f4       	brcc	.+18     	; 0xb18 <__stack+0x2b9>
     b06:	08 94       	sec
     b08:	21 08       	sbc	r2, r1
     b0a:	31 08       	sbc	r3, r1
     b0c:	41 08       	sbc	r4, r1
     b0e:	51 08       	sbc	r5, r1
     b10:	ae 0c       	add	r10, r14
     b12:	bf 1c       	adc	r11, r15
     b14:	c0 1e       	adc	r12, r16
     b16:	d1 1e       	adc	r13, r17
     b18:	a2 1a       	sub	r10, r18
     b1a:	b3 0a       	sbc	r11, r19
     b1c:	c4 0a       	sbc	r12, r20
     b1e:	d5 0a       	sbc	r13, r21
     b20:	c6 01       	movw	r24, r12
     b22:	b5 01       	movw	r22, r10
     b24:	a4 01       	movw	r20, r8
     b26:	93 01       	movw	r18, r6
     b28:	0e 94 4a 19 	call	0x3294	; 0x3294 <__udivmodsi4>
     b2c:	7b 01       	movw	r14, r22
     b2e:	8c 01       	movw	r16, r24
     b30:	c6 01       	movw	r24, r12
     b32:	b5 01       	movw	r22, r10
     b34:	a4 01       	movw	r20, r8
     b36:	93 01       	movw	r18, r6
     b38:	0e 94 4a 19 	call	0x3294	; 0x3294 <__udivmodsi4>
     b3c:	c9 01       	movw	r24, r18
     b3e:	da 01       	movw	r26, r20
     b40:	3c 01       	movw	r6, r24
     b42:	4d 01       	movw	r8, r26
     b44:	c4 01       	movw	r24, r8
     b46:	b3 01       	movw	r22, r6
     b48:	65 96       	adiw	r28, 0x15	; 21
     b4a:	2c ad       	ldd	r18, Y+60	; 0x3c
     b4c:	3d ad       	ldd	r19, Y+61	; 0x3d
     b4e:	4e ad       	ldd	r20, Y+62	; 0x3e
     b50:	5f ad       	ldd	r21, Y+63	; 0x3f
     b52:	65 97       	sbiw	r28, 0x15	; 21
     b54:	0e 94 2b 19 	call	0x3256	; 0x3256 <__mulsi3>
     b58:	9b 01       	movw	r18, r22
     b5a:	ac 01       	movw	r20, r24
     b5c:	87 01       	movw	r16, r14
     b5e:	ff 24       	eor	r15, r15
     b60:	ee 24       	eor	r14, r14
     b62:	8d 8d       	ldd	r24, Y+29	; 0x1d
     b64:	9e 8d       	ldd	r25, Y+30	; 0x1e
     b66:	af 8d       	ldd	r26, Y+31	; 0x1f
     b68:	b8 a1       	ldd	r27, Y+32	; 0x20
     b6a:	a0 70       	andi	r26, 0x00	; 0
     b6c:	b0 70       	andi	r27, 0x00	; 0
     b6e:	57 01       	movw	r10, r14
     b70:	68 01       	movw	r12, r16
     b72:	a8 2a       	or	r10, r24
     b74:	b9 2a       	or	r11, r25
     b76:	ca 2a       	or	r12, r26
     b78:	db 2a       	or	r13, r27
     b7a:	a2 16       	cp	r10, r18
     b7c:	b3 06       	cpc	r11, r19
     b7e:	c4 06       	cpc	r12, r20
     b80:	d5 06       	cpc	r13, r21
     b82:	00 f5       	brcc	.+64     	; 0xbc4 <__stack+0x365>
     b84:	08 94       	sec
     b86:	61 08       	sbc	r6, r1
     b88:	71 08       	sbc	r7, r1
     b8a:	81 08       	sbc	r8, r1
     b8c:	91 08       	sbc	r9, r1
     b8e:	6d a1       	ldd	r22, Y+37	; 0x25
     b90:	7e a1       	ldd	r23, Y+38	; 0x26
     b92:	8f a1       	ldd	r24, Y+39	; 0x27
     b94:	98 a5       	ldd	r25, Y+40	; 0x28
     b96:	a6 0e       	add	r10, r22
     b98:	b7 1e       	adc	r11, r23
     b9a:	c8 1e       	adc	r12, r24
     b9c:	d9 1e       	adc	r13, r25
     b9e:	a6 16       	cp	r10, r22
     ba0:	b7 06       	cpc	r11, r23
     ba2:	c8 06       	cpc	r12, r24
     ba4:	d9 06       	cpc	r13, r25
     ba6:	70 f0       	brcs	.+28     	; 0xbc4 <__stack+0x365>
     ba8:	a2 16       	cp	r10, r18
     baa:	b3 06       	cpc	r11, r19
     bac:	c4 06       	cpc	r12, r20
     bae:	d5 06       	cpc	r13, r21
     bb0:	48 f4       	brcc	.+18     	; 0xbc4 <__stack+0x365>
     bb2:	08 94       	sec
     bb4:	61 08       	sbc	r6, r1
     bb6:	71 08       	sbc	r7, r1
     bb8:	81 08       	sbc	r8, r1
     bba:	91 08       	sbc	r9, r1
     bbc:	a6 0e       	add	r10, r22
     bbe:	b7 1e       	adc	r11, r23
     bc0:	c8 1e       	adc	r12, r24
     bc2:	d9 1e       	adc	r13, r25
     bc4:	d6 01       	movw	r26, r12
     bc6:	c5 01       	movw	r24, r10
     bc8:	82 1b       	sub	r24, r18
     bca:	93 0b       	sbc	r25, r19
     bcc:	a4 0b       	sbc	r26, r20
     bce:	b5 0b       	sbc	r27, r21
     bd0:	89 8f       	std	Y+25, r24	; 0x19
     bd2:	9a 8f       	std	Y+26, r25	; 0x1a
     bd4:	ab 8f       	std	Y+27, r26	; 0x1b
     bd6:	bc 8f       	std	Y+28, r27	; 0x1c
     bd8:	d1 01       	movw	r26, r2
     bda:	99 27       	eor	r25, r25
     bdc:	88 27       	eor	r24, r24
     bde:	64 01       	movw	r12, r8
     be0:	53 01       	movw	r10, r6
     be2:	a8 2a       	or	r10, r24
     be4:	b9 2a       	or	r11, r25
     be6:	ca 2a       	or	r12, r26
     be8:	db 2a       	or	r13, r27
     bea:	a9 aa       	std	Y+49, r10	; 0x31
     bec:	ba aa       	std	Y+50, r11	; 0x32
     bee:	cb aa       	std	Y+51, r12	; 0x33
     bf0:	dc aa       	std	Y+52, r13	; 0x34
     bf2:	86 01       	movw	r16, r12
     bf4:	75 01       	movw	r14, r10
     bf6:	2f ef       	ldi	r18, 0xFF	; 255
     bf8:	3f ef       	ldi	r19, 0xFF	; 255
     bfa:	40 e0       	ldi	r20, 0x00	; 0
     bfc:	50 e0       	ldi	r21, 0x00	; 0
     bfe:	e2 22       	and	r14, r18
     c00:	f3 22       	and	r15, r19
     c02:	04 23       	and	r16, r20
     c04:	15 23       	and	r17, r21
     c06:	a6 01       	movw	r20, r12
     c08:	66 27       	eor	r22, r22
     c0a:	77 27       	eor	r23, r23
     c0c:	6d 96       	adiw	r28, 0x1d	; 29
     c0e:	4c af       	std	Y+60, r20	; 0x3c
     c10:	5d af       	std	Y+61, r21	; 0x3d
     c12:	6e af       	std	Y+62, r22	; 0x3e
     c14:	7f af       	std	Y+63, r23	; 0x3f
     c16:	6d 97       	sbiw	r28, 0x1d	; 29
     c18:	a9 a0       	ldd	r10, Y+33	; 0x21
     c1a:	ba a0       	ldd	r11, Y+34	; 0x22
     c1c:	cb a0       	ldd	r12, Y+35	; 0x23
     c1e:	dc a0       	ldd	r13, Y+36	; 0x24
     c20:	6f ef       	ldi	r22, 0xFF	; 255
     c22:	7f ef       	ldi	r23, 0xFF	; 255
     c24:	80 e0       	ldi	r24, 0x00	; 0
     c26:	90 e0       	ldi	r25, 0x00	; 0
     c28:	a6 22       	and	r10, r22
     c2a:	b7 22       	and	r11, r23
     c2c:	c8 22       	and	r12, r24
     c2e:	d9 22       	and	r13, r25
     c30:	89 a1       	ldd	r24, Y+33	; 0x21
     c32:	9a a1       	ldd	r25, Y+34	; 0x22
     c34:	ab a1       	ldd	r26, Y+35	; 0x23
     c36:	bc a1       	ldd	r27, Y+36	; 0x24
     c38:	1d 01       	movw	r2, r26
     c3a:	44 24       	eor	r4, r4
     c3c:	55 24       	eor	r5, r5
     c3e:	c8 01       	movw	r24, r16
     c40:	b7 01       	movw	r22, r14
     c42:	a6 01       	movw	r20, r12
     c44:	95 01       	movw	r18, r10
     c46:	0e 94 2b 19 	call	0x3256	; 0x3256 <__mulsi3>
     c4a:	69 96       	adiw	r28, 0x19	; 25
     c4c:	6c af       	std	Y+60, r22	; 0x3c
     c4e:	7d af       	std	Y+61, r23	; 0x3d
     c50:	8e af       	std	Y+62, r24	; 0x3e
     c52:	9f af       	std	Y+63, r25	; 0x3f
     c54:	69 97       	sbiw	r28, 0x19	; 25
     c56:	c8 01       	movw	r24, r16
     c58:	b7 01       	movw	r22, r14
     c5a:	a2 01       	movw	r20, r4
     c5c:	91 01       	movw	r18, r2
     c5e:	0e 94 2b 19 	call	0x3256	; 0x3256 <__mulsi3>
     c62:	3b 01       	movw	r6, r22
     c64:	4c 01       	movw	r8, r24
     c66:	6d 96       	adiw	r28, 0x1d	; 29
     c68:	6c ad       	ldd	r22, Y+60	; 0x3c
     c6a:	7d ad       	ldd	r23, Y+61	; 0x3d
     c6c:	8e ad       	ldd	r24, Y+62	; 0x3e
     c6e:	9f ad       	ldd	r25, Y+63	; 0x3f
     c70:	6d 97       	sbiw	r28, 0x1d	; 29
     c72:	a6 01       	movw	r20, r12
     c74:	95 01       	movw	r18, r10
     c76:	0e 94 2b 19 	call	0x3256	; 0x3256 <__mulsi3>
     c7a:	7b 01       	movw	r14, r22
     c7c:	8c 01       	movw	r16, r24
     c7e:	6d 96       	adiw	r28, 0x1d	; 29
     c80:	6c ad       	ldd	r22, Y+60	; 0x3c
     c82:	7d ad       	ldd	r23, Y+61	; 0x3d
     c84:	8e ad       	ldd	r24, Y+62	; 0x3e
     c86:	9f ad       	ldd	r25, Y+63	; 0x3f
     c88:	6d 97       	sbiw	r28, 0x1d	; 29
     c8a:	a2 01       	movw	r20, r4
     c8c:	91 01       	movw	r18, r2
     c8e:	0e 94 2b 19 	call	0x3256	; 0x3256 <__mulsi3>
     c92:	5b 01       	movw	r10, r22
     c94:	6c 01       	movw	r12, r24
     c96:	a8 01       	movw	r20, r16
     c98:	97 01       	movw	r18, r14
     c9a:	26 0d       	add	r18, r6
     c9c:	37 1d       	adc	r19, r7
     c9e:	48 1d       	adc	r20, r8
     ca0:	59 1d       	adc	r21, r9
     ca2:	69 96       	adiw	r28, 0x19	; 25
     ca4:	6c ac       	ldd	r6, Y+60	; 0x3c
     ca6:	7d ac       	ldd	r7, Y+61	; 0x3d
     ca8:	8e ac       	ldd	r8, Y+62	; 0x3e
     caa:	9f ac       	ldd	r9, Y+63	; 0x3f
     cac:	69 97       	sbiw	r28, 0x19	; 25
     cae:	c4 01       	movw	r24, r8
     cb0:	aa 27       	eor	r26, r26
     cb2:	bb 27       	eor	r27, r27
     cb4:	28 0f       	add	r18, r24
     cb6:	39 1f       	adc	r19, r25
     cb8:	4a 1f       	adc	r20, r26
     cba:	5b 1f       	adc	r21, r27
     cbc:	2e 15       	cp	r18, r14
     cbe:	3f 05       	cpc	r19, r15
     cc0:	40 07       	cpc	r20, r16
     cc2:	51 07       	cpc	r21, r17
     cc4:	48 f4       	brcc	.+18     	; 0xcd8 <__stack+0x479>
     cc6:	e1 2c       	mov	r14, r1
     cc8:	f1 2c       	mov	r15, r1
     cca:	61 e0       	ldi	r22, 0x01	; 1
     ccc:	06 2f       	mov	r16, r22
     cce:	11 2d       	mov	r17, r1
     cd0:	ae 0c       	add	r10, r14
     cd2:	bf 1c       	adc	r11, r15
     cd4:	c0 1e       	adc	r12, r16
     cd6:	d1 1e       	adc	r13, r17
     cd8:	ca 01       	movw	r24, r20
     cda:	aa 27       	eor	r26, r26
     cdc:	bb 27       	eor	r27, r27
     cde:	bc 01       	movw	r22, r24
     ce0:	cd 01       	movw	r24, r26
     ce2:	6a 0d       	add	r22, r10
     ce4:	7b 1d       	adc	r23, r11
     ce6:	8c 1d       	adc	r24, r12
     ce8:	9d 1d       	adc	r25, r13
     cea:	69 8c       	ldd	r6, Y+25	; 0x19
     cec:	7a 8c       	ldd	r7, Y+26	; 0x1a
     cee:	8b 8c       	ldd	r8, Y+27	; 0x1b
     cf0:	9c 8c       	ldd	r9, Y+28	; 0x1c
     cf2:	66 16       	cp	r6, r22
     cf4:	77 06       	cpc	r7, r23
     cf6:	88 06       	cpc	r8, r24
     cf8:	99 06       	cpc	r9, r25
     cfa:	40 f1       	brcs	.+80     	; 0xd4c <__stack+0x4ed>
     cfc:	66 15       	cp	r22, r6
     cfe:	77 05       	cpc	r23, r7
     d00:	88 05       	cpc	r24, r8
     d02:	99 05       	cpc	r25, r9
     d04:	09 f0       	breq	.+2      	; 0xd08 <__stack+0x4a9>
     d06:	43 c0       	rjmp	.+134    	; 0xd8e <__stack+0x52f>
     d08:	d9 01       	movw	r26, r18
     d0a:	99 27       	eor	r25, r25
     d0c:	88 27       	eor	r24, r24
     d0e:	69 96       	adiw	r28, 0x19	; 25
     d10:	2c ad       	ldd	r18, Y+60	; 0x3c
     d12:	3d ad       	ldd	r19, Y+61	; 0x3d
     d14:	4e ad       	ldd	r20, Y+62	; 0x3e
     d16:	5f ad       	ldd	r21, Y+63	; 0x3f
     d18:	69 97       	sbiw	r28, 0x19	; 25
     d1a:	40 70       	andi	r20, 0x00	; 0
     d1c:	50 70       	andi	r21, 0x00	; 0
     d1e:	82 0f       	add	r24, r18
     d20:	93 1f       	adc	r25, r19
     d22:	a4 1f       	adc	r26, r20
     d24:	b5 1f       	adc	r27, r21
     d26:	2d a5       	ldd	r18, Y+45	; 0x2d
     d28:	3e a5       	ldd	r19, Y+46	; 0x2e
     d2a:	4f a5       	ldd	r20, Y+47	; 0x2f
     d2c:	58 a9       	ldd	r21, Y+48	; 0x30
     d2e:	6e 96       	adiw	r28, 0x1e	; 30
     d30:	0f ac       	ldd	r0, Y+63	; 0x3f
     d32:	6e 97       	sbiw	r28, 0x1e	; 30
     d34:	04 c0       	rjmp	.+8      	; 0xd3e <__stack+0x4df>
     d36:	22 0f       	add	r18, r18
     d38:	33 1f       	adc	r19, r19
     d3a:	44 1f       	adc	r20, r20
     d3c:	55 1f       	adc	r21, r21
     d3e:	0a 94       	dec	r0
     d40:	d2 f7       	brpl	.-12     	; 0xd36 <__stack+0x4d7>
     d42:	28 17       	cp	r18, r24
     d44:	39 07       	cpc	r19, r25
     d46:	4a 07       	cpc	r20, r26
     d48:	5b 07       	cpc	r21, r27
     d4a:	08 f5       	brcc	.+66     	; 0xd8e <__stack+0x52f>
     d4c:	09 a9       	ldd	r16, Y+49	; 0x31
     d4e:	1a a9       	ldd	r17, Y+50	; 0x32
     d50:	2b a9       	ldd	r18, Y+51	; 0x33
     d52:	3c a9       	ldd	r19, Y+52	; 0x34
     d54:	01 50       	subi	r16, 0x01	; 1
     d56:	10 40       	sbci	r17, 0x00	; 0
     d58:	20 40       	sbci	r18, 0x00	; 0
     d5a:	30 40       	sbci	r19, 0x00	; 0
     d5c:	09 ab       	std	Y+49, r16	; 0x31
     d5e:	1a ab       	std	Y+50, r17	; 0x32
     d60:	2b ab       	std	Y+51, r18	; 0x33
     d62:	3c ab       	std	Y+52, r19	; 0x34
     d64:	14 c0       	rjmp	.+40     	; 0xd8e <__stack+0x52f>
     d66:	66 24       	eor	r6, r6
     d68:	77 24       	eor	r7, r7
     d6a:	43 01       	movw	r8, r6
     d6c:	21 e0       	ldi	r18, 0x01	; 1
     d6e:	30 e0       	ldi	r19, 0x00	; 0
     d70:	40 e0       	ldi	r20, 0x00	; 0
     d72:	50 e0       	ldi	r21, 0x00	; 0
     d74:	29 ab       	std	Y+49, r18	; 0x31
     d76:	3a ab       	std	Y+50, r19	; 0x32
     d78:	4b ab       	std	Y+51, r20	; 0x33
     d7a:	5c ab       	std	Y+52, r21	; 0x34
     d7c:	0b c0       	rjmp	.+22     	; 0xd94 <__stack+0x535>
     d7e:	66 24       	eor	r6, r6
     d80:	77 24       	eor	r7, r7
     d82:	43 01       	movw	r8, r6
     d84:	19 aa       	std	Y+49, r1	; 0x31
     d86:	1a aa       	std	Y+50, r1	; 0x32
     d88:	1b aa       	std	Y+51, r1	; 0x33
     d8a:	1c aa       	std	Y+52, r1	; 0x34
     d8c:	03 c0       	rjmp	.+6      	; 0xd94 <__stack+0x535>
     d8e:	66 24       	eor	r6, r6
     d90:	77 24       	eor	r7, r7
     d92:	43 01       	movw	r8, r6
     d94:	fe 01       	movw	r30, r28
     d96:	71 96       	adiw	r30, 0x11	; 17
     d98:	88 e0       	ldi	r24, 0x08	; 8
     d9a:	df 01       	movw	r26, r30
     d9c:	1d 92       	st	X+, r1
     d9e:	8a 95       	dec	r24
     da0:	e9 f7       	brne	.-6      	; 0xd9c <__stack+0x53d>
     da2:	a9 a8       	ldd	r10, Y+49	; 0x31
     da4:	ba a8       	ldd	r11, Y+50	; 0x32
     da6:	cb a8       	ldd	r12, Y+51	; 0x33
     da8:	dc a8       	ldd	r13, Y+52	; 0x34
     daa:	a9 8a       	std	Y+17, r10	; 0x11
     dac:	ba 8a       	std	Y+18, r11	; 0x12
     dae:	cb 8a       	std	Y+19, r12	; 0x13
     db0:	dc 8a       	std	Y+20, r13	; 0x14
     db2:	6d 8a       	std	Y+21, r6	; 0x15
     db4:	7e 8a       	std	Y+22, r7	; 0x16
     db6:	8f 8a       	std	Y+23, r8	; 0x17
     db8:	98 8e       	std	Y+24, r9	; 0x18
     dba:	29 a9       	ldd	r18, Y+49	; 0x31
     dbc:	3a 89       	ldd	r19, Y+18	; 0x12
     dbe:	4b 89       	ldd	r20, Y+19	; 0x13
     dc0:	5c 89       	ldd	r21, Y+20	; 0x14
     dc2:	66 2d       	mov	r22, r6
     dc4:	7e 89       	ldd	r23, Y+22	; 0x16
     dc6:	8f 89       	ldd	r24, Y+23	; 0x17
     dc8:	98 8d       	ldd	r25, Y+24	; 0x18
     dca:	c2 5a       	subi	r28, 0xA2	; 162
     dcc:	df 4f       	sbci	r29, 0xFF	; 255
     dce:	e2 e1       	ldi	r30, 0x12	; 18
     dd0:	0c 94 88 19 	jmp	0x3310	; 0x3310 <__epilogue_restores__>

00000dd4 <_fpadd_parts>:
     dd4:	a0 e0       	ldi	r26, 0x00	; 0
     dd6:	b0 e0       	ldi	r27, 0x00	; 0
     dd8:	e0 ef       	ldi	r30, 0xF0	; 240
     dda:	f6 e0       	ldi	r31, 0x06	; 6
     ddc:	0c 94 6c 19 	jmp	0x32d8	; 0x32d8 <__prologue_saves__>
     de0:	dc 01       	movw	r26, r24
     de2:	2b 01       	movw	r4, r22
     de4:	fa 01       	movw	r30, r20
     de6:	9c 91       	ld	r25, X
     de8:	92 30       	cpi	r25, 0x02	; 2
     dea:	08 f4       	brcc	.+2      	; 0xdee <_fpadd_parts+0x1a>
     dec:	39 c1       	rjmp	.+626    	; 0x1060 <_fpadd_parts+0x28c>
     dee:	eb 01       	movw	r28, r22
     df0:	88 81       	ld	r24, Y
     df2:	82 30       	cpi	r24, 0x02	; 2
     df4:	08 f4       	brcc	.+2      	; 0xdf8 <_fpadd_parts+0x24>
     df6:	33 c1       	rjmp	.+614    	; 0x105e <_fpadd_parts+0x28a>
     df8:	94 30       	cpi	r25, 0x04	; 4
     dfa:	69 f4       	brne	.+26     	; 0xe16 <_fpadd_parts+0x42>
     dfc:	84 30       	cpi	r24, 0x04	; 4
     dfe:	09 f0       	breq	.+2      	; 0xe02 <_fpadd_parts+0x2e>
     e00:	2f c1       	rjmp	.+606    	; 0x1060 <_fpadd_parts+0x28c>
     e02:	11 96       	adiw	r26, 0x01	; 1
     e04:	9c 91       	ld	r25, X
     e06:	11 97       	sbiw	r26, 0x01	; 1
     e08:	89 81       	ldd	r24, Y+1	; 0x01
     e0a:	98 17       	cp	r25, r24
     e0c:	09 f4       	brne	.+2      	; 0xe10 <_fpadd_parts+0x3c>
     e0e:	28 c1       	rjmp	.+592    	; 0x1060 <_fpadd_parts+0x28c>
     e10:	a0 e6       	ldi	r26, 0x60	; 96
     e12:	b0 e0       	ldi	r27, 0x00	; 0
     e14:	25 c1       	rjmp	.+586    	; 0x1060 <_fpadd_parts+0x28c>
     e16:	84 30       	cpi	r24, 0x04	; 4
     e18:	09 f4       	brne	.+2      	; 0xe1c <_fpadd_parts+0x48>
     e1a:	21 c1       	rjmp	.+578    	; 0x105e <_fpadd_parts+0x28a>
     e1c:	82 30       	cpi	r24, 0x02	; 2
     e1e:	a9 f4       	brne	.+42     	; 0xe4a <_fpadd_parts+0x76>
     e20:	92 30       	cpi	r25, 0x02	; 2
     e22:	09 f0       	breq	.+2      	; 0xe26 <_fpadd_parts+0x52>
     e24:	1d c1       	rjmp	.+570    	; 0x1060 <_fpadd_parts+0x28c>
     e26:	9a 01       	movw	r18, r20
     e28:	ad 01       	movw	r20, r26
     e2a:	88 e0       	ldi	r24, 0x08	; 8
     e2c:	ea 01       	movw	r28, r20
     e2e:	09 90       	ld	r0, Y+
     e30:	ae 01       	movw	r20, r28
     e32:	e9 01       	movw	r28, r18
     e34:	09 92       	st	Y+, r0
     e36:	9e 01       	movw	r18, r28
     e38:	81 50       	subi	r24, 0x01	; 1
     e3a:	c1 f7       	brne	.-16     	; 0xe2c <_fpadd_parts+0x58>
     e3c:	e2 01       	movw	r28, r4
     e3e:	89 81       	ldd	r24, Y+1	; 0x01
     e40:	11 96       	adiw	r26, 0x01	; 1
     e42:	9c 91       	ld	r25, X
     e44:	89 23       	and	r24, r25
     e46:	81 83       	std	Z+1, r24	; 0x01
     e48:	08 c1       	rjmp	.+528    	; 0x105a <_fpadd_parts+0x286>
     e4a:	92 30       	cpi	r25, 0x02	; 2
     e4c:	09 f4       	brne	.+2      	; 0xe50 <_fpadd_parts+0x7c>
     e4e:	07 c1       	rjmp	.+526    	; 0x105e <_fpadd_parts+0x28a>
     e50:	12 96       	adiw	r26, 0x02	; 2
     e52:	2d 90       	ld	r2, X+
     e54:	3c 90       	ld	r3, X
     e56:	13 97       	sbiw	r26, 0x03	; 3
     e58:	eb 01       	movw	r28, r22
     e5a:	8a 81       	ldd	r24, Y+2	; 0x02
     e5c:	9b 81       	ldd	r25, Y+3	; 0x03
     e5e:	14 96       	adiw	r26, 0x04	; 4
     e60:	ad 90       	ld	r10, X+
     e62:	bd 90       	ld	r11, X+
     e64:	cd 90       	ld	r12, X+
     e66:	dc 90       	ld	r13, X
     e68:	17 97       	sbiw	r26, 0x07	; 7
     e6a:	ec 80       	ldd	r14, Y+4	; 0x04
     e6c:	fd 80       	ldd	r15, Y+5	; 0x05
     e6e:	0e 81       	ldd	r16, Y+6	; 0x06
     e70:	1f 81       	ldd	r17, Y+7	; 0x07
     e72:	91 01       	movw	r18, r2
     e74:	28 1b       	sub	r18, r24
     e76:	39 0b       	sbc	r19, r25
     e78:	b9 01       	movw	r22, r18
     e7a:	37 ff       	sbrs	r19, 7
     e7c:	04 c0       	rjmp	.+8      	; 0xe86 <_fpadd_parts+0xb2>
     e7e:	66 27       	eor	r22, r22
     e80:	77 27       	eor	r23, r23
     e82:	62 1b       	sub	r22, r18
     e84:	73 0b       	sbc	r23, r19
     e86:	60 32       	cpi	r22, 0x20	; 32
     e88:	71 05       	cpc	r23, r1
     e8a:	0c f0       	brlt	.+2      	; 0xe8e <_fpadd_parts+0xba>
     e8c:	61 c0       	rjmp	.+194    	; 0xf50 <_fpadd_parts+0x17c>
     e8e:	12 16       	cp	r1, r18
     e90:	13 06       	cpc	r1, r19
     e92:	6c f5       	brge	.+90     	; 0xeee <_fpadd_parts+0x11a>
     e94:	37 01       	movw	r6, r14
     e96:	48 01       	movw	r8, r16
     e98:	06 2e       	mov	r0, r22
     e9a:	04 c0       	rjmp	.+8      	; 0xea4 <_fpadd_parts+0xd0>
     e9c:	96 94       	lsr	r9
     e9e:	87 94       	ror	r8
     ea0:	77 94       	ror	r7
     ea2:	67 94       	ror	r6
     ea4:	0a 94       	dec	r0
     ea6:	d2 f7       	brpl	.-12     	; 0xe9c <_fpadd_parts+0xc8>
     ea8:	21 e0       	ldi	r18, 0x01	; 1
     eaa:	30 e0       	ldi	r19, 0x00	; 0
     eac:	40 e0       	ldi	r20, 0x00	; 0
     eae:	50 e0       	ldi	r21, 0x00	; 0
     eb0:	04 c0       	rjmp	.+8      	; 0xeba <_fpadd_parts+0xe6>
     eb2:	22 0f       	add	r18, r18
     eb4:	33 1f       	adc	r19, r19
     eb6:	44 1f       	adc	r20, r20
     eb8:	55 1f       	adc	r21, r21
     eba:	6a 95       	dec	r22
     ebc:	d2 f7       	brpl	.-12     	; 0xeb2 <_fpadd_parts+0xde>
     ebe:	21 50       	subi	r18, 0x01	; 1
     ec0:	30 40       	sbci	r19, 0x00	; 0
     ec2:	40 40       	sbci	r20, 0x00	; 0
     ec4:	50 40       	sbci	r21, 0x00	; 0
     ec6:	2e 21       	and	r18, r14
     ec8:	3f 21       	and	r19, r15
     eca:	40 23       	and	r20, r16
     ecc:	51 23       	and	r21, r17
     ece:	21 15       	cp	r18, r1
     ed0:	31 05       	cpc	r19, r1
     ed2:	41 05       	cpc	r20, r1
     ed4:	51 05       	cpc	r21, r1
     ed6:	21 f0       	breq	.+8      	; 0xee0 <_fpadd_parts+0x10c>
     ed8:	21 e0       	ldi	r18, 0x01	; 1
     eda:	30 e0       	ldi	r19, 0x00	; 0
     edc:	40 e0       	ldi	r20, 0x00	; 0
     ede:	50 e0       	ldi	r21, 0x00	; 0
     ee0:	79 01       	movw	r14, r18
     ee2:	8a 01       	movw	r16, r20
     ee4:	e6 28       	or	r14, r6
     ee6:	f7 28       	or	r15, r7
     ee8:	08 29       	or	r16, r8
     eea:	19 29       	or	r17, r9
     eec:	3c c0       	rjmp	.+120    	; 0xf66 <_fpadd_parts+0x192>
     eee:	23 2b       	or	r18, r19
     ef0:	d1 f1       	breq	.+116    	; 0xf66 <_fpadd_parts+0x192>
     ef2:	26 0e       	add	r2, r22
     ef4:	37 1e       	adc	r3, r23
     ef6:	35 01       	movw	r6, r10
     ef8:	46 01       	movw	r8, r12
     efa:	06 2e       	mov	r0, r22
     efc:	04 c0       	rjmp	.+8      	; 0xf06 <_fpadd_parts+0x132>
     efe:	96 94       	lsr	r9
     f00:	87 94       	ror	r8
     f02:	77 94       	ror	r7
     f04:	67 94       	ror	r6
     f06:	0a 94       	dec	r0
     f08:	d2 f7       	brpl	.-12     	; 0xefe <_fpadd_parts+0x12a>
     f0a:	21 e0       	ldi	r18, 0x01	; 1
     f0c:	30 e0       	ldi	r19, 0x00	; 0
     f0e:	40 e0       	ldi	r20, 0x00	; 0
     f10:	50 e0       	ldi	r21, 0x00	; 0
     f12:	04 c0       	rjmp	.+8      	; 0xf1c <_fpadd_parts+0x148>
     f14:	22 0f       	add	r18, r18
     f16:	33 1f       	adc	r19, r19
     f18:	44 1f       	adc	r20, r20
     f1a:	55 1f       	adc	r21, r21
     f1c:	6a 95       	dec	r22
     f1e:	d2 f7       	brpl	.-12     	; 0xf14 <_fpadd_parts+0x140>
     f20:	21 50       	subi	r18, 0x01	; 1
     f22:	30 40       	sbci	r19, 0x00	; 0
     f24:	40 40       	sbci	r20, 0x00	; 0
     f26:	50 40       	sbci	r21, 0x00	; 0
     f28:	2a 21       	and	r18, r10
     f2a:	3b 21       	and	r19, r11
     f2c:	4c 21       	and	r20, r12
     f2e:	5d 21       	and	r21, r13
     f30:	21 15       	cp	r18, r1
     f32:	31 05       	cpc	r19, r1
     f34:	41 05       	cpc	r20, r1
     f36:	51 05       	cpc	r21, r1
     f38:	21 f0       	breq	.+8      	; 0xf42 <_fpadd_parts+0x16e>
     f3a:	21 e0       	ldi	r18, 0x01	; 1
     f3c:	30 e0       	ldi	r19, 0x00	; 0
     f3e:	40 e0       	ldi	r20, 0x00	; 0
     f40:	50 e0       	ldi	r21, 0x00	; 0
     f42:	59 01       	movw	r10, r18
     f44:	6a 01       	movw	r12, r20
     f46:	a6 28       	or	r10, r6
     f48:	b7 28       	or	r11, r7
     f4a:	c8 28       	or	r12, r8
     f4c:	d9 28       	or	r13, r9
     f4e:	0b c0       	rjmp	.+22     	; 0xf66 <_fpadd_parts+0x192>
     f50:	82 15       	cp	r24, r2
     f52:	93 05       	cpc	r25, r3
     f54:	2c f0       	brlt	.+10     	; 0xf60 <_fpadd_parts+0x18c>
     f56:	1c 01       	movw	r2, r24
     f58:	aa 24       	eor	r10, r10
     f5a:	bb 24       	eor	r11, r11
     f5c:	65 01       	movw	r12, r10
     f5e:	03 c0       	rjmp	.+6      	; 0xf66 <_fpadd_parts+0x192>
     f60:	ee 24       	eor	r14, r14
     f62:	ff 24       	eor	r15, r15
     f64:	87 01       	movw	r16, r14
     f66:	11 96       	adiw	r26, 0x01	; 1
     f68:	9c 91       	ld	r25, X
     f6a:	d2 01       	movw	r26, r4
     f6c:	11 96       	adiw	r26, 0x01	; 1
     f6e:	8c 91       	ld	r24, X
     f70:	98 17       	cp	r25, r24
     f72:	09 f4       	brne	.+2      	; 0xf76 <_fpadd_parts+0x1a2>
     f74:	45 c0       	rjmp	.+138    	; 0x1000 <_fpadd_parts+0x22c>
     f76:	99 23       	and	r25, r25
     f78:	39 f0       	breq	.+14     	; 0xf88 <_fpadd_parts+0x1b4>
     f7a:	a8 01       	movw	r20, r16
     f7c:	97 01       	movw	r18, r14
     f7e:	2a 19       	sub	r18, r10
     f80:	3b 09       	sbc	r19, r11
     f82:	4c 09       	sbc	r20, r12
     f84:	5d 09       	sbc	r21, r13
     f86:	06 c0       	rjmp	.+12     	; 0xf94 <_fpadd_parts+0x1c0>
     f88:	a6 01       	movw	r20, r12
     f8a:	95 01       	movw	r18, r10
     f8c:	2e 19       	sub	r18, r14
     f8e:	3f 09       	sbc	r19, r15
     f90:	40 0b       	sbc	r20, r16
     f92:	51 0b       	sbc	r21, r17
     f94:	57 fd       	sbrc	r21, 7
     f96:	08 c0       	rjmp	.+16     	; 0xfa8 <_fpadd_parts+0x1d4>
     f98:	11 82       	std	Z+1, r1	; 0x01
     f9a:	33 82       	std	Z+3, r3	; 0x03
     f9c:	22 82       	std	Z+2, r2	; 0x02
     f9e:	24 83       	std	Z+4, r18	; 0x04
     fa0:	35 83       	std	Z+5, r19	; 0x05
     fa2:	46 83       	std	Z+6, r20	; 0x06
     fa4:	57 83       	std	Z+7, r21	; 0x07
     fa6:	1d c0       	rjmp	.+58     	; 0xfe2 <_fpadd_parts+0x20e>
     fa8:	81 e0       	ldi	r24, 0x01	; 1
     faa:	81 83       	std	Z+1, r24	; 0x01
     fac:	33 82       	std	Z+3, r3	; 0x03
     fae:	22 82       	std	Z+2, r2	; 0x02
     fb0:	88 27       	eor	r24, r24
     fb2:	99 27       	eor	r25, r25
     fb4:	dc 01       	movw	r26, r24
     fb6:	82 1b       	sub	r24, r18
     fb8:	93 0b       	sbc	r25, r19
     fba:	a4 0b       	sbc	r26, r20
     fbc:	b5 0b       	sbc	r27, r21
     fbe:	84 83       	std	Z+4, r24	; 0x04
     fc0:	95 83       	std	Z+5, r25	; 0x05
     fc2:	a6 83       	std	Z+6, r26	; 0x06
     fc4:	b7 83       	std	Z+7, r27	; 0x07
     fc6:	0d c0       	rjmp	.+26     	; 0xfe2 <_fpadd_parts+0x20e>
     fc8:	22 0f       	add	r18, r18
     fca:	33 1f       	adc	r19, r19
     fcc:	44 1f       	adc	r20, r20
     fce:	55 1f       	adc	r21, r21
     fd0:	24 83       	std	Z+4, r18	; 0x04
     fd2:	35 83       	std	Z+5, r19	; 0x05
     fd4:	46 83       	std	Z+6, r20	; 0x06
     fd6:	57 83       	std	Z+7, r21	; 0x07
     fd8:	82 81       	ldd	r24, Z+2	; 0x02
     fda:	93 81       	ldd	r25, Z+3	; 0x03
     fdc:	01 97       	sbiw	r24, 0x01	; 1
     fde:	93 83       	std	Z+3, r25	; 0x03
     fe0:	82 83       	std	Z+2, r24	; 0x02
     fe2:	24 81       	ldd	r18, Z+4	; 0x04
     fe4:	35 81       	ldd	r19, Z+5	; 0x05
     fe6:	46 81       	ldd	r20, Z+6	; 0x06
     fe8:	57 81       	ldd	r21, Z+7	; 0x07
     fea:	da 01       	movw	r26, r20
     fec:	c9 01       	movw	r24, r18
     fee:	01 97       	sbiw	r24, 0x01	; 1
     ff0:	a1 09       	sbc	r26, r1
     ff2:	b1 09       	sbc	r27, r1
     ff4:	8f 5f       	subi	r24, 0xFF	; 255
     ff6:	9f 4f       	sbci	r25, 0xFF	; 255
     ff8:	af 4f       	sbci	r26, 0xFF	; 255
     ffa:	bf 43       	sbci	r27, 0x3F	; 63
     ffc:	28 f3       	brcs	.-54     	; 0xfc8 <_fpadd_parts+0x1f4>
     ffe:	0b c0       	rjmp	.+22     	; 0x1016 <_fpadd_parts+0x242>
    1000:	91 83       	std	Z+1, r25	; 0x01
    1002:	33 82       	std	Z+3, r3	; 0x03
    1004:	22 82       	std	Z+2, r2	; 0x02
    1006:	ea 0c       	add	r14, r10
    1008:	fb 1c       	adc	r15, r11
    100a:	0c 1d       	adc	r16, r12
    100c:	1d 1d       	adc	r17, r13
    100e:	e4 82       	std	Z+4, r14	; 0x04
    1010:	f5 82       	std	Z+5, r15	; 0x05
    1012:	06 83       	std	Z+6, r16	; 0x06
    1014:	17 83       	std	Z+7, r17	; 0x07
    1016:	83 e0       	ldi	r24, 0x03	; 3
    1018:	80 83       	st	Z, r24
    101a:	24 81       	ldd	r18, Z+4	; 0x04
    101c:	35 81       	ldd	r19, Z+5	; 0x05
    101e:	46 81       	ldd	r20, Z+6	; 0x06
    1020:	57 81       	ldd	r21, Z+7	; 0x07
    1022:	57 ff       	sbrs	r21, 7
    1024:	1a c0       	rjmp	.+52     	; 0x105a <_fpadd_parts+0x286>
    1026:	c9 01       	movw	r24, r18
    1028:	aa 27       	eor	r26, r26
    102a:	97 fd       	sbrc	r25, 7
    102c:	a0 95       	com	r26
    102e:	ba 2f       	mov	r27, r26
    1030:	81 70       	andi	r24, 0x01	; 1
    1032:	90 70       	andi	r25, 0x00	; 0
    1034:	a0 70       	andi	r26, 0x00	; 0
    1036:	b0 70       	andi	r27, 0x00	; 0
    1038:	56 95       	lsr	r21
    103a:	47 95       	ror	r20
    103c:	37 95       	ror	r19
    103e:	27 95       	ror	r18
    1040:	82 2b       	or	r24, r18
    1042:	93 2b       	or	r25, r19
    1044:	a4 2b       	or	r26, r20
    1046:	b5 2b       	or	r27, r21
    1048:	84 83       	std	Z+4, r24	; 0x04
    104a:	95 83       	std	Z+5, r25	; 0x05
    104c:	a6 83       	std	Z+6, r26	; 0x06
    104e:	b7 83       	std	Z+7, r27	; 0x07
    1050:	82 81       	ldd	r24, Z+2	; 0x02
    1052:	93 81       	ldd	r25, Z+3	; 0x03
    1054:	01 96       	adiw	r24, 0x01	; 1
    1056:	93 83       	std	Z+3, r25	; 0x03
    1058:	82 83       	std	Z+2, r24	; 0x02
    105a:	df 01       	movw	r26, r30
    105c:	01 c0       	rjmp	.+2      	; 0x1060 <_fpadd_parts+0x28c>
    105e:	d2 01       	movw	r26, r4
    1060:	cd 01       	movw	r24, r26
    1062:	cd b7       	in	r28, 0x3d	; 61
    1064:	de b7       	in	r29, 0x3e	; 62
    1066:	e2 e1       	ldi	r30, 0x12	; 18
    1068:	0c 94 88 19 	jmp	0x3310	; 0x3310 <__epilogue_restores__>

0000106c <__subsf3>:
    106c:	a0 e2       	ldi	r26, 0x20	; 32
    106e:	b0 e0       	ldi	r27, 0x00	; 0
    1070:	ec e3       	ldi	r30, 0x3C	; 60
    1072:	f8 e0       	ldi	r31, 0x08	; 8
    1074:	0c 94 78 19 	jmp	0x32f0	; 0x32f0 <__prologue_saves__+0x18>
    1078:	69 83       	std	Y+1, r22	; 0x01
    107a:	7a 83       	std	Y+2, r23	; 0x02
    107c:	8b 83       	std	Y+3, r24	; 0x03
    107e:	9c 83       	std	Y+4, r25	; 0x04
    1080:	2d 83       	std	Y+5, r18	; 0x05
    1082:	3e 83       	std	Y+6, r19	; 0x06
    1084:	4f 83       	std	Y+7, r20	; 0x07
    1086:	58 87       	std	Y+8, r21	; 0x08
    1088:	e9 e0       	ldi	r30, 0x09	; 9
    108a:	ee 2e       	mov	r14, r30
    108c:	f1 2c       	mov	r15, r1
    108e:	ec 0e       	add	r14, r28
    1090:	fd 1e       	adc	r15, r29
    1092:	ce 01       	movw	r24, r28
    1094:	01 96       	adiw	r24, 0x01	; 1
    1096:	b7 01       	movw	r22, r14
    1098:	0e 94 5b 0c 	call	0x18b6	; 0x18b6 <__unpack_f>
    109c:	8e 01       	movw	r16, r28
    109e:	0f 5e       	subi	r16, 0xEF	; 239
    10a0:	1f 4f       	sbci	r17, 0xFF	; 255
    10a2:	ce 01       	movw	r24, r28
    10a4:	05 96       	adiw	r24, 0x05	; 5
    10a6:	b8 01       	movw	r22, r16
    10a8:	0e 94 5b 0c 	call	0x18b6	; 0x18b6 <__unpack_f>
    10ac:	8a 89       	ldd	r24, Y+18	; 0x12
    10ae:	91 e0       	ldi	r25, 0x01	; 1
    10b0:	89 27       	eor	r24, r25
    10b2:	8a 8b       	std	Y+18, r24	; 0x12
    10b4:	c7 01       	movw	r24, r14
    10b6:	b8 01       	movw	r22, r16
    10b8:	ae 01       	movw	r20, r28
    10ba:	47 5e       	subi	r20, 0xE7	; 231
    10bc:	5f 4f       	sbci	r21, 0xFF	; 255
    10be:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <_fpadd_parts>
    10c2:	0e 94 86 0b 	call	0x170c	; 0x170c <__pack_f>
    10c6:	a0 96       	adiw	r28, 0x20	; 32
    10c8:	e6 e0       	ldi	r30, 0x06	; 6
    10ca:	0c 94 94 19 	jmp	0x3328	; 0x3328 <__epilogue_restores__+0x18>

000010ce <__addsf3>:
    10ce:	a0 e2       	ldi	r26, 0x20	; 32
    10d0:	b0 e0       	ldi	r27, 0x00	; 0
    10d2:	ed e6       	ldi	r30, 0x6D	; 109
    10d4:	f8 e0       	ldi	r31, 0x08	; 8
    10d6:	0c 94 78 19 	jmp	0x32f0	; 0x32f0 <__prologue_saves__+0x18>
    10da:	69 83       	std	Y+1, r22	; 0x01
    10dc:	7a 83       	std	Y+2, r23	; 0x02
    10de:	8b 83       	std	Y+3, r24	; 0x03
    10e0:	9c 83       	std	Y+4, r25	; 0x04
    10e2:	2d 83       	std	Y+5, r18	; 0x05
    10e4:	3e 83       	std	Y+6, r19	; 0x06
    10e6:	4f 83       	std	Y+7, r20	; 0x07
    10e8:	58 87       	std	Y+8, r21	; 0x08
    10ea:	f9 e0       	ldi	r31, 0x09	; 9
    10ec:	ef 2e       	mov	r14, r31
    10ee:	f1 2c       	mov	r15, r1
    10f0:	ec 0e       	add	r14, r28
    10f2:	fd 1e       	adc	r15, r29
    10f4:	ce 01       	movw	r24, r28
    10f6:	01 96       	adiw	r24, 0x01	; 1
    10f8:	b7 01       	movw	r22, r14
    10fa:	0e 94 5b 0c 	call	0x18b6	; 0x18b6 <__unpack_f>
    10fe:	8e 01       	movw	r16, r28
    1100:	0f 5e       	subi	r16, 0xEF	; 239
    1102:	1f 4f       	sbci	r17, 0xFF	; 255
    1104:	ce 01       	movw	r24, r28
    1106:	05 96       	adiw	r24, 0x05	; 5
    1108:	b8 01       	movw	r22, r16
    110a:	0e 94 5b 0c 	call	0x18b6	; 0x18b6 <__unpack_f>
    110e:	c7 01       	movw	r24, r14
    1110:	b8 01       	movw	r22, r16
    1112:	ae 01       	movw	r20, r28
    1114:	47 5e       	subi	r20, 0xE7	; 231
    1116:	5f 4f       	sbci	r21, 0xFF	; 255
    1118:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <_fpadd_parts>
    111c:	0e 94 86 0b 	call	0x170c	; 0x170c <__pack_f>
    1120:	a0 96       	adiw	r28, 0x20	; 32
    1122:	e6 e0       	ldi	r30, 0x06	; 6
    1124:	0c 94 94 19 	jmp	0x3328	; 0x3328 <__epilogue_restores__+0x18>

00001128 <__mulsf3>:
    1128:	a0 e2       	ldi	r26, 0x20	; 32
    112a:	b0 e0       	ldi	r27, 0x00	; 0
    112c:	ea e9       	ldi	r30, 0x9A	; 154
    112e:	f8 e0       	ldi	r31, 0x08	; 8
    1130:	0c 94 6c 19 	jmp	0x32d8	; 0x32d8 <__prologue_saves__>
    1134:	69 83       	std	Y+1, r22	; 0x01
    1136:	7a 83       	std	Y+2, r23	; 0x02
    1138:	8b 83       	std	Y+3, r24	; 0x03
    113a:	9c 83       	std	Y+4, r25	; 0x04
    113c:	2d 83       	std	Y+5, r18	; 0x05
    113e:	3e 83       	std	Y+6, r19	; 0x06
    1140:	4f 83       	std	Y+7, r20	; 0x07
    1142:	58 87       	std	Y+8, r21	; 0x08
    1144:	ce 01       	movw	r24, r28
    1146:	01 96       	adiw	r24, 0x01	; 1
    1148:	be 01       	movw	r22, r28
    114a:	67 5f       	subi	r22, 0xF7	; 247
    114c:	7f 4f       	sbci	r23, 0xFF	; 255
    114e:	0e 94 5b 0c 	call	0x18b6	; 0x18b6 <__unpack_f>
    1152:	ce 01       	movw	r24, r28
    1154:	05 96       	adiw	r24, 0x05	; 5
    1156:	be 01       	movw	r22, r28
    1158:	6f 5e       	subi	r22, 0xEF	; 239
    115a:	7f 4f       	sbci	r23, 0xFF	; 255
    115c:	0e 94 5b 0c 	call	0x18b6	; 0x18b6 <__unpack_f>
    1160:	99 85       	ldd	r25, Y+9	; 0x09
    1162:	92 30       	cpi	r25, 0x02	; 2
    1164:	88 f0       	brcs	.+34     	; 0x1188 <__mulsf3+0x60>
    1166:	89 89       	ldd	r24, Y+17	; 0x11
    1168:	82 30       	cpi	r24, 0x02	; 2
    116a:	c8 f0       	brcs	.+50     	; 0x119e <__mulsf3+0x76>
    116c:	94 30       	cpi	r25, 0x04	; 4
    116e:	19 f4       	brne	.+6      	; 0x1176 <__mulsf3+0x4e>
    1170:	82 30       	cpi	r24, 0x02	; 2
    1172:	51 f4       	brne	.+20     	; 0x1188 <__mulsf3+0x60>
    1174:	04 c0       	rjmp	.+8      	; 0x117e <__mulsf3+0x56>
    1176:	84 30       	cpi	r24, 0x04	; 4
    1178:	29 f4       	brne	.+10     	; 0x1184 <__mulsf3+0x5c>
    117a:	92 30       	cpi	r25, 0x02	; 2
    117c:	81 f4       	brne	.+32     	; 0x119e <__mulsf3+0x76>
    117e:	80 e6       	ldi	r24, 0x60	; 96
    1180:	90 e0       	ldi	r25, 0x00	; 0
    1182:	c6 c0       	rjmp	.+396    	; 0x1310 <__mulsf3+0x1e8>
    1184:	92 30       	cpi	r25, 0x02	; 2
    1186:	49 f4       	brne	.+18     	; 0x119a <__mulsf3+0x72>
    1188:	20 e0       	ldi	r18, 0x00	; 0
    118a:	9a 85       	ldd	r25, Y+10	; 0x0a
    118c:	8a 89       	ldd	r24, Y+18	; 0x12
    118e:	98 13       	cpse	r25, r24
    1190:	21 e0       	ldi	r18, 0x01	; 1
    1192:	2a 87       	std	Y+10, r18	; 0x0a
    1194:	ce 01       	movw	r24, r28
    1196:	09 96       	adiw	r24, 0x09	; 9
    1198:	bb c0       	rjmp	.+374    	; 0x1310 <__mulsf3+0x1e8>
    119a:	82 30       	cpi	r24, 0x02	; 2
    119c:	49 f4       	brne	.+18     	; 0x11b0 <__mulsf3+0x88>
    119e:	20 e0       	ldi	r18, 0x00	; 0
    11a0:	9a 85       	ldd	r25, Y+10	; 0x0a
    11a2:	8a 89       	ldd	r24, Y+18	; 0x12
    11a4:	98 13       	cpse	r25, r24
    11a6:	21 e0       	ldi	r18, 0x01	; 1
    11a8:	2a 8b       	std	Y+18, r18	; 0x12
    11aa:	ce 01       	movw	r24, r28
    11ac:	41 96       	adiw	r24, 0x11	; 17
    11ae:	b0 c0       	rjmp	.+352    	; 0x1310 <__mulsf3+0x1e8>
    11b0:	2d 84       	ldd	r2, Y+13	; 0x0d
    11b2:	3e 84       	ldd	r3, Y+14	; 0x0e
    11b4:	4f 84       	ldd	r4, Y+15	; 0x0f
    11b6:	58 88       	ldd	r5, Y+16	; 0x10
    11b8:	6d 88       	ldd	r6, Y+21	; 0x15
    11ba:	7e 88       	ldd	r7, Y+22	; 0x16
    11bc:	8f 88       	ldd	r8, Y+23	; 0x17
    11be:	98 8c       	ldd	r9, Y+24	; 0x18
    11c0:	ee 24       	eor	r14, r14
    11c2:	ff 24       	eor	r15, r15
    11c4:	87 01       	movw	r16, r14
    11c6:	aa 24       	eor	r10, r10
    11c8:	bb 24       	eor	r11, r11
    11ca:	65 01       	movw	r12, r10
    11cc:	40 e0       	ldi	r20, 0x00	; 0
    11ce:	50 e0       	ldi	r21, 0x00	; 0
    11d0:	60 e0       	ldi	r22, 0x00	; 0
    11d2:	70 e0       	ldi	r23, 0x00	; 0
    11d4:	e0 e0       	ldi	r30, 0x00	; 0
    11d6:	f0 e0       	ldi	r31, 0x00	; 0
    11d8:	c1 01       	movw	r24, r2
    11da:	81 70       	andi	r24, 0x01	; 1
    11dc:	90 70       	andi	r25, 0x00	; 0
    11de:	89 2b       	or	r24, r25
    11e0:	e9 f0       	breq	.+58     	; 0x121c <__mulsf3+0xf4>
    11e2:	e6 0c       	add	r14, r6
    11e4:	f7 1c       	adc	r15, r7
    11e6:	08 1d       	adc	r16, r8
    11e8:	19 1d       	adc	r17, r9
    11ea:	9a 01       	movw	r18, r20
    11ec:	ab 01       	movw	r20, r22
    11ee:	2a 0d       	add	r18, r10
    11f0:	3b 1d       	adc	r19, r11
    11f2:	4c 1d       	adc	r20, r12
    11f4:	5d 1d       	adc	r21, r13
    11f6:	80 e0       	ldi	r24, 0x00	; 0
    11f8:	90 e0       	ldi	r25, 0x00	; 0
    11fa:	a0 e0       	ldi	r26, 0x00	; 0
    11fc:	b0 e0       	ldi	r27, 0x00	; 0
    11fe:	e6 14       	cp	r14, r6
    1200:	f7 04       	cpc	r15, r7
    1202:	08 05       	cpc	r16, r8
    1204:	19 05       	cpc	r17, r9
    1206:	20 f4       	brcc	.+8      	; 0x1210 <__mulsf3+0xe8>
    1208:	81 e0       	ldi	r24, 0x01	; 1
    120a:	90 e0       	ldi	r25, 0x00	; 0
    120c:	a0 e0       	ldi	r26, 0x00	; 0
    120e:	b0 e0       	ldi	r27, 0x00	; 0
    1210:	ba 01       	movw	r22, r20
    1212:	a9 01       	movw	r20, r18
    1214:	48 0f       	add	r20, r24
    1216:	59 1f       	adc	r21, r25
    1218:	6a 1f       	adc	r22, r26
    121a:	7b 1f       	adc	r23, r27
    121c:	aa 0c       	add	r10, r10
    121e:	bb 1c       	adc	r11, r11
    1220:	cc 1c       	adc	r12, r12
    1222:	dd 1c       	adc	r13, r13
    1224:	97 fe       	sbrs	r9, 7
    1226:	08 c0       	rjmp	.+16     	; 0x1238 <__mulsf3+0x110>
    1228:	81 e0       	ldi	r24, 0x01	; 1
    122a:	90 e0       	ldi	r25, 0x00	; 0
    122c:	a0 e0       	ldi	r26, 0x00	; 0
    122e:	b0 e0       	ldi	r27, 0x00	; 0
    1230:	a8 2a       	or	r10, r24
    1232:	b9 2a       	or	r11, r25
    1234:	ca 2a       	or	r12, r26
    1236:	db 2a       	or	r13, r27
    1238:	31 96       	adiw	r30, 0x01	; 1
    123a:	e0 32       	cpi	r30, 0x20	; 32
    123c:	f1 05       	cpc	r31, r1
    123e:	49 f0       	breq	.+18     	; 0x1252 <__mulsf3+0x12a>
    1240:	66 0c       	add	r6, r6
    1242:	77 1c       	adc	r7, r7
    1244:	88 1c       	adc	r8, r8
    1246:	99 1c       	adc	r9, r9
    1248:	56 94       	lsr	r5
    124a:	47 94       	ror	r4
    124c:	37 94       	ror	r3
    124e:	27 94       	ror	r2
    1250:	c3 cf       	rjmp	.-122    	; 0x11d8 <__mulsf3+0xb0>
    1252:	fa 85       	ldd	r31, Y+10	; 0x0a
    1254:	ea 89       	ldd	r30, Y+18	; 0x12
    1256:	2b 89       	ldd	r18, Y+19	; 0x13
    1258:	3c 89       	ldd	r19, Y+20	; 0x14
    125a:	8b 85       	ldd	r24, Y+11	; 0x0b
    125c:	9c 85       	ldd	r25, Y+12	; 0x0c
    125e:	28 0f       	add	r18, r24
    1260:	39 1f       	adc	r19, r25
    1262:	2e 5f       	subi	r18, 0xFE	; 254
    1264:	3f 4f       	sbci	r19, 0xFF	; 255
    1266:	17 c0       	rjmp	.+46     	; 0x1296 <__mulsf3+0x16e>
    1268:	ca 01       	movw	r24, r20
    126a:	81 70       	andi	r24, 0x01	; 1
    126c:	90 70       	andi	r25, 0x00	; 0
    126e:	89 2b       	or	r24, r25
    1270:	61 f0       	breq	.+24     	; 0x128a <__mulsf3+0x162>
    1272:	16 95       	lsr	r17
    1274:	07 95       	ror	r16
    1276:	f7 94       	ror	r15
    1278:	e7 94       	ror	r14
    127a:	80 e0       	ldi	r24, 0x00	; 0
    127c:	90 e0       	ldi	r25, 0x00	; 0
    127e:	a0 e0       	ldi	r26, 0x00	; 0
    1280:	b0 e8       	ldi	r27, 0x80	; 128
    1282:	e8 2a       	or	r14, r24
    1284:	f9 2a       	or	r15, r25
    1286:	0a 2b       	or	r16, r26
    1288:	1b 2b       	or	r17, r27
    128a:	76 95       	lsr	r23
    128c:	67 95       	ror	r22
    128e:	57 95       	ror	r21
    1290:	47 95       	ror	r20
    1292:	2f 5f       	subi	r18, 0xFF	; 255
    1294:	3f 4f       	sbci	r19, 0xFF	; 255
    1296:	77 fd       	sbrc	r23, 7
    1298:	e7 cf       	rjmp	.-50     	; 0x1268 <__mulsf3+0x140>
    129a:	0c c0       	rjmp	.+24     	; 0x12b4 <__mulsf3+0x18c>
    129c:	44 0f       	add	r20, r20
    129e:	55 1f       	adc	r21, r21
    12a0:	66 1f       	adc	r22, r22
    12a2:	77 1f       	adc	r23, r23
    12a4:	17 fd       	sbrc	r17, 7
    12a6:	41 60       	ori	r20, 0x01	; 1
    12a8:	ee 0c       	add	r14, r14
    12aa:	ff 1c       	adc	r15, r15
    12ac:	00 1f       	adc	r16, r16
    12ae:	11 1f       	adc	r17, r17
    12b0:	21 50       	subi	r18, 0x01	; 1
    12b2:	30 40       	sbci	r19, 0x00	; 0
    12b4:	40 30       	cpi	r20, 0x00	; 0
    12b6:	90 e0       	ldi	r25, 0x00	; 0
    12b8:	59 07       	cpc	r21, r25
    12ba:	90 e0       	ldi	r25, 0x00	; 0
    12bc:	69 07       	cpc	r22, r25
    12be:	90 e4       	ldi	r25, 0x40	; 64
    12c0:	79 07       	cpc	r23, r25
    12c2:	60 f3       	brcs	.-40     	; 0x129c <__mulsf3+0x174>
    12c4:	2b 8f       	std	Y+27, r18	; 0x1b
    12c6:	3c 8f       	std	Y+28, r19	; 0x1c
    12c8:	db 01       	movw	r26, r22
    12ca:	ca 01       	movw	r24, r20
    12cc:	8f 77       	andi	r24, 0x7F	; 127
    12ce:	90 70       	andi	r25, 0x00	; 0
    12d0:	a0 70       	andi	r26, 0x00	; 0
    12d2:	b0 70       	andi	r27, 0x00	; 0
    12d4:	80 34       	cpi	r24, 0x40	; 64
    12d6:	91 05       	cpc	r25, r1
    12d8:	a1 05       	cpc	r26, r1
    12da:	b1 05       	cpc	r27, r1
    12dc:	61 f4       	brne	.+24     	; 0x12f6 <__mulsf3+0x1ce>
    12de:	47 fd       	sbrc	r20, 7
    12e0:	0a c0       	rjmp	.+20     	; 0x12f6 <__mulsf3+0x1ce>
    12e2:	e1 14       	cp	r14, r1
    12e4:	f1 04       	cpc	r15, r1
    12e6:	01 05       	cpc	r16, r1
    12e8:	11 05       	cpc	r17, r1
    12ea:	29 f0       	breq	.+10     	; 0x12f6 <__mulsf3+0x1ce>
    12ec:	40 5c       	subi	r20, 0xC0	; 192
    12ee:	5f 4f       	sbci	r21, 0xFF	; 255
    12f0:	6f 4f       	sbci	r22, 0xFF	; 255
    12f2:	7f 4f       	sbci	r23, 0xFF	; 255
    12f4:	40 78       	andi	r20, 0x80	; 128
    12f6:	1a 8e       	std	Y+26, r1	; 0x1a
    12f8:	fe 17       	cp	r31, r30
    12fa:	11 f0       	breq	.+4      	; 0x1300 <__mulsf3+0x1d8>
    12fc:	81 e0       	ldi	r24, 0x01	; 1
    12fe:	8a 8f       	std	Y+26, r24	; 0x1a
    1300:	4d 8f       	std	Y+29, r20	; 0x1d
    1302:	5e 8f       	std	Y+30, r21	; 0x1e
    1304:	6f 8f       	std	Y+31, r22	; 0x1f
    1306:	78 a3       	std	Y+32, r23	; 0x20
    1308:	83 e0       	ldi	r24, 0x03	; 3
    130a:	89 8f       	std	Y+25, r24	; 0x19
    130c:	ce 01       	movw	r24, r28
    130e:	49 96       	adiw	r24, 0x19	; 25
    1310:	0e 94 86 0b 	call	0x170c	; 0x170c <__pack_f>
    1314:	a0 96       	adiw	r28, 0x20	; 32
    1316:	e2 e1       	ldi	r30, 0x12	; 18
    1318:	0c 94 88 19 	jmp	0x3310	; 0x3310 <__epilogue_restores__>

0000131c <__divsf3>:
    131c:	a8 e1       	ldi	r26, 0x18	; 24
    131e:	b0 e0       	ldi	r27, 0x00	; 0
    1320:	e4 e9       	ldi	r30, 0x94	; 148
    1322:	f9 e0       	ldi	r31, 0x09	; 9
    1324:	0c 94 74 19 	jmp	0x32e8	; 0x32e8 <__prologue_saves__+0x10>
    1328:	69 83       	std	Y+1, r22	; 0x01
    132a:	7a 83       	std	Y+2, r23	; 0x02
    132c:	8b 83       	std	Y+3, r24	; 0x03
    132e:	9c 83       	std	Y+4, r25	; 0x04
    1330:	2d 83       	std	Y+5, r18	; 0x05
    1332:	3e 83       	std	Y+6, r19	; 0x06
    1334:	4f 83       	std	Y+7, r20	; 0x07
    1336:	58 87       	std	Y+8, r21	; 0x08
    1338:	b9 e0       	ldi	r27, 0x09	; 9
    133a:	eb 2e       	mov	r14, r27
    133c:	f1 2c       	mov	r15, r1
    133e:	ec 0e       	add	r14, r28
    1340:	fd 1e       	adc	r15, r29
    1342:	ce 01       	movw	r24, r28
    1344:	01 96       	adiw	r24, 0x01	; 1
    1346:	b7 01       	movw	r22, r14
    1348:	0e 94 5b 0c 	call	0x18b6	; 0x18b6 <__unpack_f>
    134c:	8e 01       	movw	r16, r28
    134e:	0f 5e       	subi	r16, 0xEF	; 239
    1350:	1f 4f       	sbci	r17, 0xFF	; 255
    1352:	ce 01       	movw	r24, r28
    1354:	05 96       	adiw	r24, 0x05	; 5
    1356:	b8 01       	movw	r22, r16
    1358:	0e 94 5b 0c 	call	0x18b6	; 0x18b6 <__unpack_f>
    135c:	29 85       	ldd	r18, Y+9	; 0x09
    135e:	22 30       	cpi	r18, 0x02	; 2
    1360:	08 f4       	brcc	.+2      	; 0x1364 <__divsf3+0x48>
    1362:	7e c0       	rjmp	.+252    	; 0x1460 <__divsf3+0x144>
    1364:	39 89       	ldd	r19, Y+17	; 0x11
    1366:	32 30       	cpi	r19, 0x02	; 2
    1368:	10 f4       	brcc	.+4      	; 0x136e <__divsf3+0x52>
    136a:	b8 01       	movw	r22, r16
    136c:	7c c0       	rjmp	.+248    	; 0x1466 <__divsf3+0x14a>
    136e:	8a 85       	ldd	r24, Y+10	; 0x0a
    1370:	9a 89       	ldd	r25, Y+18	; 0x12
    1372:	89 27       	eor	r24, r25
    1374:	8a 87       	std	Y+10, r24	; 0x0a
    1376:	24 30       	cpi	r18, 0x04	; 4
    1378:	11 f0       	breq	.+4      	; 0x137e <__divsf3+0x62>
    137a:	22 30       	cpi	r18, 0x02	; 2
    137c:	31 f4       	brne	.+12     	; 0x138a <__divsf3+0x6e>
    137e:	23 17       	cp	r18, r19
    1380:	09 f0       	breq	.+2      	; 0x1384 <__divsf3+0x68>
    1382:	6e c0       	rjmp	.+220    	; 0x1460 <__divsf3+0x144>
    1384:	60 e6       	ldi	r22, 0x60	; 96
    1386:	70 e0       	ldi	r23, 0x00	; 0
    1388:	6e c0       	rjmp	.+220    	; 0x1466 <__divsf3+0x14a>
    138a:	34 30       	cpi	r19, 0x04	; 4
    138c:	39 f4       	brne	.+14     	; 0x139c <__divsf3+0x80>
    138e:	1d 86       	std	Y+13, r1	; 0x0d
    1390:	1e 86       	std	Y+14, r1	; 0x0e
    1392:	1f 86       	std	Y+15, r1	; 0x0f
    1394:	18 8a       	std	Y+16, r1	; 0x10
    1396:	1c 86       	std	Y+12, r1	; 0x0c
    1398:	1b 86       	std	Y+11, r1	; 0x0b
    139a:	04 c0       	rjmp	.+8      	; 0x13a4 <__divsf3+0x88>
    139c:	32 30       	cpi	r19, 0x02	; 2
    139e:	21 f4       	brne	.+8      	; 0x13a8 <__divsf3+0x8c>
    13a0:	84 e0       	ldi	r24, 0x04	; 4
    13a2:	89 87       	std	Y+9, r24	; 0x09
    13a4:	b7 01       	movw	r22, r14
    13a6:	5f c0       	rjmp	.+190    	; 0x1466 <__divsf3+0x14a>
    13a8:	2b 85       	ldd	r18, Y+11	; 0x0b
    13aa:	3c 85       	ldd	r19, Y+12	; 0x0c
    13ac:	8b 89       	ldd	r24, Y+19	; 0x13
    13ae:	9c 89       	ldd	r25, Y+20	; 0x14
    13b0:	28 1b       	sub	r18, r24
    13b2:	39 0b       	sbc	r19, r25
    13b4:	3c 87       	std	Y+12, r19	; 0x0c
    13b6:	2b 87       	std	Y+11, r18	; 0x0b
    13b8:	ed 84       	ldd	r14, Y+13	; 0x0d
    13ba:	fe 84       	ldd	r15, Y+14	; 0x0e
    13bc:	0f 85       	ldd	r16, Y+15	; 0x0f
    13be:	18 89       	ldd	r17, Y+16	; 0x10
    13c0:	ad 88       	ldd	r10, Y+21	; 0x15
    13c2:	be 88       	ldd	r11, Y+22	; 0x16
    13c4:	cf 88       	ldd	r12, Y+23	; 0x17
    13c6:	d8 8c       	ldd	r13, Y+24	; 0x18
    13c8:	ea 14       	cp	r14, r10
    13ca:	fb 04       	cpc	r15, r11
    13cc:	0c 05       	cpc	r16, r12
    13ce:	1d 05       	cpc	r17, r13
    13d0:	40 f4       	brcc	.+16     	; 0x13e2 <__divsf3+0xc6>
    13d2:	ee 0c       	add	r14, r14
    13d4:	ff 1c       	adc	r15, r15
    13d6:	00 1f       	adc	r16, r16
    13d8:	11 1f       	adc	r17, r17
    13da:	21 50       	subi	r18, 0x01	; 1
    13dc:	30 40       	sbci	r19, 0x00	; 0
    13de:	3c 87       	std	Y+12, r19	; 0x0c
    13e0:	2b 87       	std	Y+11, r18	; 0x0b
    13e2:	20 e0       	ldi	r18, 0x00	; 0
    13e4:	30 e0       	ldi	r19, 0x00	; 0
    13e6:	40 e0       	ldi	r20, 0x00	; 0
    13e8:	50 e0       	ldi	r21, 0x00	; 0
    13ea:	80 e0       	ldi	r24, 0x00	; 0
    13ec:	90 e0       	ldi	r25, 0x00	; 0
    13ee:	a0 e0       	ldi	r26, 0x00	; 0
    13f0:	b0 e4       	ldi	r27, 0x40	; 64
    13f2:	60 e0       	ldi	r22, 0x00	; 0
    13f4:	70 e0       	ldi	r23, 0x00	; 0
    13f6:	ea 14       	cp	r14, r10
    13f8:	fb 04       	cpc	r15, r11
    13fa:	0c 05       	cpc	r16, r12
    13fc:	1d 05       	cpc	r17, r13
    13fe:	40 f0       	brcs	.+16     	; 0x1410 <__divsf3+0xf4>
    1400:	28 2b       	or	r18, r24
    1402:	39 2b       	or	r19, r25
    1404:	4a 2b       	or	r20, r26
    1406:	5b 2b       	or	r21, r27
    1408:	ea 18       	sub	r14, r10
    140a:	fb 08       	sbc	r15, r11
    140c:	0c 09       	sbc	r16, r12
    140e:	1d 09       	sbc	r17, r13
    1410:	b6 95       	lsr	r27
    1412:	a7 95       	ror	r26
    1414:	97 95       	ror	r25
    1416:	87 95       	ror	r24
    1418:	ee 0c       	add	r14, r14
    141a:	ff 1c       	adc	r15, r15
    141c:	00 1f       	adc	r16, r16
    141e:	11 1f       	adc	r17, r17
    1420:	6f 5f       	subi	r22, 0xFF	; 255
    1422:	7f 4f       	sbci	r23, 0xFF	; 255
    1424:	6f 31       	cpi	r22, 0x1F	; 31
    1426:	71 05       	cpc	r23, r1
    1428:	31 f7       	brne	.-52     	; 0x13f6 <__divsf3+0xda>
    142a:	da 01       	movw	r26, r20
    142c:	c9 01       	movw	r24, r18
    142e:	8f 77       	andi	r24, 0x7F	; 127
    1430:	90 70       	andi	r25, 0x00	; 0
    1432:	a0 70       	andi	r26, 0x00	; 0
    1434:	b0 70       	andi	r27, 0x00	; 0
    1436:	80 34       	cpi	r24, 0x40	; 64
    1438:	91 05       	cpc	r25, r1
    143a:	a1 05       	cpc	r26, r1
    143c:	b1 05       	cpc	r27, r1
    143e:	61 f4       	brne	.+24     	; 0x1458 <__divsf3+0x13c>
    1440:	27 fd       	sbrc	r18, 7
    1442:	0a c0       	rjmp	.+20     	; 0x1458 <__divsf3+0x13c>
    1444:	e1 14       	cp	r14, r1
    1446:	f1 04       	cpc	r15, r1
    1448:	01 05       	cpc	r16, r1
    144a:	11 05       	cpc	r17, r1
    144c:	29 f0       	breq	.+10     	; 0x1458 <__divsf3+0x13c>
    144e:	20 5c       	subi	r18, 0xC0	; 192
    1450:	3f 4f       	sbci	r19, 0xFF	; 255
    1452:	4f 4f       	sbci	r20, 0xFF	; 255
    1454:	5f 4f       	sbci	r21, 0xFF	; 255
    1456:	20 78       	andi	r18, 0x80	; 128
    1458:	2d 87       	std	Y+13, r18	; 0x0d
    145a:	3e 87       	std	Y+14, r19	; 0x0e
    145c:	4f 87       	std	Y+15, r20	; 0x0f
    145e:	58 8b       	std	Y+16, r21	; 0x10
    1460:	be 01       	movw	r22, r28
    1462:	67 5f       	subi	r22, 0xF7	; 247
    1464:	7f 4f       	sbci	r23, 0xFF	; 255
    1466:	cb 01       	movw	r24, r22
    1468:	0e 94 86 0b 	call	0x170c	; 0x170c <__pack_f>
    146c:	68 96       	adiw	r28, 0x18	; 24
    146e:	ea e0       	ldi	r30, 0x0A	; 10
    1470:	0c 94 90 19 	jmp	0x3320	; 0x3320 <__epilogue_restores__+0x10>

00001474 <__gesf2>:
    1474:	a8 e1       	ldi	r26, 0x18	; 24
    1476:	b0 e0       	ldi	r27, 0x00	; 0
    1478:	e0 e4       	ldi	r30, 0x40	; 64
    147a:	fa e0       	ldi	r31, 0x0A	; 10
    147c:	0c 94 78 19 	jmp	0x32f0	; 0x32f0 <__prologue_saves__+0x18>
    1480:	69 83       	std	Y+1, r22	; 0x01
    1482:	7a 83       	std	Y+2, r23	; 0x02
    1484:	8b 83       	std	Y+3, r24	; 0x03
    1486:	9c 83       	std	Y+4, r25	; 0x04
    1488:	2d 83       	std	Y+5, r18	; 0x05
    148a:	3e 83       	std	Y+6, r19	; 0x06
    148c:	4f 83       	std	Y+7, r20	; 0x07
    148e:	58 87       	std	Y+8, r21	; 0x08
    1490:	89 e0       	ldi	r24, 0x09	; 9
    1492:	e8 2e       	mov	r14, r24
    1494:	f1 2c       	mov	r15, r1
    1496:	ec 0e       	add	r14, r28
    1498:	fd 1e       	adc	r15, r29
    149a:	ce 01       	movw	r24, r28
    149c:	01 96       	adiw	r24, 0x01	; 1
    149e:	b7 01       	movw	r22, r14
    14a0:	0e 94 5b 0c 	call	0x18b6	; 0x18b6 <__unpack_f>
    14a4:	8e 01       	movw	r16, r28
    14a6:	0f 5e       	subi	r16, 0xEF	; 239
    14a8:	1f 4f       	sbci	r17, 0xFF	; 255
    14aa:	ce 01       	movw	r24, r28
    14ac:	05 96       	adiw	r24, 0x05	; 5
    14ae:	b8 01       	movw	r22, r16
    14b0:	0e 94 5b 0c 	call	0x18b6	; 0x18b6 <__unpack_f>
    14b4:	89 85       	ldd	r24, Y+9	; 0x09
    14b6:	82 30       	cpi	r24, 0x02	; 2
    14b8:	40 f0       	brcs	.+16     	; 0x14ca <__gesf2+0x56>
    14ba:	89 89       	ldd	r24, Y+17	; 0x11
    14bc:	82 30       	cpi	r24, 0x02	; 2
    14be:	28 f0       	brcs	.+10     	; 0x14ca <__gesf2+0x56>
    14c0:	c7 01       	movw	r24, r14
    14c2:	b8 01       	movw	r22, r16
    14c4:	0e 94 d3 0c 	call	0x19a6	; 0x19a6 <__fpcmp_parts_f>
    14c8:	01 c0       	rjmp	.+2      	; 0x14cc <__gesf2+0x58>
    14ca:	8f ef       	ldi	r24, 0xFF	; 255
    14cc:	68 96       	adiw	r28, 0x18	; 24
    14ce:	e6 e0       	ldi	r30, 0x06	; 6
    14d0:	0c 94 94 19 	jmp	0x3328	; 0x3328 <__epilogue_restores__+0x18>

000014d4 <__fixsfsi>:
    14d4:	ac e0       	ldi	r26, 0x0C	; 12
    14d6:	b0 e0       	ldi	r27, 0x00	; 0
    14d8:	e0 e7       	ldi	r30, 0x70	; 112
    14da:	fa e0       	ldi	r31, 0x0A	; 10
    14dc:	0c 94 7c 19 	jmp	0x32f8	; 0x32f8 <__prologue_saves__+0x20>
    14e0:	69 83       	std	Y+1, r22	; 0x01
    14e2:	7a 83       	std	Y+2, r23	; 0x02
    14e4:	8b 83       	std	Y+3, r24	; 0x03
    14e6:	9c 83       	std	Y+4, r25	; 0x04
    14e8:	ce 01       	movw	r24, r28
    14ea:	01 96       	adiw	r24, 0x01	; 1
    14ec:	be 01       	movw	r22, r28
    14ee:	6b 5f       	subi	r22, 0xFB	; 251
    14f0:	7f 4f       	sbci	r23, 0xFF	; 255
    14f2:	0e 94 5b 0c 	call	0x18b6	; 0x18b6 <__unpack_f>
    14f6:	8d 81       	ldd	r24, Y+5	; 0x05
    14f8:	82 30       	cpi	r24, 0x02	; 2
    14fa:	61 f1       	breq	.+88     	; 0x1554 <__fixsfsi+0x80>
    14fc:	82 30       	cpi	r24, 0x02	; 2
    14fe:	50 f1       	brcs	.+84     	; 0x1554 <__fixsfsi+0x80>
    1500:	84 30       	cpi	r24, 0x04	; 4
    1502:	21 f4       	brne	.+8      	; 0x150c <__fixsfsi+0x38>
    1504:	8e 81       	ldd	r24, Y+6	; 0x06
    1506:	88 23       	and	r24, r24
    1508:	51 f1       	breq	.+84     	; 0x155e <__fixsfsi+0x8a>
    150a:	2e c0       	rjmp	.+92     	; 0x1568 <__fixsfsi+0x94>
    150c:	2f 81       	ldd	r18, Y+7	; 0x07
    150e:	38 85       	ldd	r19, Y+8	; 0x08
    1510:	37 fd       	sbrc	r19, 7
    1512:	20 c0       	rjmp	.+64     	; 0x1554 <__fixsfsi+0x80>
    1514:	6e 81       	ldd	r22, Y+6	; 0x06
    1516:	2f 31       	cpi	r18, 0x1F	; 31
    1518:	31 05       	cpc	r19, r1
    151a:	1c f0       	brlt	.+6      	; 0x1522 <__fixsfsi+0x4e>
    151c:	66 23       	and	r22, r22
    151e:	f9 f0       	breq	.+62     	; 0x155e <__fixsfsi+0x8a>
    1520:	23 c0       	rjmp	.+70     	; 0x1568 <__fixsfsi+0x94>
    1522:	8e e1       	ldi	r24, 0x1E	; 30
    1524:	90 e0       	ldi	r25, 0x00	; 0
    1526:	82 1b       	sub	r24, r18
    1528:	93 0b       	sbc	r25, r19
    152a:	29 85       	ldd	r18, Y+9	; 0x09
    152c:	3a 85       	ldd	r19, Y+10	; 0x0a
    152e:	4b 85       	ldd	r20, Y+11	; 0x0b
    1530:	5c 85       	ldd	r21, Y+12	; 0x0c
    1532:	04 c0       	rjmp	.+8      	; 0x153c <__fixsfsi+0x68>
    1534:	56 95       	lsr	r21
    1536:	47 95       	ror	r20
    1538:	37 95       	ror	r19
    153a:	27 95       	ror	r18
    153c:	8a 95       	dec	r24
    153e:	d2 f7       	brpl	.-12     	; 0x1534 <__fixsfsi+0x60>
    1540:	66 23       	and	r22, r22
    1542:	b1 f0       	breq	.+44     	; 0x1570 <__fixsfsi+0x9c>
    1544:	50 95       	com	r21
    1546:	40 95       	com	r20
    1548:	30 95       	com	r19
    154a:	21 95       	neg	r18
    154c:	3f 4f       	sbci	r19, 0xFF	; 255
    154e:	4f 4f       	sbci	r20, 0xFF	; 255
    1550:	5f 4f       	sbci	r21, 0xFF	; 255
    1552:	0e c0       	rjmp	.+28     	; 0x1570 <__fixsfsi+0x9c>
    1554:	20 e0       	ldi	r18, 0x00	; 0
    1556:	30 e0       	ldi	r19, 0x00	; 0
    1558:	40 e0       	ldi	r20, 0x00	; 0
    155a:	50 e0       	ldi	r21, 0x00	; 0
    155c:	09 c0       	rjmp	.+18     	; 0x1570 <__fixsfsi+0x9c>
    155e:	2f ef       	ldi	r18, 0xFF	; 255
    1560:	3f ef       	ldi	r19, 0xFF	; 255
    1562:	4f ef       	ldi	r20, 0xFF	; 255
    1564:	5f e7       	ldi	r21, 0x7F	; 127
    1566:	04 c0       	rjmp	.+8      	; 0x1570 <__fixsfsi+0x9c>
    1568:	20 e0       	ldi	r18, 0x00	; 0
    156a:	30 e0       	ldi	r19, 0x00	; 0
    156c:	40 e0       	ldi	r20, 0x00	; 0
    156e:	50 e8       	ldi	r21, 0x80	; 128
    1570:	b9 01       	movw	r22, r18
    1572:	ca 01       	movw	r24, r20
    1574:	2c 96       	adiw	r28, 0x0c	; 12
    1576:	e2 e0       	ldi	r30, 0x02	; 2
    1578:	0c 94 98 19 	jmp	0x3330	; 0x3330 <__epilogue_restores__+0x20>

0000157c <__floatunsisf>:
    157c:	a8 e0       	ldi	r26, 0x08	; 8
    157e:	b0 e0       	ldi	r27, 0x00	; 0
    1580:	e4 ec       	ldi	r30, 0xC4	; 196
    1582:	fa e0       	ldi	r31, 0x0A	; 10
    1584:	0c 94 74 19 	jmp	0x32e8	; 0x32e8 <__prologue_saves__+0x10>
    1588:	7b 01       	movw	r14, r22
    158a:	8c 01       	movw	r16, r24
    158c:	61 15       	cp	r22, r1
    158e:	71 05       	cpc	r23, r1
    1590:	81 05       	cpc	r24, r1
    1592:	91 05       	cpc	r25, r1
    1594:	19 f4       	brne	.+6      	; 0x159c <__floatunsisf+0x20>
    1596:	82 e0       	ldi	r24, 0x02	; 2
    1598:	89 83       	std	Y+1, r24	; 0x01
    159a:	60 c0       	rjmp	.+192    	; 0x165c <__floatunsisf+0xe0>
    159c:	83 e0       	ldi	r24, 0x03	; 3
    159e:	89 83       	std	Y+1, r24	; 0x01
    15a0:	8e e1       	ldi	r24, 0x1E	; 30
    15a2:	c8 2e       	mov	r12, r24
    15a4:	d1 2c       	mov	r13, r1
    15a6:	dc 82       	std	Y+4, r13	; 0x04
    15a8:	cb 82       	std	Y+3, r12	; 0x03
    15aa:	ed 82       	std	Y+5, r14	; 0x05
    15ac:	fe 82       	std	Y+6, r15	; 0x06
    15ae:	0f 83       	std	Y+7, r16	; 0x07
    15b0:	18 87       	std	Y+8, r17	; 0x08
    15b2:	c8 01       	movw	r24, r16
    15b4:	b7 01       	movw	r22, r14
    15b6:	0e 94 37 0b 	call	0x166e	; 0x166e <__clzsi2>
    15ba:	fc 01       	movw	r30, r24
    15bc:	31 97       	sbiw	r30, 0x01	; 1
    15be:	f7 ff       	sbrs	r31, 7
    15c0:	3b c0       	rjmp	.+118    	; 0x1638 <__floatunsisf+0xbc>
    15c2:	22 27       	eor	r18, r18
    15c4:	33 27       	eor	r19, r19
    15c6:	2e 1b       	sub	r18, r30
    15c8:	3f 0b       	sbc	r19, r31
    15ca:	57 01       	movw	r10, r14
    15cc:	68 01       	movw	r12, r16
    15ce:	02 2e       	mov	r0, r18
    15d0:	04 c0       	rjmp	.+8      	; 0x15da <__floatunsisf+0x5e>
    15d2:	d6 94       	lsr	r13
    15d4:	c7 94       	ror	r12
    15d6:	b7 94       	ror	r11
    15d8:	a7 94       	ror	r10
    15da:	0a 94       	dec	r0
    15dc:	d2 f7       	brpl	.-12     	; 0x15d2 <__floatunsisf+0x56>
    15de:	40 e0       	ldi	r20, 0x00	; 0
    15e0:	50 e0       	ldi	r21, 0x00	; 0
    15e2:	60 e0       	ldi	r22, 0x00	; 0
    15e4:	70 e0       	ldi	r23, 0x00	; 0
    15e6:	81 e0       	ldi	r24, 0x01	; 1
    15e8:	90 e0       	ldi	r25, 0x00	; 0
    15ea:	a0 e0       	ldi	r26, 0x00	; 0
    15ec:	b0 e0       	ldi	r27, 0x00	; 0
    15ee:	04 c0       	rjmp	.+8      	; 0x15f8 <__floatunsisf+0x7c>
    15f0:	88 0f       	add	r24, r24
    15f2:	99 1f       	adc	r25, r25
    15f4:	aa 1f       	adc	r26, r26
    15f6:	bb 1f       	adc	r27, r27
    15f8:	2a 95       	dec	r18
    15fa:	d2 f7       	brpl	.-12     	; 0x15f0 <__floatunsisf+0x74>
    15fc:	01 97       	sbiw	r24, 0x01	; 1
    15fe:	a1 09       	sbc	r26, r1
    1600:	b1 09       	sbc	r27, r1
    1602:	8e 21       	and	r24, r14
    1604:	9f 21       	and	r25, r15
    1606:	a0 23       	and	r26, r16
    1608:	b1 23       	and	r27, r17
    160a:	00 97       	sbiw	r24, 0x00	; 0
    160c:	a1 05       	cpc	r26, r1
    160e:	b1 05       	cpc	r27, r1
    1610:	21 f0       	breq	.+8      	; 0x161a <__floatunsisf+0x9e>
    1612:	41 e0       	ldi	r20, 0x01	; 1
    1614:	50 e0       	ldi	r21, 0x00	; 0
    1616:	60 e0       	ldi	r22, 0x00	; 0
    1618:	70 e0       	ldi	r23, 0x00	; 0
    161a:	4a 29       	or	r20, r10
    161c:	5b 29       	or	r21, r11
    161e:	6c 29       	or	r22, r12
    1620:	7d 29       	or	r23, r13
    1622:	4d 83       	std	Y+5, r20	; 0x05
    1624:	5e 83       	std	Y+6, r21	; 0x06
    1626:	6f 83       	std	Y+7, r22	; 0x07
    1628:	78 87       	std	Y+8, r23	; 0x08
    162a:	8e e1       	ldi	r24, 0x1E	; 30
    162c:	90 e0       	ldi	r25, 0x00	; 0
    162e:	8e 1b       	sub	r24, r30
    1630:	9f 0b       	sbc	r25, r31
    1632:	9c 83       	std	Y+4, r25	; 0x04
    1634:	8b 83       	std	Y+3, r24	; 0x03
    1636:	12 c0       	rjmp	.+36     	; 0x165c <__floatunsisf+0xe0>
    1638:	30 97       	sbiw	r30, 0x00	; 0
    163a:	81 f0       	breq	.+32     	; 0x165c <__floatunsisf+0xe0>
    163c:	0e 2e       	mov	r0, r30
    163e:	04 c0       	rjmp	.+8      	; 0x1648 <__floatunsisf+0xcc>
    1640:	ee 0c       	add	r14, r14
    1642:	ff 1c       	adc	r15, r15
    1644:	00 1f       	adc	r16, r16
    1646:	11 1f       	adc	r17, r17
    1648:	0a 94       	dec	r0
    164a:	d2 f7       	brpl	.-12     	; 0x1640 <__floatunsisf+0xc4>
    164c:	ed 82       	std	Y+5, r14	; 0x05
    164e:	fe 82       	std	Y+6, r15	; 0x06
    1650:	0f 83       	std	Y+7, r16	; 0x07
    1652:	18 87       	std	Y+8, r17	; 0x08
    1654:	ce 1a       	sub	r12, r30
    1656:	df 0a       	sbc	r13, r31
    1658:	dc 82       	std	Y+4, r13	; 0x04
    165a:	cb 82       	std	Y+3, r12	; 0x03
    165c:	1a 82       	std	Y+2, r1	; 0x02
    165e:	ce 01       	movw	r24, r28
    1660:	01 96       	adiw	r24, 0x01	; 1
    1662:	0e 94 86 0b 	call	0x170c	; 0x170c <__pack_f>
    1666:	28 96       	adiw	r28, 0x08	; 8
    1668:	ea e0       	ldi	r30, 0x0A	; 10
    166a:	0c 94 90 19 	jmp	0x3320	; 0x3320 <__epilogue_restores__+0x10>

0000166e <__clzsi2>:
    166e:	ef 92       	push	r14
    1670:	ff 92       	push	r15
    1672:	0f 93       	push	r16
    1674:	1f 93       	push	r17
    1676:	7b 01       	movw	r14, r22
    1678:	8c 01       	movw	r16, r24
    167a:	80 e0       	ldi	r24, 0x00	; 0
    167c:	e8 16       	cp	r14, r24
    167e:	80 e0       	ldi	r24, 0x00	; 0
    1680:	f8 06       	cpc	r15, r24
    1682:	81 e0       	ldi	r24, 0x01	; 1
    1684:	08 07       	cpc	r16, r24
    1686:	80 e0       	ldi	r24, 0x00	; 0
    1688:	18 07       	cpc	r17, r24
    168a:	88 f4       	brcc	.+34     	; 0x16ae <__clzsi2+0x40>
    168c:	8f ef       	ldi	r24, 0xFF	; 255
    168e:	e8 16       	cp	r14, r24
    1690:	f1 04       	cpc	r15, r1
    1692:	01 05       	cpc	r16, r1
    1694:	11 05       	cpc	r17, r1
    1696:	31 f0       	breq	.+12     	; 0x16a4 <__clzsi2+0x36>
    1698:	28 f0       	brcs	.+10     	; 0x16a4 <__clzsi2+0x36>
    169a:	88 e0       	ldi	r24, 0x08	; 8
    169c:	90 e0       	ldi	r25, 0x00	; 0
    169e:	a0 e0       	ldi	r26, 0x00	; 0
    16a0:	b0 e0       	ldi	r27, 0x00	; 0
    16a2:	17 c0       	rjmp	.+46     	; 0x16d2 <__clzsi2+0x64>
    16a4:	80 e0       	ldi	r24, 0x00	; 0
    16a6:	90 e0       	ldi	r25, 0x00	; 0
    16a8:	a0 e0       	ldi	r26, 0x00	; 0
    16aa:	b0 e0       	ldi	r27, 0x00	; 0
    16ac:	12 c0       	rjmp	.+36     	; 0x16d2 <__clzsi2+0x64>
    16ae:	80 e0       	ldi	r24, 0x00	; 0
    16b0:	e8 16       	cp	r14, r24
    16b2:	80 e0       	ldi	r24, 0x00	; 0
    16b4:	f8 06       	cpc	r15, r24
    16b6:	80 e0       	ldi	r24, 0x00	; 0
    16b8:	08 07       	cpc	r16, r24
    16ba:	81 e0       	ldi	r24, 0x01	; 1
    16bc:	18 07       	cpc	r17, r24
    16be:	28 f0       	brcs	.+10     	; 0x16ca <__clzsi2+0x5c>
    16c0:	88 e1       	ldi	r24, 0x18	; 24
    16c2:	90 e0       	ldi	r25, 0x00	; 0
    16c4:	a0 e0       	ldi	r26, 0x00	; 0
    16c6:	b0 e0       	ldi	r27, 0x00	; 0
    16c8:	04 c0       	rjmp	.+8      	; 0x16d2 <__clzsi2+0x64>
    16ca:	80 e1       	ldi	r24, 0x10	; 16
    16cc:	90 e0       	ldi	r25, 0x00	; 0
    16ce:	a0 e0       	ldi	r26, 0x00	; 0
    16d0:	b0 e0       	ldi	r27, 0x00	; 0
    16d2:	20 e2       	ldi	r18, 0x20	; 32
    16d4:	30 e0       	ldi	r19, 0x00	; 0
    16d6:	40 e0       	ldi	r20, 0x00	; 0
    16d8:	50 e0       	ldi	r21, 0x00	; 0
    16da:	28 1b       	sub	r18, r24
    16dc:	39 0b       	sbc	r19, r25
    16de:	4a 0b       	sbc	r20, r26
    16e0:	5b 0b       	sbc	r21, r27
    16e2:	04 c0       	rjmp	.+8      	; 0x16ec <__clzsi2+0x7e>
    16e4:	16 95       	lsr	r17
    16e6:	07 95       	ror	r16
    16e8:	f7 94       	ror	r15
    16ea:	e7 94       	ror	r14
    16ec:	8a 95       	dec	r24
    16ee:	d2 f7       	brpl	.-12     	; 0x16e4 <__clzsi2+0x76>
    16f0:	f7 01       	movw	r30, r14
    16f2:	e8 59       	subi	r30, 0x98	; 152
    16f4:	ff 4f       	sbci	r31, 0xFF	; 255
    16f6:	80 81       	ld	r24, Z
    16f8:	28 1b       	sub	r18, r24
    16fa:	31 09       	sbc	r19, r1
    16fc:	41 09       	sbc	r20, r1
    16fe:	51 09       	sbc	r21, r1
    1700:	c9 01       	movw	r24, r18
    1702:	1f 91       	pop	r17
    1704:	0f 91       	pop	r16
    1706:	ff 90       	pop	r15
    1708:	ef 90       	pop	r14
    170a:	08 95       	ret

0000170c <__pack_f>:
    170c:	df 92       	push	r13
    170e:	ef 92       	push	r14
    1710:	ff 92       	push	r15
    1712:	0f 93       	push	r16
    1714:	1f 93       	push	r17
    1716:	fc 01       	movw	r30, r24
    1718:	e4 80       	ldd	r14, Z+4	; 0x04
    171a:	f5 80       	ldd	r15, Z+5	; 0x05
    171c:	06 81       	ldd	r16, Z+6	; 0x06
    171e:	17 81       	ldd	r17, Z+7	; 0x07
    1720:	d1 80       	ldd	r13, Z+1	; 0x01
    1722:	80 81       	ld	r24, Z
    1724:	82 30       	cpi	r24, 0x02	; 2
    1726:	48 f4       	brcc	.+18     	; 0x173a <__pack_f+0x2e>
    1728:	80 e0       	ldi	r24, 0x00	; 0
    172a:	90 e0       	ldi	r25, 0x00	; 0
    172c:	a0 e1       	ldi	r26, 0x10	; 16
    172e:	b0 e0       	ldi	r27, 0x00	; 0
    1730:	e8 2a       	or	r14, r24
    1732:	f9 2a       	or	r15, r25
    1734:	0a 2b       	or	r16, r26
    1736:	1b 2b       	or	r17, r27
    1738:	a5 c0       	rjmp	.+330    	; 0x1884 <__pack_f+0x178>
    173a:	84 30       	cpi	r24, 0x04	; 4
    173c:	09 f4       	brne	.+2      	; 0x1740 <__pack_f+0x34>
    173e:	9f c0       	rjmp	.+318    	; 0x187e <__pack_f+0x172>
    1740:	82 30       	cpi	r24, 0x02	; 2
    1742:	21 f4       	brne	.+8      	; 0x174c <__pack_f+0x40>
    1744:	ee 24       	eor	r14, r14
    1746:	ff 24       	eor	r15, r15
    1748:	87 01       	movw	r16, r14
    174a:	05 c0       	rjmp	.+10     	; 0x1756 <__pack_f+0x4a>
    174c:	e1 14       	cp	r14, r1
    174e:	f1 04       	cpc	r15, r1
    1750:	01 05       	cpc	r16, r1
    1752:	11 05       	cpc	r17, r1
    1754:	19 f4       	brne	.+6      	; 0x175c <__pack_f+0x50>
    1756:	e0 e0       	ldi	r30, 0x00	; 0
    1758:	f0 e0       	ldi	r31, 0x00	; 0
    175a:	96 c0       	rjmp	.+300    	; 0x1888 <__pack_f+0x17c>
    175c:	62 81       	ldd	r22, Z+2	; 0x02
    175e:	73 81       	ldd	r23, Z+3	; 0x03
    1760:	9f ef       	ldi	r25, 0xFF	; 255
    1762:	62 38       	cpi	r22, 0x82	; 130
    1764:	79 07       	cpc	r23, r25
    1766:	0c f0       	brlt	.+2      	; 0x176a <__pack_f+0x5e>
    1768:	5b c0       	rjmp	.+182    	; 0x1820 <__pack_f+0x114>
    176a:	22 e8       	ldi	r18, 0x82	; 130
    176c:	3f ef       	ldi	r19, 0xFF	; 255
    176e:	26 1b       	sub	r18, r22
    1770:	37 0b       	sbc	r19, r23
    1772:	2a 31       	cpi	r18, 0x1A	; 26
    1774:	31 05       	cpc	r19, r1
    1776:	2c f0       	brlt	.+10     	; 0x1782 <__pack_f+0x76>
    1778:	20 e0       	ldi	r18, 0x00	; 0
    177a:	30 e0       	ldi	r19, 0x00	; 0
    177c:	40 e0       	ldi	r20, 0x00	; 0
    177e:	50 e0       	ldi	r21, 0x00	; 0
    1780:	2a c0       	rjmp	.+84     	; 0x17d6 <__pack_f+0xca>
    1782:	b8 01       	movw	r22, r16
    1784:	a7 01       	movw	r20, r14
    1786:	02 2e       	mov	r0, r18
    1788:	04 c0       	rjmp	.+8      	; 0x1792 <__pack_f+0x86>
    178a:	76 95       	lsr	r23
    178c:	67 95       	ror	r22
    178e:	57 95       	ror	r21
    1790:	47 95       	ror	r20
    1792:	0a 94       	dec	r0
    1794:	d2 f7       	brpl	.-12     	; 0x178a <__pack_f+0x7e>
    1796:	81 e0       	ldi	r24, 0x01	; 1
    1798:	90 e0       	ldi	r25, 0x00	; 0
    179a:	a0 e0       	ldi	r26, 0x00	; 0
    179c:	b0 e0       	ldi	r27, 0x00	; 0
    179e:	04 c0       	rjmp	.+8      	; 0x17a8 <__pack_f+0x9c>
    17a0:	88 0f       	add	r24, r24
    17a2:	99 1f       	adc	r25, r25
    17a4:	aa 1f       	adc	r26, r26
    17a6:	bb 1f       	adc	r27, r27
    17a8:	2a 95       	dec	r18
    17aa:	d2 f7       	brpl	.-12     	; 0x17a0 <__pack_f+0x94>
    17ac:	01 97       	sbiw	r24, 0x01	; 1
    17ae:	a1 09       	sbc	r26, r1
    17b0:	b1 09       	sbc	r27, r1
    17b2:	8e 21       	and	r24, r14
    17b4:	9f 21       	and	r25, r15
    17b6:	a0 23       	and	r26, r16
    17b8:	b1 23       	and	r27, r17
    17ba:	00 97       	sbiw	r24, 0x00	; 0
    17bc:	a1 05       	cpc	r26, r1
    17be:	b1 05       	cpc	r27, r1
    17c0:	21 f0       	breq	.+8      	; 0x17ca <__pack_f+0xbe>
    17c2:	81 e0       	ldi	r24, 0x01	; 1
    17c4:	90 e0       	ldi	r25, 0x00	; 0
    17c6:	a0 e0       	ldi	r26, 0x00	; 0
    17c8:	b0 e0       	ldi	r27, 0x00	; 0
    17ca:	9a 01       	movw	r18, r20
    17cc:	ab 01       	movw	r20, r22
    17ce:	28 2b       	or	r18, r24
    17d0:	39 2b       	or	r19, r25
    17d2:	4a 2b       	or	r20, r26
    17d4:	5b 2b       	or	r21, r27
    17d6:	da 01       	movw	r26, r20
    17d8:	c9 01       	movw	r24, r18
    17da:	8f 77       	andi	r24, 0x7F	; 127
    17dc:	90 70       	andi	r25, 0x00	; 0
    17de:	a0 70       	andi	r26, 0x00	; 0
    17e0:	b0 70       	andi	r27, 0x00	; 0
    17e2:	80 34       	cpi	r24, 0x40	; 64
    17e4:	91 05       	cpc	r25, r1
    17e6:	a1 05       	cpc	r26, r1
    17e8:	b1 05       	cpc	r27, r1
    17ea:	39 f4       	brne	.+14     	; 0x17fa <__pack_f+0xee>
    17ec:	27 ff       	sbrs	r18, 7
    17ee:	09 c0       	rjmp	.+18     	; 0x1802 <__pack_f+0xf6>
    17f0:	20 5c       	subi	r18, 0xC0	; 192
    17f2:	3f 4f       	sbci	r19, 0xFF	; 255
    17f4:	4f 4f       	sbci	r20, 0xFF	; 255
    17f6:	5f 4f       	sbci	r21, 0xFF	; 255
    17f8:	04 c0       	rjmp	.+8      	; 0x1802 <__pack_f+0xf6>
    17fa:	21 5c       	subi	r18, 0xC1	; 193
    17fc:	3f 4f       	sbci	r19, 0xFF	; 255
    17fe:	4f 4f       	sbci	r20, 0xFF	; 255
    1800:	5f 4f       	sbci	r21, 0xFF	; 255
    1802:	e0 e0       	ldi	r30, 0x00	; 0
    1804:	f0 e0       	ldi	r31, 0x00	; 0
    1806:	20 30       	cpi	r18, 0x00	; 0
    1808:	a0 e0       	ldi	r26, 0x00	; 0
    180a:	3a 07       	cpc	r19, r26
    180c:	a0 e0       	ldi	r26, 0x00	; 0
    180e:	4a 07       	cpc	r20, r26
    1810:	a0 e4       	ldi	r26, 0x40	; 64
    1812:	5a 07       	cpc	r21, r26
    1814:	10 f0       	brcs	.+4      	; 0x181a <__pack_f+0x10e>
    1816:	e1 e0       	ldi	r30, 0x01	; 1
    1818:	f0 e0       	ldi	r31, 0x00	; 0
    181a:	79 01       	movw	r14, r18
    181c:	8a 01       	movw	r16, r20
    181e:	27 c0       	rjmp	.+78     	; 0x186e <__pack_f+0x162>
    1820:	60 38       	cpi	r22, 0x80	; 128
    1822:	71 05       	cpc	r23, r1
    1824:	64 f5       	brge	.+88     	; 0x187e <__pack_f+0x172>
    1826:	fb 01       	movw	r30, r22
    1828:	e1 58       	subi	r30, 0x81	; 129
    182a:	ff 4f       	sbci	r31, 0xFF	; 255
    182c:	d8 01       	movw	r26, r16
    182e:	c7 01       	movw	r24, r14
    1830:	8f 77       	andi	r24, 0x7F	; 127
    1832:	90 70       	andi	r25, 0x00	; 0
    1834:	a0 70       	andi	r26, 0x00	; 0
    1836:	b0 70       	andi	r27, 0x00	; 0
    1838:	80 34       	cpi	r24, 0x40	; 64
    183a:	91 05       	cpc	r25, r1
    183c:	a1 05       	cpc	r26, r1
    183e:	b1 05       	cpc	r27, r1
    1840:	39 f4       	brne	.+14     	; 0x1850 <__pack_f+0x144>
    1842:	e7 fe       	sbrs	r14, 7
    1844:	0d c0       	rjmp	.+26     	; 0x1860 <__pack_f+0x154>
    1846:	80 e4       	ldi	r24, 0x40	; 64
    1848:	90 e0       	ldi	r25, 0x00	; 0
    184a:	a0 e0       	ldi	r26, 0x00	; 0
    184c:	b0 e0       	ldi	r27, 0x00	; 0
    184e:	04 c0       	rjmp	.+8      	; 0x1858 <__pack_f+0x14c>
    1850:	8f e3       	ldi	r24, 0x3F	; 63
    1852:	90 e0       	ldi	r25, 0x00	; 0
    1854:	a0 e0       	ldi	r26, 0x00	; 0
    1856:	b0 e0       	ldi	r27, 0x00	; 0
    1858:	e8 0e       	add	r14, r24
    185a:	f9 1e       	adc	r15, r25
    185c:	0a 1f       	adc	r16, r26
    185e:	1b 1f       	adc	r17, r27
    1860:	17 ff       	sbrs	r17, 7
    1862:	05 c0       	rjmp	.+10     	; 0x186e <__pack_f+0x162>
    1864:	16 95       	lsr	r17
    1866:	07 95       	ror	r16
    1868:	f7 94       	ror	r15
    186a:	e7 94       	ror	r14
    186c:	31 96       	adiw	r30, 0x01	; 1
    186e:	87 e0       	ldi	r24, 0x07	; 7
    1870:	16 95       	lsr	r17
    1872:	07 95       	ror	r16
    1874:	f7 94       	ror	r15
    1876:	e7 94       	ror	r14
    1878:	8a 95       	dec	r24
    187a:	d1 f7       	brne	.-12     	; 0x1870 <__pack_f+0x164>
    187c:	05 c0       	rjmp	.+10     	; 0x1888 <__pack_f+0x17c>
    187e:	ee 24       	eor	r14, r14
    1880:	ff 24       	eor	r15, r15
    1882:	87 01       	movw	r16, r14
    1884:	ef ef       	ldi	r30, 0xFF	; 255
    1886:	f0 e0       	ldi	r31, 0x00	; 0
    1888:	6e 2f       	mov	r22, r30
    188a:	67 95       	ror	r22
    188c:	66 27       	eor	r22, r22
    188e:	67 95       	ror	r22
    1890:	90 2f       	mov	r25, r16
    1892:	9f 77       	andi	r25, 0x7F	; 127
    1894:	d7 94       	ror	r13
    1896:	dd 24       	eor	r13, r13
    1898:	d7 94       	ror	r13
    189a:	8e 2f       	mov	r24, r30
    189c:	86 95       	lsr	r24
    189e:	49 2f       	mov	r20, r25
    18a0:	46 2b       	or	r20, r22
    18a2:	58 2f       	mov	r21, r24
    18a4:	5d 29       	or	r21, r13
    18a6:	b7 01       	movw	r22, r14
    18a8:	ca 01       	movw	r24, r20
    18aa:	1f 91       	pop	r17
    18ac:	0f 91       	pop	r16
    18ae:	ff 90       	pop	r15
    18b0:	ef 90       	pop	r14
    18b2:	df 90       	pop	r13
    18b4:	08 95       	ret

000018b6 <__unpack_f>:
    18b6:	fc 01       	movw	r30, r24
    18b8:	db 01       	movw	r26, r22
    18ba:	40 81       	ld	r20, Z
    18bc:	51 81       	ldd	r21, Z+1	; 0x01
    18be:	22 81       	ldd	r18, Z+2	; 0x02
    18c0:	62 2f       	mov	r22, r18
    18c2:	6f 77       	andi	r22, 0x7F	; 127
    18c4:	70 e0       	ldi	r23, 0x00	; 0
    18c6:	22 1f       	adc	r18, r18
    18c8:	22 27       	eor	r18, r18
    18ca:	22 1f       	adc	r18, r18
    18cc:	93 81       	ldd	r25, Z+3	; 0x03
    18ce:	89 2f       	mov	r24, r25
    18d0:	88 0f       	add	r24, r24
    18d2:	82 2b       	or	r24, r18
    18d4:	28 2f       	mov	r18, r24
    18d6:	30 e0       	ldi	r19, 0x00	; 0
    18d8:	99 1f       	adc	r25, r25
    18da:	99 27       	eor	r25, r25
    18dc:	99 1f       	adc	r25, r25
    18de:	11 96       	adiw	r26, 0x01	; 1
    18e0:	9c 93       	st	X, r25
    18e2:	11 97       	sbiw	r26, 0x01	; 1
    18e4:	21 15       	cp	r18, r1
    18e6:	31 05       	cpc	r19, r1
    18e8:	a9 f5       	brne	.+106    	; 0x1954 <__unpack_f+0x9e>
    18ea:	41 15       	cp	r20, r1
    18ec:	51 05       	cpc	r21, r1
    18ee:	61 05       	cpc	r22, r1
    18f0:	71 05       	cpc	r23, r1
    18f2:	11 f4       	brne	.+4      	; 0x18f8 <__unpack_f+0x42>
    18f4:	82 e0       	ldi	r24, 0x02	; 2
    18f6:	37 c0       	rjmp	.+110    	; 0x1966 <__unpack_f+0xb0>
    18f8:	82 e8       	ldi	r24, 0x82	; 130
    18fa:	9f ef       	ldi	r25, 0xFF	; 255
    18fc:	13 96       	adiw	r26, 0x03	; 3
    18fe:	9c 93       	st	X, r25
    1900:	8e 93       	st	-X, r24
    1902:	12 97       	sbiw	r26, 0x02	; 2
    1904:	9a 01       	movw	r18, r20
    1906:	ab 01       	movw	r20, r22
    1908:	67 e0       	ldi	r22, 0x07	; 7
    190a:	22 0f       	add	r18, r18
    190c:	33 1f       	adc	r19, r19
    190e:	44 1f       	adc	r20, r20
    1910:	55 1f       	adc	r21, r21
    1912:	6a 95       	dec	r22
    1914:	d1 f7       	brne	.-12     	; 0x190a <__unpack_f+0x54>
    1916:	83 e0       	ldi	r24, 0x03	; 3
    1918:	8c 93       	st	X, r24
    191a:	0d c0       	rjmp	.+26     	; 0x1936 <__unpack_f+0x80>
    191c:	22 0f       	add	r18, r18
    191e:	33 1f       	adc	r19, r19
    1920:	44 1f       	adc	r20, r20
    1922:	55 1f       	adc	r21, r21
    1924:	12 96       	adiw	r26, 0x02	; 2
    1926:	8d 91       	ld	r24, X+
    1928:	9c 91       	ld	r25, X
    192a:	13 97       	sbiw	r26, 0x03	; 3
    192c:	01 97       	sbiw	r24, 0x01	; 1
    192e:	13 96       	adiw	r26, 0x03	; 3
    1930:	9c 93       	st	X, r25
    1932:	8e 93       	st	-X, r24
    1934:	12 97       	sbiw	r26, 0x02	; 2
    1936:	20 30       	cpi	r18, 0x00	; 0
    1938:	80 e0       	ldi	r24, 0x00	; 0
    193a:	38 07       	cpc	r19, r24
    193c:	80 e0       	ldi	r24, 0x00	; 0
    193e:	48 07       	cpc	r20, r24
    1940:	80 e4       	ldi	r24, 0x40	; 64
    1942:	58 07       	cpc	r21, r24
    1944:	58 f3       	brcs	.-42     	; 0x191c <__unpack_f+0x66>
    1946:	14 96       	adiw	r26, 0x04	; 4
    1948:	2d 93       	st	X+, r18
    194a:	3d 93       	st	X+, r19
    194c:	4d 93       	st	X+, r20
    194e:	5c 93       	st	X, r21
    1950:	17 97       	sbiw	r26, 0x07	; 7
    1952:	08 95       	ret
    1954:	2f 3f       	cpi	r18, 0xFF	; 255
    1956:	31 05       	cpc	r19, r1
    1958:	79 f4       	brne	.+30     	; 0x1978 <__unpack_f+0xc2>
    195a:	41 15       	cp	r20, r1
    195c:	51 05       	cpc	r21, r1
    195e:	61 05       	cpc	r22, r1
    1960:	71 05       	cpc	r23, r1
    1962:	19 f4       	brne	.+6      	; 0x196a <__unpack_f+0xb4>
    1964:	84 e0       	ldi	r24, 0x04	; 4
    1966:	8c 93       	st	X, r24
    1968:	08 95       	ret
    196a:	64 ff       	sbrs	r22, 4
    196c:	03 c0       	rjmp	.+6      	; 0x1974 <__unpack_f+0xbe>
    196e:	81 e0       	ldi	r24, 0x01	; 1
    1970:	8c 93       	st	X, r24
    1972:	12 c0       	rjmp	.+36     	; 0x1998 <__unpack_f+0xe2>
    1974:	1c 92       	st	X, r1
    1976:	10 c0       	rjmp	.+32     	; 0x1998 <__unpack_f+0xe2>
    1978:	2f 57       	subi	r18, 0x7F	; 127
    197a:	30 40       	sbci	r19, 0x00	; 0
    197c:	13 96       	adiw	r26, 0x03	; 3
    197e:	3c 93       	st	X, r19
    1980:	2e 93       	st	-X, r18
    1982:	12 97       	sbiw	r26, 0x02	; 2
    1984:	83 e0       	ldi	r24, 0x03	; 3
    1986:	8c 93       	st	X, r24
    1988:	87 e0       	ldi	r24, 0x07	; 7
    198a:	44 0f       	add	r20, r20
    198c:	55 1f       	adc	r21, r21
    198e:	66 1f       	adc	r22, r22
    1990:	77 1f       	adc	r23, r23
    1992:	8a 95       	dec	r24
    1994:	d1 f7       	brne	.-12     	; 0x198a <__unpack_f+0xd4>
    1996:	70 64       	ori	r23, 0x40	; 64
    1998:	14 96       	adiw	r26, 0x04	; 4
    199a:	4d 93       	st	X+, r20
    199c:	5d 93       	st	X+, r21
    199e:	6d 93       	st	X+, r22
    19a0:	7c 93       	st	X, r23
    19a2:	17 97       	sbiw	r26, 0x07	; 7
    19a4:	08 95       	ret

000019a6 <__fpcmp_parts_f>:
    19a6:	1f 93       	push	r17
    19a8:	dc 01       	movw	r26, r24
    19aa:	fb 01       	movw	r30, r22
    19ac:	9c 91       	ld	r25, X
    19ae:	92 30       	cpi	r25, 0x02	; 2
    19b0:	08 f4       	brcc	.+2      	; 0x19b4 <__fpcmp_parts_f+0xe>
    19b2:	47 c0       	rjmp	.+142    	; 0x1a42 <__fpcmp_parts_f+0x9c>
    19b4:	80 81       	ld	r24, Z
    19b6:	82 30       	cpi	r24, 0x02	; 2
    19b8:	08 f4       	brcc	.+2      	; 0x19bc <__fpcmp_parts_f+0x16>
    19ba:	43 c0       	rjmp	.+134    	; 0x1a42 <__fpcmp_parts_f+0x9c>
    19bc:	94 30       	cpi	r25, 0x04	; 4
    19be:	51 f4       	brne	.+20     	; 0x19d4 <__fpcmp_parts_f+0x2e>
    19c0:	11 96       	adiw	r26, 0x01	; 1
    19c2:	1c 91       	ld	r17, X
    19c4:	84 30       	cpi	r24, 0x04	; 4
    19c6:	99 f5       	brne	.+102    	; 0x1a2e <__fpcmp_parts_f+0x88>
    19c8:	81 81       	ldd	r24, Z+1	; 0x01
    19ca:	68 2f       	mov	r22, r24
    19cc:	70 e0       	ldi	r23, 0x00	; 0
    19ce:	61 1b       	sub	r22, r17
    19d0:	71 09       	sbc	r23, r1
    19d2:	3f c0       	rjmp	.+126    	; 0x1a52 <__fpcmp_parts_f+0xac>
    19d4:	84 30       	cpi	r24, 0x04	; 4
    19d6:	21 f0       	breq	.+8      	; 0x19e0 <__fpcmp_parts_f+0x3a>
    19d8:	92 30       	cpi	r25, 0x02	; 2
    19da:	31 f4       	brne	.+12     	; 0x19e8 <__fpcmp_parts_f+0x42>
    19dc:	82 30       	cpi	r24, 0x02	; 2
    19de:	b9 f1       	breq	.+110    	; 0x1a4e <__fpcmp_parts_f+0xa8>
    19e0:	81 81       	ldd	r24, Z+1	; 0x01
    19e2:	88 23       	and	r24, r24
    19e4:	89 f1       	breq	.+98     	; 0x1a48 <__fpcmp_parts_f+0xa2>
    19e6:	2d c0       	rjmp	.+90     	; 0x1a42 <__fpcmp_parts_f+0x9c>
    19e8:	11 96       	adiw	r26, 0x01	; 1
    19ea:	1c 91       	ld	r17, X
    19ec:	11 97       	sbiw	r26, 0x01	; 1
    19ee:	82 30       	cpi	r24, 0x02	; 2
    19f0:	f1 f0       	breq	.+60     	; 0x1a2e <__fpcmp_parts_f+0x88>
    19f2:	81 81       	ldd	r24, Z+1	; 0x01
    19f4:	18 17       	cp	r17, r24
    19f6:	d9 f4       	brne	.+54     	; 0x1a2e <__fpcmp_parts_f+0x88>
    19f8:	12 96       	adiw	r26, 0x02	; 2
    19fa:	2d 91       	ld	r18, X+
    19fc:	3c 91       	ld	r19, X
    19fe:	13 97       	sbiw	r26, 0x03	; 3
    1a00:	82 81       	ldd	r24, Z+2	; 0x02
    1a02:	93 81       	ldd	r25, Z+3	; 0x03
    1a04:	82 17       	cp	r24, r18
    1a06:	93 07       	cpc	r25, r19
    1a08:	94 f0       	brlt	.+36     	; 0x1a2e <__fpcmp_parts_f+0x88>
    1a0a:	28 17       	cp	r18, r24
    1a0c:	39 07       	cpc	r19, r25
    1a0e:	bc f0       	brlt	.+46     	; 0x1a3e <__fpcmp_parts_f+0x98>
    1a10:	14 96       	adiw	r26, 0x04	; 4
    1a12:	8d 91       	ld	r24, X+
    1a14:	9d 91       	ld	r25, X+
    1a16:	0d 90       	ld	r0, X+
    1a18:	bc 91       	ld	r27, X
    1a1a:	a0 2d       	mov	r26, r0
    1a1c:	24 81       	ldd	r18, Z+4	; 0x04
    1a1e:	35 81       	ldd	r19, Z+5	; 0x05
    1a20:	46 81       	ldd	r20, Z+6	; 0x06
    1a22:	57 81       	ldd	r21, Z+7	; 0x07
    1a24:	28 17       	cp	r18, r24
    1a26:	39 07       	cpc	r19, r25
    1a28:	4a 07       	cpc	r20, r26
    1a2a:	5b 07       	cpc	r21, r27
    1a2c:	18 f4       	brcc	.+6      	; 0x1a34 <__fpcmp_parts_f+0x8e>
    1a2e:	11 23       	and	r17, r17
    1a30:	41 f0       	breq	.+16     	; 0x1a42 <__fpcmp_parts_f+0x9c>
    1a32:	0a c0       	rjmp	.+20     	; 0x1a48 <__fpcmp_parts_f+0xa2>
    1a34:	82 17       	cp	r24, r18
    1a36:	93 07       	cpc	r25, r19
    1a38:	a4 07       	cpc	r26, r20
    1a3a:	b5 07       	cpc	r27, r21
    1a3c:	40 f4       	brcc	.+16     	; 0x1a4e <__fpcmp_parts_f+0xa8>
    1a3e:	11 23       	and	r17, r17
    1a40:	19 f0       	breq	.+6      	; 0x1a48 <__fpcmp_parts_f+0xa2>
    1a42:	61 e0       	ldi	r22, 0x01	; 1
    1a44:	70 e0       	ldi	r23, 0x00	; 0
    1a46:	05 c0       	rjmp	.+10     	; 0x1a52 <__fpcmp_parts_f+0xac>
    1a48:	6f ef       	ldi	r22, 0xFF	; 255
    1a4a:	7f ef       	ldi	r23, 0xFF	; 255
    1a4c:	02 c0       	rjmp	.+4      	; 0x1a52 <__fpcmp_parts_f+0xac>
    1a4e:	60 e0       	ldi	r22, 0x00	; 0
    1a50:	70 e0       	ldi	r23, 0x00	; 0
    1a52:	cb 01       	movw	r24, r22
    1a54:	1f 91       	pop	r17
    1a56:	08 95       	ret

00001a58 <SCH_init>:
/**********************************************************************************************************************
 *  Functions Definitions
 *********************************************************************************************************************/

void SCH_init(void)
{
    1a58:	df 93       	push	r29
    1a5a:	cf 93       	push	r28
    1a5c:	0f 92       	push	r0
    1a5e:	cd b7       	in	r28, 0x3d	; 61
    1a60:	de b7       	in	r29, 0x3e	; 62
	u8 i=0;
    1a62:	19 82       	std	Y+1, r1	; 0x01
	for (i = 0; i < SCH_MAX_TASKS; i++)
    1a64:	19 82       	std	Y+1, r1	; 0x01
    1a66:	06 c0       	rjmp	.+12     	; 0x1a74 <SCH_init+0x1c>
	  {
		SCH_Delete_Task(i);
    1a68:	89 81       	ldd	r24, Y+1	; 0x01
    1a6a:	0e 94 67 0e 	call	0x1cce	; 0x1cce <SCH_Delete_Task>
 *********************************************************************************************************************/

void SCH_init(void)
{
	u8 i=0;
	for (i = 0; i < SCH_MAX_TASKS; i++)
    1a6e:	89 81       	ldd	r24, Y+1	; 0x01
    1a70:	8f 5f       	subi	r24, 0xFF	; 255
    1a72:	89 83       	std	Y+1, r24	; 0x01
    1a74:	89 81       	ldd	r24, Y+1	; 0x01
    1a76:	8a 30       	cpi	r24, 0x0A	; 10
    1a78:	b8 f3       	brcs	.-18     	; 0x1a68 <SCH_init+0x10>
	  {
		SCH_Delete_Task(i);
	  }
	
	MTIMER2_voidInit();
    1a7a:	0e 94 48 11 	call	0x2290	; 0x2290 <MTIMER2_voidInit>
	MTIMER2_voidTimer2OVSetCallBack(SCH_ISR);
    1a7e:	85 e5       	ldi	r24, 0x55	; 85
    1a80:	9d e0       	ldi	r25, 0x0D	; 13
    1a82:	0e 94 7d 11 	call	0x22fa	; 0x22fa <MTIMER2_voidTimer2OVSetCallBack>
}
    1a86:	0f 90       	pop	r0
    1a88:	cf 91       	pop	r28
    1a8a:	df 91       	pop	r29
    1a8c:	08 95       	ret

00001a8e <SCH_Start>:

void SCH_Start(void)
{
    1a8e:	df 93       	push	r29
    1a90:	cf 93       	push	r28
    1a92:	cd b7       	in	r28, 0x3d	; 61
    1a94:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(SREG,SREG_GIE);                /*ENABLE GLOBAL INTERRUPT*/
    1a96:	af e5       	ldi	r26, 0x5F	; 95
    1a98:	b0 e0       	ldi	r27, 0x00	; 0
    1a9a:	ef e5       	ldi	r30, 0x5F	; 95
    1a9c:	f0 e0       	ldi	r31, 0x00	; 0
    1a9e:	80 81       	ld	r24, Z
    1aa0:	80 68       	ori	r24, 0x80	; 128
    1aa2:	8c 93       	st	X, r24
}
    1aa4:	cf 91       	pop	r28
    1aa6:	df 91       	pop	r29
    1aa8:	08 95       	ret

00001aaa <SCH_ISR>:



void SCH_ISR(void) /*the update function*/
{
    1aaa:	df 93       	push	r29
    1aac:	cf 93       	push	r28
    1aae:	0f 92       	push	r0
    1ab0:	cd b7       	in	r28, 0x3d	; 61
    1ab2:	de b7       	in	r29, 0x3e	; 62
	u8 Index;
	
	for(Index=0; Index < SCH_MAX_TASKS; Index++)
    1ab4:	19 82       	std	Y+1, r1	; 0x01
    1ab6:	94 c0       	rjmp	.+296    	; 0x1be0 <SCH_ISR+0x136>
	{
		if (SCH_TaskArr[Index].ptrTask)
    1ab8:	89 81       	ldd	r24, Y+1	; 0x01
    1aba:	28 2f       	mov	r18, r24
    1abc:	30 e0       	ldi	r19, 0x00	; 0
    1abe:	c9 01       	movw	r24, r18
    1ac0:	88 0f       	add	r24, r24
    1ac2:	99 1f       	adc	r25, r25
    1ac4:	82 0f       	add	r24, r18
    1ac6:	93 1f       	adc	r25, r19
    1ac8:	88 0f       	add	r24, r24
    1aca:	99 1f       	adc	r25, r25
    1acc:	fc 01       	movw	r30, r24
    1ace:	ee 57       	subi	r30, 0x7E	; 126
    1ad0:	fe 4f       	sbci	r31, 0xFE	; 254
    1ad2:	80 81       	ld	r24, Z
    1ad4:	91 81       	ldd	r25, Z+1	; 0x01
    1ad6:	00 97       	sbiw	r24, 0x00	; 0
    1ad8:	09 f4       	brne	.+2      	; 0x1adc <SCH_ISR+0x32>
    1ada:	7f c0       	rjmp	.+254    	; 0x1bda <SCH_ISR+0x130>
		{
		if(SCH_TaskArr[Index].Delay == 0)
    1adc:	89 81       	ldd	r24, Y+1	; 0x01
    1ade:	28 2f       	mov	r18, r24
    1ae0:	30 e0       	ldi	r19, 0x00	; 0
    1ae2:	c9 01       	movw	r24, r18
    1ae4:	88 0f       	add	r24, r24
    1ae6:	99 1f       	adc	r25, r25
    1ae8:	82 0f       	add	r24, r18
    1aea:	93 1f       	adc	r25, r19
    1aec:	01 96       	adiw	r24, 0x01	; 1
    1aee:	88 0f       	add	r24, r24
    1af0:	99 1f       	adc	r25, r25
    1af2:	fc 01       	movw	r30, r24
    1af4:	ee 57       	subi	r30, 0x7E	; 126
    1af6:	fe 4f       	sbci	r31, 0xFE	; 254
    1af8:	80 81       	ld	r24, Z
    1afa:	88 23       	and	r24, r24
    1afc:	09 f0       	breq	.+2      	; 0x1b00 <SCH_ISR+0x56>
    1afe:	4d c0       	rjmp	.+154    	; 0x1b9a <SCH_ISR+0xf0>
		{
			SCH_TaskArr[Index].RunMe ++;
    1b00:	89 81       	ldd	r24, Y+1	; 0x01
    1b02:	28 2f       	mov	r18, r24
    1b04:	30 e0       	ldi	r19, 0x00	; 0
    1b06:	c9 01       	movw	r24, r18
    1b08:	88 0f       	add	r24, r24
    1b0a:	99 1f       	adc	r25, r25
    1b0c:	82 0f       	add	r24, r18
    1b0e:	93 1f       	adc	r25, r19
    1b10:	88 0f       	add	r24, r24
    1b12:	99 1f       	adc	r25, r25
    1b14:	fc 01       	movw	r30, r24
    1b16:	eb 57       	subi	r30, 0x7B	; 123
    1b18:	fe 4f       	sbci	r31, 0xFE	; 254
    1b1a:	80 81       	ld	r24, Z
    1b1c:	48 2f       	mov	r20, r24
    1b1e:	4f 5f       	subi	r20, 0xFF	; 255
    1b20:	c9 01       	movw	r24, r18
    1b22:	88 0f       	add	r24, r24
    1b24:	99 1f       	adc	r25, r25
    1b26:	82 0f       	add	r24, r18
    1b28:	93 1f       	adc	r25, r19
    1b2a:	88 0f       	add	r24, r24
    1b2c:	99 1f       	adc	r25, r25
    1b2e:	fc 01       	movw	r30, r24
    1b30:	eb 57       	subi	r30, 0x7B	; 123
    1b32:	fe 4f       	sbci	r31, 0xFE	; 254
    1b34:	40 83       	st	Z, r20
			if (SCH_TaskArr[Index].Period !=0)
    1b36:	89 81       	ldd	r24, Y+1	; 0x01
    1b38:	28 2f       	mov	r18, r24
    1b3a:	30 e0       	ldi	r19, 0x00	; 0
    1b3c:	c9 01       	movw	r24, r18
    1b3e:	88 0f       	add	r24, r24
    1b40:	99 1f       	adc	r25, r25
    1b42:	82 0f       	add	r24, r18
    1b44:	93 1f       	adc	r25, r19
    1b46:	88 0f       	add	r24, r24
    1b48:	99 1f       	adc	r25, r25
    1b4a:	fc 01       	movw	r30, r24
    1b4c:	ea 57       	subi	r30, 0x7A	; 122
    1b4e:	fe 4f       	sbci	r31, 0xFE	; 254
    1b50:	80 81       	ld	r24, Z
    1b52:	91 81       	ldd	r25, Z+1	; 0x01
    1b54:	00 97       	sbiw	r24, 0x00	; 0
    1b56:	09 f4       	brne	.+2      	; 0x1b5a <SCH_ISR+0xb0>
    1b58:	40 c0       	rjmp	.+128    	; 0x1bda <SCH_ISR+0x130>
			{
				SCH_TaskArr[Index].Delay = SCH_TaskArr[Index].Period;
    1b5a:	89 81       	ldd	r24, Y+1	; 0x01
    1b5c:	48 2f       	mov	r20, r24
    1b5e:	50 e0       	ldi	r21, 0x00	; 0
    1b60:	89 81       	ldd	r24, Y+1	; 0x01
    1b62:	28 2f       	mov	r18, r24
    1b64:	30 e0       	ldi	r19, 0x00	; 0
    1b66:	c9 01       	movw	r24, r18
    1b68:	88 0f       	add	r24, r24
    1b6a:	99 1f       	adc	r25, r25
    1b6c:	82 0f       	add	r24, r18
    1b6e:	93 1f       	adc	r25, r19
    1b70:	88 0f       	add	r24, r24
    1b72:	99 1f       	adc	r25, r25
    1b74:	fc 01       	movw	r30, r24
    1b76:	ea 57       	subi	r30, 0x7A	; 122
    1b78:	fe 4f       	sbci	r31, 0xFE	; 254
    1b7a:	80 81       	ld	r24, Z
    1b7c:	91 81       	ldd	r25, Z+1	; 0x01
    1b7e:	28 2f       	mov	r18, r24
    1b80:	ca 01       	movw	r24, r20
    1b82:	88 0f       	add	r24, r24
    1b84:	99 1f       	adc	r25, r25
    1b86:	84 0f       	add	r24, r20
    1b88:	95 1f       	adc	r25, r21
    1b8a:	01 96       	adiw	r24, 0x01	; 1
    1b8c:	88 0f       	add	r24, r24
    1b8e:	99 1f       	adc	r25, r25
    1b90:	fc 01       	movw	r30, r24
    1b92:	ee 57       	subi	r30, 0x7E	; 126
    1b94:	fe 4f       	sbci	r31, 0xFE	; 254
    1b96:	20 83       	st	Z, r18
    1b98:	20 c0       	rjmp	.+64     	; 0x1bda <SCH_ISR+0x130>
			}
		}else 
		{
			SCH_TaskArr[Index].Delay -=1;
    1b9a:	89 81       	ldd	r24, Y+1	; 0x01
    1b9c:	48 2f       	mov	r20, r24
    1b9e:	50 e0       	ldi	r21, 0x00	; 0
    1ba0:	89 81       	ldd	r24, Y+1	; 0x01
    1ba2:	28 2f       	mov	r18, r24
    1ba4:	30 e0       	ldi	r19, 0x00	; 0
    1ba6:	c9 01       	movw	r24, r18
    1ba8:	88 0f       	add	r24, r24
    1baa:	99 1f       	adc	r25, r25
    1bac:	82 0f       	add	r24, r18
    1bae:	93 1f       	adc	r25, r19
    1bb0:	01 96       	adiw	r24, 0x01	; 1
    1bb2:	88 0f       	add	r24, r24
    1bb4:	99 1f       	adc	r25, r25
    1bb6:	fc 01       	movw	r30, r24
    1bb8:	ee 57       	subi	r30, 0x7E	; 126
    1bba:	fe 4f       	sbci	r31, 0xFE	; 254
    1bbc:	80 81       	ld	r24, Z
    1bbe:	28 2f       	mov	r18, r24
    1bc0:	21 50       	subi	r18, 0x01	; 1
    1bc2:	ca 01       	movw	r24, r20
    1bc4:	88 0f       	add	r24, r24
    1bc6:	99 1f       	adc	r25, r25
    1bc8:	84 0f       	add	r24, r20
    1bca:	95 1f       	adc	r25, r21
    1bcc:	01 96       	adiw	r24, 0x01	; 1
    1bce:	88 0f       	add	r24, r24
    1bd0:	99 1f       	adc	r25, r25
    1bd2:	fc 01       	movw	r30, r24
    1bd4:	ee 57       	subi	r30, 0x7E	; 126
    1bd6:	fe 4f       	sbci	r31, 0xFE	; 254
    1bd8:	20 83       	st	Z, r18

void SCH_ISR(void) /*the update function*/
{
	u8 Index;
	
	for(Index=0; Index < SCH_MAX_TASKS; Index++)
    1bda:	89 81       	ldd	r24, Y+1	; 0x01
    1bdc:	8f 5f       	subi	r24, 0xFF	; 255
    1bde:	89 83       	std	Y+1, r24	; 0x01
    1be0:	89 81       	ldd	r24, Y+1	; 0x01
    1be2:	8a 30       	cpi	r24, 0x0A	; 10
    1be4:	08 f4       	brcc	.+2      	; 0x1be8 <SCH_ISR+0x13e>
    1be6:	68 cf       	rjmp	.-304    	; 0x1ab8 <SCH_ISR+0xe>
		{
			SCH_TaskArr[Index].Delay -=1;
		}
		}
	}
}
    1be8:	0f 90       	pop	r0
    1bea:	cf 91       	pop	r28
    1bec:	df 91       	pop	r29
    1bee:	08 95       	ret

00001bf0 <SCH_Add_Task>:


u8 SCH_Add_Task(void (* pFunction)(),
				const u8 DELAY,
				const u16 PERIOD)
{
    1bf0:	df 93       	push	r29
    1bf2:	cf 93       	push	r28
    1bf4:	00 d0       	rcall	.+0      	; 0x1bf6 <SCH_Add_Task+0x6>
    1bf6:	00 d0       	rcall	.+0      	; 0x1bf8 <SCH_Add_Task+0x8>
    1bf8:	00 d0       	rcall	.+0      	; 0x1bfa <SCH_Add_Task+0xa>
    1bfa:	cd b7       	in	r28, 0x3d	; 61
    1bfc:	de b7       	in	r29, 0x3e	; 62
    1bfe:	9b 83       	std	Y+3, r25	; 0x03
    1c00:	8a 83       	std	Y+2, r24	; 0x02
    1c02:	6c 83       	std	Y+4, r22	; 0x04
    1c04:	5e 83       	std	Y+6, r21	; 0x06
    1c06:	4d 83       	std	Y+5, r20	; 0x05
	u8 Index=0;
    1c08:	19 82       	std	Y+1, r1	; 0x01
    1c0a:	03 c0       	rjmp	.+6      	; 0x1c12 <SCH_Add_Task+0x22>

    while ((SCH_TaskArr[Index].ptrTask != 0) && (Index < SCH_MAX_TASKS))
		{
			Index++;
    1c0c:	89 81       	ldd	r24, Y+1	; 0x01
    1c0e:	8f 5f       	subi	r24, 0xFF	; 255
    1c10:	89 83       	std	Y+1, r24	; 0x01
				const u8 DELAY,
				const u16 PERIOD)
{
	u8 Index=0;

    while ((SCH_TaskArr[Index].ptrTask != 0) && (Index < SCH_MAX_TASKS))
    1c12:	89 81       	ldd	r24, Y+1	; 0x01
    1c14:	28 2f       	mov	r18, r24
    1c16:	30 e0       	ldi	r19, 0x00	; 0
    1c18:	c9 01       	movw	r24, r18
    1c1a:	88 0f       	add	r24, r24
    1c1c:	99 1f       	adc	r25, r25
    1c1e:	82 0f       	add	r24, r18
    1c20:	93 1f       	adc	r25, r19
    1c22:	88 0f       	add	r24, r24
    1c24:	99 1f       	adc	r25, r25
    1c26:	fc 01       	movw	r30, r24
    1c28:	ee 57       	subi	r30, 0x7E	; 126
    1c2a:	fe 4f       	sbci	r31, 0xFE	; 254
    1c2c:	80 81       	ld	r24, Z
    1c2e:	91 81       	ldd	r25, Z+1	; 0x01
    1c30:	00 97       	sbiw	r24, 0x00	; 0
    1c32:	19 f0       	breq	.+6      	; 0x1c3a <SCH_Add_Task+0x4a>
    1c34:	89 81       	ldd	r24, Y+1	; 0x01
    1c36:	8a 30       	cpi	r24, 0x0A	; 10
    1c38:	48 f3       	brcs	.-46     	; 0x1c0c <SCH_Add_Task+0x1c>
		{
			Index++;
		}
	
	SCH_TaskArr[Index].ptrTask = pFunction;
    1c3a:	89 81       	ldd	r24, Y+1	; 0x01
    1c3c:	28 2f       	mov	r18, r24
    1c3e:	30 e0       	ldi	r19, 0x00	; 0
    1c40:	4a 81       	ldd	r20, Y+2	; 0x02
    1c42:	5b 81       	ldd	r21, Y+3	; 0x03
    1c44:	c9 01       	movw	r24, r18
    1c46:	88 0f       	add	r24, r24
    1c48:	99 1f       	adc	r25, r25
    1c4a:	82 0f       	add	r24, r18
    1c4c:	93 1f       	adc	r25, r19
    1c4e:	88 0f       	add	r24, r24
    1c50:	99 1f       	adc	r25, r25
    1c52:	fc 01       	movw	r30, r24
    1c54:	ee 57       	subi	r30, 0x7E	; 126
    1c56:	fe 4f       	sbci	r31, 0xFE	; 254
    1c58:	51 83       	std	Z+1, r21	; 0x01
    1c5a:	40 83       	st	Z, r20
	SCH_TaskArr[Index].Delay = DELAY;
    1c5c:	89 81       	ldd	r24, Y+1	; 0x01
    1c5e:	28 2f       	mov	r18, r24
    1c60:	30 e0       	ldi	r19, 0x00	; 0
    1c62:	c9 01       	movw	r24, r18
    1c64:	88 0f       	add	r24, r24
    1c66:	99 1f       	adc	r25, r25
    1c68:	82 0f       	add	r24, r18
    1c6a:	93 1f       	adc	r25, r19
    1c6c:	01 96       	adiw	r24, 0x01	; 1
    1c6e:	88 0f       	add	r24, r24
    1c70:	99 1f       	adc	r25, r25
    1c72:	fc 01       	movw	r30, r24
    1c74:	ee 57       	subi	r30, 0x7E	; 126
    1c76:	fe 4f       	sbci	r31, 0xFE	; 254
    1c78:	8c 81       	ldd	r24, Y+4	; 0x04
    1c7a:	80 83       	st	Z, r24
	SCH_TaskArr[Index].Period = PERIOD;
    1c7c:	89 81       	ldd	r24, Y+1	; 0x01
    1c7e:	28 2f       	mov	r18, r24
    1c80:	30 e0       	ldi	r19, 0x00	; 0
    1c82:	c9 01       	movw	r24, r18
    1c84:	88 0f       	add	r24, r24
    1c86:	99 1f       	adc	r25, r25
    1c88:	82 0f       	add	r24, r18
    1c8a:	93 1f       	adc	r25, r19
    1c8c:	88 0f       	add	r24, r24
    1c8e:	99 1f       	adc	r25, r25
    1c90:	fc 01       	movw	r30, r24
    1c92:	ea 57       	subi	r30, 0x7A	; 122
    1c94:	fe 4f       	sbci	r31, 0xFE	; 254
    1c96:	8d 81       	ldd	r24, Y+5	; 0x05
    1c98:	9e 81       	ldd	r25, Y+6	; 0x06
    1c9a:	91 83       	std	Z+1, r25	; 0x01
    1c9c:	80 83       	st	Z, r24
	SCH_TaskArr[Index].RunMe = 0;
    1c9e:	89 81       	ldd	r24, Y+1	; 0x01
    1ca0:	28 2f       	mov	r18, r24
    1ca2:	30 e0       	ldi	r19, 0x00	; 0
    1ca4:	c9 01       	movw	r24, r18
    1ca6:	88 0f       	add	r24, r24
    1ca8:	99 1f       	adc	r25, r25
    1caa:	82 0f       	add	r24, r18
    1cac:	93 1f       	adc	r25, r19
    1cae:	88 0f       	add	r24, r24
    1cb0:	99 1f       	adc	r25, r25
    1cb2:	fc 01       	movw	r30, r24
    1cb4:	eb 57       	subi	r30, 0x7B	; 123
    1cb6:	fe 4f       	sbci	r31, 0xFE	; 254
    1cb8:	10 82       	st	Z, r1
		
	return Index;	
    1cba:	89 81       	ldd	r24, Y+1	; 0x01
}
    1cbc:	26 96       	adiw	r28, 0x06	; 6
    1cbe:	0f b6       	in	r0, 0x3f	; 63
    1cc0:	f8 94       	cli
    1cc2:	de bf       	out	0x3e, r29	; 62
    1cc4:	0f be       	out	0x3f, r0	; 63
    1cc6:	cd bf       	out	0x3d, r28	; 61
    1cc8:	cf 91       	pop	r28
    1cca:	df 91       	pop	r29
    1ccc:	08 95       	ret

00001cce <SCH_Delete_Task>:


void SCH_Delete_Task(u8 Index)
{
    1cce:	df 93       	push	r29
    1cd0:	cf 93       	push	r28
    1cd2:	0f 92       	push	r0
    1cd4:	cd b7       	in	r28, 0x3d	; 61
    1cd6:	de b7       	in	r29, 0x3e	; 62
    1cd8:	89 83       	std	Y+1, r24	; 0x01
	SCH_TaskArr[Index].ptrTask =  0x0000;
    1cda:	89 81       	ldd	r24, Y+1	; 0x01
    1cdc:	28 2f       	mov	r18, r24
    1cde:	30 e0       	ldi	r19, 0x00	; 0
    1ce0:	c9 01       	movw	r24, r18
    1ce2:	88 0f       	add	r24, r24
    1ce4:	99 1f       	adc	r25, r25
    1ce6:	82 0f       	add	r24, r18
    1ce8:	93 1f       	adc	r25, r19
    1cea:	88 0f       	add	r24, r24
    1cec:	99 1f       	adc	r25, r25
    1cee:	fc 01       	movw	r30, r24
    1cf0:	ee 57       	subi	r30, 0x7E	; 126
    1cf2:	fe 4f       	sbci	r31, 0xFE	; 254
    1cf4:	11 82       	std	Z+1, r1	; 0x01
    1cf6:	10 82       	st	Z, r1
	SCH_TaskArr[Index].Delay =  0;
    1cf8:	89 81       	ldd	r24, Y+1	; 0x01
    1cfa:	28 2f       	mov	r18, r24
    1cfc:	30 e0       	ldi	r19, 0x00	; 0
    1cfe:	c9 01       	movw	r24, r18
    1d00:	88 0f       	add	r24, r24
    1d02:	99 1f       	adc	r25, r25
    1d04:	82 0f       	add	r24, r18
    1d06:	93 1f       	adc	r25, r19
    1d08:	01 96       	adiw	r24, 0x01	; 1
    1d0a:	88 0f       	add	r24, r24
    1d0c:	99 1f       	adc	r25, r25
    1d0e:	fc 01       	movw	r30, r24
    1d10:	ee 57       	subi	r30, 0x7E	; 126
    1d12:	fe 4f       	sbci	r31, 0xFE	; 254
    1d14:	10 82       	st	Z, r1
	SCH_TaskArr[Index].Period = 0;
    1d16:	89 81       	ldd	r24, Y+1	; 0x01
    1d18:	28 2f       	mov	r18, r24
    1d1a:	30 e0       	ldi	r19, 0x00	; 0
    1d1c:	c9 01       	movw	r24, r18
    1d1e:	88 0f       	add	r24, r24
    1d20:	99 1f       	adc	r25, r25
    1d22:	82 0f       	add	r24, r18
    1d24:	93 1f       	adc	r25, r19
    1d26:	88 0f       	add	r24, r24
    1d28:	99 1f       	adc	r25, r25
    1d2a:	fc 01       	movw	r30, r24
    1d2c:	ea 57       	subi	r30, 0x7A	; 122
    1d2e:	fe 4f       	sbci	r31, 0xFE	; 254
    1d30:	11 82       	std	Z+1, r1	; 0x01
    1d32:	10 82       	st	Z, r1
	SCH_TaskArr[Index].RunMe =  0;
    1d34:	89 81       	ldd	r24, Y+1	; 0x01
    1d36:	28 2f       	mov	r18, r24
    1d38:	30 e0       	ldi	r19, 0x00	; 0
    1d3a:	c9 01       	movw	r24, r18
    1d3c:	88 0f       	add	r24, r24
    1d3e:	99 1f       	adc	r25, r25
    1d40:	82 0f       	add	r24, r18
    1d42:	93 1f       	adc	r25, r19
    1d44:	88 0f       	add	r24, r24
    1d46:	99 1f       	adc	r25, r25
    1d48:	fc 01       	movw	r30, r24
    1d4a:	eb 57       	subi	r30, 0x7B	; 123
    1d4c:	fe 4f       	sbci	r31, 0xFE	; 254
    1d4e:	10 82       	st	Z, r1
}
    1d50:	0f 90       	pop	r0
    1d52:	cf 91       	pop	r28
    1d54:	df 91       	pop	r29
    1d56:	08 95       	ret

00001d58 <SCH_Delete_All_Tasks>:


void SCH_Delete_All_Tasks(void)
{
    1d58:	df 93       	push	r29
    1d5a:	cf 93       	push	r28
    1d5c:	0f 92       	push	r0
    1d5e:	cd b7       	in	r28, 0x3d	; 61
    1d60:	de b7       	in	r29, 0x3e	; 62
	for (u8 Index=0;Index<SCH_MAX_TASKS;Index++)
    1d62:	19 82       	std	Y+1, r1	; 0x01
    1d64:	3e c0       	rjmp	.+124    	; 0x1de2 <SCH_Delete_All_Tasks+0x8a>
	{
		SCH_TaskArr[Index].ptrTask =  0x0000;
    1d66:	89 81       	ldd	r24, Y+1	; 0x01
    1d68:	28 2f       	mov	r18, r24
    1d6a:	30 e0       	ldi	r19, 0x00	; 0
    1d6c:	c9 01       	movw	r24, r18
    1d6e:	88 0f       	add	r24, r24
    1d70:	99 1f       	adc	r25, r25
    1d72:	82 0f       	add	r24, r18
    1d74:	93 1f       	adc	r25, r19
    1d76:	88 0f       	add	r24, r24
    1d78:	99 1f       	adc	r25, r25
    1d7a:	fc 01       	movw	r30, r24
    1d7c:	ee 57       	subi	r30, 0x7E	; 126
    1d7e:	fe 4f       	sbci	r31, 0xFE	; 254
    1d80:	11 82       	std	Z+1, r1	; 0x01
    1d82:	10 82       	st	Z, r1
		SCH_TaskArr[Index].Delay =  0;
    1d84:	89 81       	ldd	r24, Y+1	; 0x01
    1d86:	28 2f       	mov	r18, r24
    1d88:	30 e0       	ldi	r19, 0x00	; 0
    1d8a:	c9 01       	movw	r24, r18
    1d8c:	88 0f       	add	r24, r24
    1d8e:	99 1f       	adc	r25, r25
    1d90:	82 0f       	add	r24, r18
    1d92:	93 1f       	adc	r25, r19
    1d94:	01 96       	adiw	r24, 0x01	; 1
    1d96:	88 0f       	add	r24, r24
    1d98:	99 1f       	adc	r25, r25
    1d9a:	fc 01       	movw	r30, r24
    1d9c:	ee 57       	subi	r30, 0x7E	; 126
    1d9e:	fe 4f       	sbci	r31, 0xFE	; 254
    1da0:	10 82       	st	Z, r1
		SCH_TaskArr[Index].Period = 0;
    1da2:	89 81       	ldd	r24, Y+1	; 0x01
    1da4:	28 2f       	mov	r18, r24
    1da6:	30 e0       	ldi	r19, 0x00	; 0
    1da8:	c9 01       	movw	r24, r18
    1daa:	88 0f       	add	r24, r24
    1dac:	99 1f       	adc	r25, r25
    1dae:	82 0f       	add	r24, r18
    1db0:	93 1f       	adc	r25, r19
    1db2:	88 0f       	add	r24, r24
    1db4:	99 1f       	adc	r25, r25
    1db6:	fc 01       	movw	r30, r24
    1db8:	ea 57       	subi	r30, 0x7A	; 122
    1dba:	fe 4f       	sbci	r31, 0xFE	; 254
    1dbc:	11 82       	std	Z+1, r1	; 0x01
    1dbe:	10 82       	st	Z, r1
		SCH_TaskArr[Index].RunMe =  0;
    1dc0:	89 81       	ldd	r24, Y+1	; 0x01
    1dc2:	28 2f       	mov	r18, r24
    1dc4:	30 e0       	ldi	r19, 0x00	; 0
    1dc6:	c9 01       	movw	r24, r18
    1dc8:	88 0f       	add	r24, r24
    1dca:	99 1f       	adc	r25, r25
    1dcc:	82 0f       	add	r24, r18
    1dce:	93 1f       	adc	r25, r19
    1dd0:	88 0f       	add	r24, r24
    1dd2:	99 1f       	adc	r25, r25
    1dd4:	fc 01       	movw	r30, r24
    1dd6:	eb 57       	subi	r30, 0x7B	; 123
    1dd8:	fe 4f       	sbci	r31, 0xFE	; 254
    1dda:	10 82       	st	Z, r1
}


void SCH_Delete_All_Tasks(void)
{
	for (u8 Index=0;Index<SCH_MAX_TASKS;Index++)
    1ddc:	89 81       	ldd	r24, Y+1	; 0x01
    1dde:	8f 5f       	subi	r24, 0xFF	; 255
    1de0:	89 83       	std	Y+1, r24	; 0x01
    1de2:	89 81       	ldd	r24, Y+1	; 0x01
    1de4:	8a 30       	cpi	r24, 0x0A	; 10
    1de6:	08 f4       	brcc	.+2      	; 0x1dea <SCH_Delete_All_Tasks+0x92>
    1de8:	be cf       	rjmp	.-132    	; 0x1d66 <SCH_Delete_All_Tasks+0xe>
		SCH_TaskArr[Index].ptrTask =  0x0000;
		SCH_TaskArr[Index].Delay =  0;
		SCH_TaskArr[Index].Period = 0;
		SCH_TaskArr[Index].RunMe =  0;
	}
}
    1dea:	0f 90       	pop	r0
    1dec:	cf 91       	pop	r28
    1dee:	df 91       	pop	r29
    1df0:	08 95       	ret

00001df2 <SCH_Dispatcher>:


void SCH_Dispatcher(void)
{
    1df2:	df 93       	push	r29
    1df4:	cf 93       	push	r28
    1df6:	0f 92       	push	r0
    1df8:	cd b7       	in	r28, 0x3d	; 61
    1dfa:	de b7       	in	r29, 0x3e	; 62
	u8 Index;
	for(Index=0; Index < SCH_MAX_TASKS; Index++)
    1dfc:	19 82       	std	Y+1, r1	; 0x01
    1dfe:	57 c0       	rjmp	.+174    	; 0x1eae <SCH_Dispatcher+0xbc>
	{
		if(SCH_TaskArr[Index].RunMe > 0)
    1e00:	89 81       	ldd	r24, Y+1	; 0x01
    1e02:	28 2f       	mov	r18, r24
    1e04:	30 e0       	ldi	r19, 0x00	; 0
    1e06:	c9 01       	movw	r24, r18
    1e08:	88 0f       	add	r24, r24
    1e0a:	99 1f       	adc	r25, r25
    1e0c:	82 0f       	add	r24, r18
    1e0e:	93 1f       	adc	r25, r19
    1e10:	88 0f       	add	r24, r24
    1e12:	99 1f       	adc	r25, r25
    1e14:	fc 01       	movw	r30, r24
    1e16:	eb 57       	subi	r30, 0x7B	; 123
    1e18:	fe 4f       	sbci	r31, 0xFE	; 254
    1e1a:	80 81       	ld	r24, Z
    1e1c:	88 23       	and	r24, r24
    1e1e:	09 f4       	brne	.+2      	; 0x1e22 <SCH_Dispatcher+0x30>
    1e20:	43 c0       	rjmp	.+134    	; 0x1ea8 <SCH_Dispatcher+0xb6>
		{
			(*SCH_TaskArr[Index].ptrTask)();
    1e22:	89 81       	ldd	r24, Y+1	; 0x01
    1e24:	28 2f       	mov	r18, r24
    1e26:	30 e0       	ldi	r19, 0x00	; 0
    1e28:	c9 01       	movw	r24, r18
    1e2a:	88 0f       	add	r24, r24
    1e2c:	99 1f       	adc	r25, r25
    1e2e:	82 0f       	add	r24, r18
    1e30:	93 1f       	adc	r25, r19
    1e32:	88 0f       	add	r24, r24
    1e34:	99 1f       	adc	r25, r25
    1e36:	fc 01       	movw	r30, r24
    1e38:	ee 57       	subi	r30, 0x7E	; 126
    1e3a:	fe 4f       	sbci	r31, 0xFE	; 254
    1e3c:	01 90       	ld	r0, Z+
    1e3e:	f0 81       	ld	r31, Z
    1e40:	e0 2d       	mov	r30, r0
    1e42:	09 95       	icall
			SCH_TaskArr[Index].RunMe-=1;
    1e44:	89 81       	ldd	r24, Y+1	; 0x01
    1e46:	48 2f       	mov	r20, r24
    1e48:	50 e0       	ldi	r21, 0x00	; 0
    1e4a:	89 81       	ldd	r24, Y+1	; 0x01
    1e4c:	28 2f       	mov	r18, r24
    1e4e:	30 e0       	ldi	r19, 0x00	; 0
    1e50:	c9 01       	movw	r24, r18
    1e52:	88 0f       	add	r24, r24
    1e54:	99 1f       	adc	r25, r25
    1e56:	82 0f       	add	r24, r18
    1e58:	93 1f       	adc	r25, r19
    1e5a:	88 0f       	add	r24, r24
    1e5c:	99 1f       	adc	r25, r25
    1e5e:	fc 01       	movw	r30, r24
    1e60:	eb 57       	subi	r30, 0x7B	; 123
    1e62:	fe 4f       	sbci	r31, 0xFE	; 254
    1e64:	80 81       	ld	r24, Z
    1e66:	28 2f       	mov	r18, r24
    1e68:	21 50       	subi	r18, 0x01	; 1
    1e6a:	ca 01       	movw	r24, r20
    1e6c:	88 0f       	add	r24, r24
    1e6e:	99 1f       	adc	r25, r25
    1e70:	84 0f       	add	r24, r20
    1e72:	95 1f       	adc	r25, r21
    1e74:	88 0f       	add	r24, r24
    1e76:	99 1f       	adc	r25, r25
    1e78:	fc 01       	movw	r30, r24
    1e7a:	eb 57       	subi	r30, 0x7B	; 123
    1e7c:	fe 4f       	sbci	r31, 0xFE	; 254
    1e7e:	20 83       	st	Z, r18
			
			if(SCH_TaskArr[Index].Period ==0)
    1e80:	89 81       	ldd	r24, Y+1	; 0x01
    1e82:	28 2f       	mov	r18, r24
    1e84:	30 e0       	ldi	r19, 0x00	; 0
    1e86:	c9 01       	movw	r24, r18
    1e88:	88 0f       	add	r24, r24
    1e8a:	99 1f       	adc	r25, r25
    1e8c:	82 0f       	add	r24, r18
    1e8e:	93 1f       	adc	r25, r19
    1e90:	88 0f       	add	r24, r24
    1e92:	99 1f       	adc	r25, r25
    1e94:	fc 01       	movw	r30, r24
    1e96:	ea 57       	subi	r30, 0x7A	; 122
    1e98:	fe 4f       	sbci	r31, 0xFE	; 254
    1e9a:	80 81       	ld	r24, Z
    1e9c:	91 81       	ldd	r25, Z+1	; 0x01
    1e9e:	00 97       	sbiw	r24, 0x00	; 0
    1ea0:	19 f4       	brne	.+6      	; 0x1ea8 <SCH_Dispatcher+0xb6>
			{
				SCH_Delete_Task(Index);
    1ea2:	89 81       	ldd	r24, Y+1	; 0x01
    1ea4:	0e 94 67 0e 	call	0x1cce	; 0x1cce <SCH_Delete_Task>


void SCH_Dispatcher(void)
{
	u8 Index;
	for(Index=0; Index < SCH_MAX_TASKS; Index++)
    1ea8:	89 81       	ldd	r24, Y+1	; 0x01
    1eaa:	8f 5f       	subi	r24, 0xFF	; 255
    1eac:	89 83       	std	Y+1, r24	; 0x01
    1eae:	89 81       	ldd	r24, Y+1	; 0x01
    1eb0:	8a 30       	cpi	r24, 0x0A	; 10
    1eb2:	08 f4       	brcc	.+2      	; 0x1eb6 <SCH_Dispatcher+0xc4>
    1eb4:	a5 cf       	rjmp	.-182    	; 0x1e00 <SCH_Dispatcher+0xe>
			{
				SCH_Delete_Task(Index);
			}
		}	
	}
}
    1eb6:	0f 90       	pop	r0
    1eb8:	cf 91       	pop	r28
    1eba:	df 91       	pop	r29
    1ebc:	08 95       	ret

00001ebe <SCH_Stop>:

void SCH_Stop(void)
{
    1ebe:	df 93       	push	r29
    1ec0:	cf 93       	push	r28
    1ec2:	cd b7       	in	r28, 0x3d	; 61
    1ec4:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(SREG,SREG_GIE);
    1ec6:	af e5       	ldi	r26, 0x5F	; 95
    1ec8:	b0 e0       	ldi	r27, 0x00	; 0
    1eca:	ef e5       	ldi	r30, 0x5F	; 95
    1ecc:	f0 e0       	ldi	r31, 0x00	; 0
    1ece:	80 81       	ld	r24, Z
    1ed0:	8f 77       	andi	r24, 0x7F	; 127
    1ed2:	8c 93       	st	X, r24
}									 
    1ed4:	cf 91       	pop	r28
    1ed6:	df 91       	pop	r29
    1ed8:	08 95       	ret

00001eda <UART_init>:
#include "UART.h"
#include "DIO_interface.h"

extern uart_t ptr;
void UART_init(void)
{
    1eda:	2f 92       	push	r2
    1edc:	3f 92       	push	r3
    1ede:	4f 92       	push	r4
    1ee0:	5f 92       	push	r5
    1ee2:	6f 92       	push	r6
    1ee4:	7f 92       	push	r7
    1ee6:	8f 92       	push	r8
    1ee8:	9f 92       	push	r9
    1eea:	af 92       	push	r10
    1eec:	bf 92       	push	r11
    1eee:	cf 92       	push	r12
    1ef0:	df 92       	push	r13
    1ef2:	ef 92       	push	r14
    1ef4:	ff 92       	push	r15
    1ef6:	0f 93       	push	r16
    1ef8:	1f 93       	push	r17
    1efa:	df 93       	push	r29
    1efc:	cf 93       	push	r28
    1efe:	cd b7       	in	r28, 0x3d	; 61
    1f00:	de b7       	in	r29, 0x3e	; 62
    1f02:	2a 97       	sbiw	r28, 0x0a	; 10
    1f04:	0f b6       	in	r0, 0x3f	; 63
    1f06:	f8 94       	cli
    1f08:	de bf       	out	0x3e, r29	; 62
    1f0a:	0f be       	out	0x3f, r0	; 63
    1f0c:	cd bf       	out	0x3d, r28	; 61
	DIO_SetPinDirection(_PORTD, _PIN0, _INPUT);
    1f0e:	84 e0       	ldi	r24, 0x04	; 4
    1f10:	60 e0       	ldi	r22, 0x00	; 0
    1f12:	40 e0       	ldi	r20, 0x00	; 0
    1f14:	0e 94 a1 12 	call	0x2542	; 0x2542 <DIO_SetPinDirection>
	DIO_SetPinDirection(_PORTD, _PIN1,_OUTPUT);
    1f18:	84 e0       	ldi	r24, 0x04	; 4
    1f1a:	61 e0       	ldi	r22, 0x01	; 1
    1f1c:	41 e0       	ldi	r20, 0x01	; 1
    1f1e:	0e 94 a1 12 	call	0x2542	; 0x2542 <DIO_SetPinDirection>
	UCSRB = 0x18 ; //running UART as receiver&transmitter
    1f22:	ea e2       	ldi	r30, 0x2A	; 42
    1f24:	f0 e0       	ldi	r31, 0x00	; 0
    1f26:	88 e1       	ldi	r24, 0x18	; 24
    1f28:	80 83       	st	Z, r24
	//SET_BIT(UCSRB,TXCIE); //enable transmit interrupt

	switch(ptr.Mode)
    1f2a:	80 91 68 01 	lds	r24, 0x0168
    1f2e:	28 2f       	mov	r18, r24
    1f30:	30 e0       	ldi	r19, 0x00	; 0
    1f32:	3a 87       	std	Y+10, r19	; 0x0a
    1f34:	29 87       	std	Y+9, r18	; 0x09
    1f36:	89 85       	ldd	r24, Y+9	; 0x09
    1f38:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f3a:	00 97       	sbiw	r24, 0x00	; 0
    1f3c:	31 f0       	breq	.+12     	; 0x1f4a <UART_init+0x70>
    1f3e:	e9 85       	ldd	r30, Y+9	; 0x09
    1f40:	fa 85       	ldd	r31, Y+10	; 0x0a
    1f42:	e1 30       	cpi	r30, 0x01	; 1
    1f44:	f1 05       	cpc	r31, r1
    1f46:	49 f0       	breq	.+18     	; 0x1f5a <UART_init+0x80>
    1f48:	0f c0       	rjmp	.+30     	; 0x1f68 <UART_init+0x8e>
	{
		case 0 : CLR_BIT(UCSRC,UMSEL); break;//setting UASRT to Asynchronous mode
    1f4a:	a0 e4       	ldi	r26, 0x40	; 64
    1f4c:	b0 e0       	ldi	r27, 0x00	; 0
    1f4e:	e0 e4       	ldi	r30, 0x40	; 64
    1f50:	f0 e0       	ldi	r31, 0x00	; 0
    1f52:	80 81       	ld	r24, Z
    1f54:	8f 7b       	andi	r24, 0xBF	; 191
    1f56:	8c 93       	st	X, r24
    1f58:	07 c0       	rjmp	.+14     	; 0x1f68 <UART_init+0x8e>
		case 1 : SET_BIT(UCSRC,UMSEL); break;//setting UASRT to synchronous mode
    1f5a:	a0 e4       	ldi	r26, 0x40	; 64
    1f5c:	b0 e0       	ldi	r27, 0x00	; 0
    1f5e:	e0 e4       	ldi	r30, 0x40	; 64
    1f60:	f0 e0       	ldi	r31, 0x00	; 0
    1f62:	80 81       	ld	r24, Z
    1f64:	80 64       	ori	r24, 0x40	; 64
    1f66:	8c 93       	st	X, r24
	}

	switch(ptr.Parity)
    1f68:	80 91 69 01 	lds	r24, 0x0169
    1f6c:	28 2f       	mov	r18, r24
    1f6e:	30 e0       	ldi	r19, 0x00	; 0
    1f70:	38 87       	std	Y+8, r19	; 0x08
    1f72:	2f 83       	std	Y+7, r18	; 0x07
    1f74:	8f 81       	ldd	r24, Y+7	; 0x07
    1f76:	98 85       	ldd	r25, Y+8	; 0x08
    1f78:	81 30       	cpi	r24, 0x01	; 1
    1f7a:	91 05       	cpc	r25, r1
    1f7c:	c9 f0       	breq	.+50     	; 0x1fb0 <UART_init+0xd6>
    1f7e:	ef 81       	ldd	r30, Y+7	; 0x07
    1f80:	f8 85       	ldd	r31, Y+8	; 0x08
    1f82:	e2 30       	cpi	r30, 0x02	; 2
    1f84:	f1 05       	cpc	r31, r1
    1f86:	19 f1       	breq	.+70     	; 0x1fce <UART_init+0xf4>
    1f88:	2f 81       	ldd	r18, Y+7	; 0x07
    1f8a:	38 85       	ldd	r19, Y+8	; 0x08
    1f8c:	21 15       	cp	r18, r1
    1f8e:	31 05       	cpc	r19, r1
    1f90:	61 f5       	brne	.+88     	; 0x1fea <UART_init+0x110>
	{
		case NONE :
					CLR_BIT(UCSRC,UPM1);
    1f92:	a0 e4       	ldi	r26, 0x40	; 64
    1f94:	b0 e0       	ldi	r27, 0x00	; 0
    1f96:	e0 e4       	ldi	r30, 0x40	; 64
    1f98:	f0 e0       	ldi	r31, 0x00	; 0
    1f9a:	80 81       	ld	r24, Z
    1f9c:	8f 7d       	andi	r24, 0xDF	; 223
    1f9e:	8c 93       	st	X, r24
					CLR_BIT(UCSRC,UPM0);
    1fa0:	a0 e4       	ldi	r26, 0x40	; 64
    1fa2:	b0 e0       	ldi	r27, 0x00	; 0
    1fa4:	e0 e4       	ldi	r30, 0x40	; 64
    1fa6:	f0 e0       	ldi	r31, 0x00	; 0
    1fa8:	80 81       	ld	r24, Z
    1faa:	8f 7e       	andi	r24, 0xEF	; 239
    1fac:	8c 93       	st	X, r24
    1fae:	1d c0       	rjmp	.+58     	; 0x1fea <UART_init+0x110>
					break;
		case EVEN :
					SET_BIT(UCSRC,UPM1);
    1fb0:	a0 e4       	ldi	r26, 0x40	; 64
    1fb2:	b0 e0       	ldi	r27, 0x00	; 0
    1fb4:	e0 e4       	ldi	r30, 0x40	; 64
    1fb6:	f0 e0       	ldi	r31, 0x00	; 0
    1fb8:	80 81       	ld	r24, Z
    1fba:	80 62       	ori	r24, 0x20	; 32
    1fbc:	8c 93       	st	X, r24
					CLR_BIT(UCSRC,UPM0);
    1fbe:	a0 e4       	ldi	r26, 0x40	; 64
    1fc0:	b0 e0       	ldi	r27, 0x00	; 0
    1fc2:	e0 e4       	ldi	r30, 0x40	; 64
    1fc4:	f0 e0       	ldi	r31, 0x00	; 0
    1fc6:	80 81       	ld	r24, Z
    1fc8:	8f 7e       	andi	r24, 0xEF	; 239
    1fca:	8c 93       	st	X, r24
    1fcc:	0e c0       	rjmp	.+28     	; 0x1fea <UART_init+0x110>
					break;
		case ODD :
					SET_BIT(UCSRC,UPM1);
    1fce:	a0 e4       	ldi	r26, 0x40	; 64
    1fd0:	b0 e0       	ldi	r27, 0x00	; 0
    1fd2:	e0 e4       	ldi	r30, 0x40	; 64
    1fd4:	f0 e0       	ldi	r31, 0x00	; 0
    1fd6:	80 81       	ld	r24, Z
    1fd8:	80 62       	ori	r24, 0x20	; 32
    1fda:	8c 93       	st	X, r24
					SET_BIT(UCSRC,UPM0);
    1fdc:	a0 e4       	ldi	r26, 0x40	; 64
    1fde:	b0 e0       	ldi	r27, 0x00	; 0
    1fe0:	e0 e4       	ldi	r30, 0x40	; 64
    1fe2:	f0 e0       	ldi	r31, 0x00	; 0
    1fe4:	80 81       	ld	r24, Z
    1fe6:	80 61       	ori	r24, 0x10	; 16
    1fe8:	8c 93       	st	X, r24
					break;
	}

	switch (ptr.Stop_Bits)
    1fea:	80 91 6a 01 	lds	r24, 0x016A
    1fee:	e8 2f       	mov	r30, r24
    1ff0:	f0 e0       	ldi	r31, 0x00	; 0
    1ff2:	fe 83       	std	Y+6, r31	; 0x06
    1ff4:	ed 83       	std	Y+5, r30	; 0x05
    1ff6:	2d 81       	ldd	r18, Y+5	; 0x05
    1ff8:	3e 81       	ldd	r19, Y+6	; 0x06
    1ffa:	21 30       	cpi	r18, 0x01	; 1
    1ffc:	31 05       	cpc	r19, r1
    1ffe:	31 f0       	breq	.+12     	; 0x200c <UART_init+0x132>
    2000:	8d 81       	ldd	r24, Y+5	; 0x05
    2002:	9e 81       	ldd	r25, Y+6	; 0x06
    2004:	82 30       	cpi	r24, 0x02	; 2
    2006:	91 05       	cpc	r25, r1
    2008:	49 f0       	breq	.+18     	; 0x201c <UART_init+0x142>
    200a:	0f c0       	rjmp	.+30     	; 0x202a <UART_init+0x150>
	{
		case 1 : CLR_BIT(UCSRC,USBS); break;
    200c:	a0 e4       	ldi	r26, 0x40	; 64
    200e:	b0 e0       	ldi	r27, 0x00	; 0
    2010:	e0 e4       	ldi	r30, 0x40	; 64
    2012:	f0 e0       	ldi	r31, 0x00	; 0
    2014:	80 81       	ld	r24, Z
    2016:	87 7f       	andi	r24, 0xF7	; 247
    2018:	8c 93       	st	X, r24
    201a:	07 c0       	rjmp	.+14     	; 0x202a <UART_init+0x150>
		case 2 : SET_BIT(UCSRC,USBS);	break;
    201c:	a0 e4       	ldi	r26, 0x40	; 64
    201e:	b0 e0       	ldi	r27, 0x00	; 0
    2020:	e0 e4       	ldi	r30, 0x40	; 64
    2022:	f0 e0       	ldi	r31, 0x00	; 0
    2024:	80 81       	ld	r24, Z
    2026:	88 60       	ori	r24, 0x08	; 8
    2028:	8c 93       	st	X, r24
	}

	switch(ptr.Data_Bits)
    202a:	80 91 6b 01 	lds	r24, 0x016B
    202e:	e8 2f       	mov	r30, r24
    2030:	f0 e0       	ldi	r31, 0x00	; 0
    2032:	fc 83       	std	Y+4, r31	; 0x04
    2034:	eb 83       	std	Y+3, r30	; 0x03
    2036:	2b 81       	ldd	r18, Y+3	; 0x03
    2038:	3c 81       	ldd	r19, Y+4	; 0x04
    203a:	26 30       	cpi	r18, 0x06	; 6
    203c:	31 05       	cpc	r19, r1
    203e:	69 f1       	breq	.+90     	; 0x209a <UART_init+0x1c0>
    2040:	8b 81       	ldd	r24, Y+3	; 0x03
    2042:	9c 81       	ldd	r25, Y+4	; 0x04
    2044:	87 30       	cpi	r24, 0x07	; 7
    2046:	91 05       	cpc	r25, r1
    2048:	34 f4       	brge	.+12     	; 0x2056 <UART_init+0x17c>
    204a:	eb 81       	ldd	r30, Y+3	; 0x03
    204c:	fc 81       	ldd	r31, Y+4	; 0x04
    204e:	e5 30       	cpi	r30, 0x05	; 5
    2050:	f1 05       	cpc	r31, r1
    2052:	69 f0       	breq	.+26     	; 0x206e <UART_init+0x194>
    2054:	63 c0       	rjmp	.+198    	; 0x211c <UART_init+0x242>
    2056:	2b 81       	ldd	r18, Y+3	; 0x03
    2058:	3c 81       	ldd	r19, Y+4	; 0x04
    205a:	27 30       	cpi	r18, 0x07	; 7
    205c:	31 05       	cpc	r19, r1
    205e:	99 f1       	breq	.+102    	; 0x20c6 <UART_init+0x1ec>
    2060:	8b 81       	ldd	r24, Y+3	; 0x03
    2062:	9c 81       	ldd	r25, Y+4	; 0x04
    2064:	88 30       	cpi	r24, 0x08	; 8
    2066:	91 05       	cpc	r25, r1
    2068:	09 f4       	brne	.+2      	; 0x206c <UART_init+0x192>
    206a:	43 c0       	rjmp	.+134    	; 0x20f2 <UART_init+0x218>
    206c:	57 c0       	rjmp	.+174    	; 0x211c <UART_init+0x242>
	{
		case 5 :
				CLR_BIT(UCSRC,UCSZ2);
    206e:	a0 e4       	ldi	r26, 0x40	; 64
    2070:	b0 e0       	ldi	r27, 0x00	; 0
    2072:	e0 e4       	ldi	r30, 0x40	; 64
    2074:	f0 e0       	ldi	r31, 0x00	; 0
    2076:	80 81       	ld	r24, Z
    2078:	8b 7f       	andi	r24, 0xFB	; 251
    207a:	8c 93       	st	X, r24
				CLR_BIT(UCSRC,UCSZ1);
    207c:	a0 e4       	ldi	r26, 0x40	; 64
    207e:	b0 e0       	ldi	r27, 0x00	; 0
    2080:	e0 e4       	ldi	r30, 0x40	; 64
    2082:	f0 e0       	ldi	r31, 0x00	; 0
    2084:	80 81       	ld	r24, Z
    2086:	8b 7f       	andi	r24, 0xFB	; 251
    2088:	8c 93       	st	X, r24
				CLR_BIT(UCSRC,UCSZ0);
    208a:	a0 e4       	ldi	r26, 0x40	; 64
    208c:	b0 e0       	ldi	r27, 0x00	; 0
    208e:	e0 e4       	ldi	r30, 0x40	; 64
    2090:	f0 e0       	ldi	r31, 0x00	; 0
    2092:	80 81       	ld	r24, Z
    2094:	8d 7f       	andi	r24, 0xFD	; 253
    2096:	8c 93       	st	X, r24
    2098:	41 c0       	rjmp	.+130    	; 0x211c <UART_init+0x242>
				break;
		case 6 :
				CLR_BIT(UCSRC,UCSZ2);
    209a:	a0 e4       	ldi	r26, 0x40	; 64
    209c:	b0 e0       	ldi	r27, 0x00	; 0
    209e:	e0 e4       	ldi	r30, 0x40	; 64
    20a0:	f0 e0       	ldi	r31, 0x00	; 0
    20a2:	80 81       	ld	r24, Z
    20a4:	8b 7f       	andi	r24, 0xFB	; 251
    20a6:	8c 93       	st	X, r24
				CLR_BIT(UCSRC,UCSZ1);
    20a8:	a0 e4       	ldi	r26, 0x40	; 64
    20aa:	b0 e0       	ldi	r27, 0x00	; 0
    20ac:	e0 e4       	ldi	r30, 0x40	; 64
    20ae:	f0 e0       	ldi	r31, 0x00	; 0
    20b0:	80 81       	ld	r24, Z
    20b2:	8b 7f       	andi	r24, 0xFB	; 251
    20b4:	8c 93       	st	X, r24
				SET_BIT(UCSRC,UCSZ0);
    20b6:	a0 e4       	ldi	r26, 0x40	; 64
    20b8:	b0 e0       	ldi	r27, 0x00	; 0
    20ba:	e0 e4       	ldi	r30, 0x40	; 64
    20bc:	f0 e0       	ldi	r31, 0x00	; 0
    20be:	80 81       	ld	r24, Z
    20c0:	82 60       	ori	r24, 0x02	; 2
    20c2:	8c 93       	st	X, r24
    20c4:	2b c0       	rjmp	.+86     	; 0x211c <UART_init+0x242>
				break;
		case 7 :
				CLR_BIT(UCSRC,UCSZ2);
    20c6:	a0 e4       	ldi	r26, 0x40	; 64
    20c8:	b0 e0       	ldi	r27, 0x00	; 0
    20ca:	e0 e4       	ldi	r30, 0x40	; 64
    20cc:	f0 e0       	ldi	r31, 0x00	; 0
    20ce:	80 81       	ld	r24, Z
    20d0:	8b 7f       	andi	r24, 0xFB	; 251
    20d2:	8c 93       	st	X, r24
				SET_BIT(UCSRC,UCSZ1);
    20d4:	a0 e4       	ldi	r26, 0x40	; 64
    20d6:	b0 e0       	ldi	r27, 0x00	; 0
    20d8:	e0 e4       	ldi	r30, 0x40	; 64
    20da:	f0 e0       	ldi	r31, 0x00	; 0
    20dc:	80 81       	ld	r24, Z
    20de:	84 60       	ori	r24, 0x04	; 4
    20e0:	8c 93       	st	X, r24
				CLR_BIT(UCSRC,UCSZ0);
    20e2:	a0 e4       	ldi	r26, 0x40	; 64
    20e4:	b0 e0       	ldi	r27, 0x00	; 0
    20e6:	e0 e4       	ldi	r30, 0x40	; 64
    20e8:	f0 e0       	ldi	r31, 0x00	; 0
    20ea:	80 81       	ld	r24, Z
    20ec:	8d 7f       	andi	r24, 0xFD	; 253
    20ee:	8c 93       	st	X, r24
    20f0:	15 c0       	rjmp	.+42     	; 0x211c <UART_init+0x242>
				break;
		case 8 :
				CLR_BIT(UCSRC,UCSZ2);
    20f2:	a0 e4       	ldi	r26, 0x40	; 64
    20f4:	b0 e0       	ldi	r27, 0x00	; 0
    20f6:	e0 e4       	ldi	r30, 0x40	; 64
    20f8:	f0 e0       	ldi	r31, 0x00	; 0
    20fa:	80 81       	ld	r24, Z
    20fc:	8b 7f       	andi	r24, 0xFB	; 251
    20fe:	8c 93       	st	X, r24
				SET_BIT(UCSRC,UCSZ1);
    2100:	a0 e4       	ldi	r26, 0x40	; 64
    2102:	b0 e0       	ldi	r27, 0x00	; 0
    2104:	e0 e4       	ldi	r30, 0x40	; 64
    2106:	f0 e0       	ldi	r31, 0x00	; 0
    2108:	80 81       	ld	r24, Z
    210a:	84 60       	ori	r24, 0x04	; 4
    210c:	8c 93       	st	X, r24
				SET_BIT(UCSRC,UCSZ0);
    210e:	a0 e4       	ldi	r26, 0x40	; 64
    2110:	b0 e0       	ldi	r27, 0x00	; 0
    2112:	e0 e4       	ldi	r30, 0x40	; 64
    2114:	f0 e0       	ldi	r31, 0x00	; 0
    2116:	80 81       	ld	r24, Z
    2118:	82 60       	ori	r24, 0x02	; 2
    211a:	8c 93       	st	X, r24
				break;
	}

	UBRRL = (ptr.Foc/(ptr.baud_rate * 16))-1;
    211c:	e9 e2       	ldi	r30, 0x29	; 41
    211e:	f0 e0       	ldi	r31, 0x00	; 0
    2120:	fa 83       	std	Y+2, r31	; 0x02
    2122:	e9 83       	std	Y+1, r30	; 0x01
    2124:	a0 90 6e 01 	lds	r10, 0x016E
    2128:	b0 90 6f 01 	lds	r11, 0x016F
    212c:	c0 90 70 01 	lds	r12, 0x0170
    2130:	d0 90 71 01 	lds	r13, 0x0171
    2134:	e0 90 72 01 	lds	r14, 0x0172
    2138:	f0 90 73 01 	lds	r15, 0x0173
    213c:	00 91 74 01 	lds	r16, 0x0174
    2140:	10 91 75 01 	lds	r17, 0x0175
    2144:	80 91 6c 01 	lds	r24, 0x016C
    2148:	90 91 6d 01 	lds	r25, 0x016D
    214c:	82 95       	swap	r24
    214e:	92 95       	swap	r25
    2150:	90 7f       	andi	r25, 0xF0	; 240
    2152:	98 27       	eor	r25, r24
    2154:	80 7f       	andi	r24, 0xF0	; 240
    2156:	98 27       	eor	r25, r24
    2158:	1c 01       	movw	r2, r24
    215a:	44 24       	eor	r4, r4
    215c:	55 24       	eor	r5, r5
    215e:	66 24       	eor	r6, r6
    2160:	77 24       	eor	r7, r7
    2162:	43 01       	movw	r8, r6
    2164:	2a 2d       	mov	r18, r10
    2166:	3b 2d       	mov	r19, r11
    2168:	4c 2d       	mov	r20, r12
    216a:	5d 2d       	mov	r21, r13
    216c:	6e 2d       	mov	r22, r14
    216e:	7f 2d       	mov	r23, r15
    2170:	80 2f       	mov	r24, r16
    2172:	91 2f       	mov	r25, r17
    2174:	a2 2c       	mov	r10, r2
    2176:	b3 2c       	mov	r11, r3
    2178:	c4 2c       	mov	r12, r4
    217a:	d5 2c       	mov	r13, r5
    217c:	e6 2c       	mov	r14, r6
    217e:	f7 2c       	mov	r15, r7
    2180:	08 2d       	mov	r16, r8
    2182:	19 2d       	mov	r17, r9
    2184:	0e 94 75 00 	call	0xea	; 0xea <__udivdi3>
    2188:	a2 2e       	mov	r10, r18
    218a:	b3 2e       	mov	r11, r19
    218c:	c4 2e       	mov	r12, r20
    218e:	d5 2e       	mov	r13, r21
    2190:	e6 2e       	mov	r14, r22
    2192:	f7 2e       	mov	r15, r23
    2194:	08 2f       	mov	r16, r24
    2196:	19 2f       	mov	r17, r25
    2198:	2a 2d       	mov	r18, r10
    219a:	3b 2d       	mov	r19, r11
    219c:	4c 2d       	mov	r20, r12
    219e:	5d 2d       	mov	r21, r13
    21a0:	6e 2d       	mov	r22, r14
    21a2:	7f 2d       	mov	r23, r15
    21a4:	80 2f       	mov	r24, r16
    21a6:	91 2f       	mov	r25, r17
    21a8:	82 2f       	mov	r24, r18
    21aa:	81 50       	subi	r24, 0x01	; 1
    21ac:	e9 81       	ldd	r30, Y+1	; 0x01
    21ae:	fa 81       	ldd	r31, Y+2	; 0x02
    21b0:	80 83       	st	Z, r24

}
    21b2:	2a 96       	adiw	r28, 0x0a	; 10
    21b4:	0f b6       	in	r0, 0x3f	; 63
    21b6:	f8 94       	cli
    21b8:	de bf       	out	0x3e, r29	; 62
    21ba:	0f be       	out	0x3f, r0	; 63
    21bc:	cd bf       	out	0x3d, r28	; 61
    21be:	cf 91       	pop	r28
    21c0:	df 91       	pop	r29
    21c2:	1f 91       	pop	r17
    21c4:	0f 91       	pop	r16
    21c6:	ff 90       	pop	r15
    21c8:	ef 90       	pop	r14
    21ca:	df 90       	pop	r13
    21cc:	cf 90       	pop	r12
    21ce:	bf 90       	pop	r11
    21d0:	af 90       	pop	r10
    21d2:	9f 90       	pop	r9
    21d4:	8f 90       	pop	r8
    21d6:	7f 90       	pop	r7
    21d8:	6f 90       	pop	r6
    21da:	5f 90       	pop	r5
    21dc:	4f 90       	pop	r4
    21de:	3f 90       	pop	r3
    21e0:	2f 90       	pop	r2
    21e2:	08 95       	ret

000021e4 <UART_transmit_Char>:


void UART_transmit_Char(u16 data)
{
    21e4:	df 93       	push	r29
    21e6:	cf 93       	push	r28
    21e8:	00 d0       	rcall	.+0      	; 0x21ea <UART_transmit_Char+0x6>
    21ea:	cd b7       	in	r28, 0x3d	; 61
    21ec:	de b7       	in	r29, 0x3e	; 62
    21ee:	9a 83       	std	Y+2, r25	; 0x02
    21f0:	89 83       	std	Y+1, r24	; 0x01

	while(GET_BIT(UCSRA,UDRE)== 0);
    21f2:	eb e2       	ldi	r30, 0x2B	; 43
    21f4:	f0 e0       	ldi	r31, 0x00	; 0
    21f6:	80 81       	ld	r24, Z
    21f8:	82 95       	swap	r24
    21fa:	86 95       	lsr	r24
    21fc:	87 70       	andi	r24, 0x07	; 7
    21fe:	88 2f       	mov	r24, r24
    2200:	90 e0       	ldi	r25, 0x00	; 0
    2202:	81 70       	andi	r24, 0x01	; 1
    2204:	90 70       	andi	r25, 0x00	; 0
    2206:	00 97       	sbiw	r24, 0x00	; 0
    2208:	a1 f3       	breq	.-24     	; 0x21f2 <UART_transmit_Char+0xe>

	UDR = data;
    220a:	ec e2       	ldi	r30, 0x2C	; 44
    220c:	f0 e0       	ldi	r31, 0x00	; 0
    220e:	89 81       	ldd	r24, Y+1	; 0x01
    2210:	80 83       	st	Z, r24

}
    2212:	0f 90       	pop	r0
    2214:	0f 90       	pop	r0
    2216:	cf 91       	pop	r28
    2218:	df 91       	pop	r29
    221a:	08 95       	ret

0000221c <UART_recieve_Char>:


u8 UART_recieve_Char(void)
{
    221c:	df 93       	push	r29
    221e:	cf 93       	push	r28
    2220:	cd b7       	in	r28, 0x3d	; 61
    2222:	de b7       	in	r29, 0x3e	; 62
	while(GET_BIT(UCSRA,RXC)== 0);
    2224:	eb e2       	ldi	r30, 0x2B	; 43
    2226:	f0 e0       	ldi	r31, 0x00	; 0
    2228:	80 81       	ld	r24, Z
    222a:	88 23       	and	r24, r24
    222c:	dc f7       	brge	.-10     	; 0x2224 <UART_recieve_Char+0x8>

	return UDR;
    222e:	ec e2       	ldi	r30, 0x2C	; 44
    2230:	f0 e0       	ldi	r31, 0x00	; 0
    2232:	80 81       	ld	r24, Z
}
    2234:	cf 91       	pop	r28
    2236:	df 91       	pop	r29
    2238:	08 95       	ret

0000223a <UART_transmit_String>:


void UART_transmit_String(u8 data[])
{
    223a:	df 93       	push	r29
    223c:	cf 93       	push	r28
    223e:	00 d0       	rcall	.+0      	; 0x2240 <UART_transmit_String+0x6>
    2240:	0f 92       	push	r0
    2242:	cd b7       	in	r28, 0x3d	; 61
    2244:	de b7       	in	r29, 0x3e	; 62
    2246:	9b 83       	std	Y+3, r25	; 0x03
    2248:	8a 83       	std	Y+2, r24	; 0x02
	u8 i =0;
    224a:	19 82       	std	Y+1, r1	; 0x01
    224c:	10 c0       	rjmp	.+32     	; 0x226e <UART_transmit_String+0x34>
	while(data[i]!='\0')
	{
		UART_transmit_Char(data[i]);
    224e:	89 81       	ldd	r24, Y+1	; 0x01
    2250:	28 2f       	mov	r18, r24
    2252:	30 e0       	ldi	r19, 0x00	; 0
    2254:	8a 81       	ldd	r24, Y+2	; 0x02
    2256:	9b 81       	ldd	r25, Y+3	; 0x03
    2258:	fc 01       	movw	r30, r24
    225a:	e2 0f       	add	r30, r18
    225c:	f3 1f       	adc	r31, r19
    225e:	80 81       	ld	r24, Z
    2260:	88 2f       	mov	r24, r24
    2262:	90 e0       	ldi	r25, 0x00	; 0
    2264:	0e 94 f2 10 	call	0x21e4	; 0x21e4 <UART_transmit_Char>
		i++;
    2268:	89 81       	ldd	r24, Y+1	; 0x01
    226a:	8f 5f       	subi	r24, 0xFF	; 255
    226c:	89 83       	std	Y+1, r24	; 0x01


void UART_transmit_String(u8 data[])
{
	u8 i =0;
	while(data[i]!='\0')
    226e:	89 81       	ldd	r24, Y+1	; 0x01
    2270:	28 2f       	mov	r18, r24
    2272:	30 e0       	ldi	r19, 0x00	; 0
    2274:	8a 81       	ldd	r24, Y+2	; 0x02
    2276:	9b 81       	ldd	r25, Y+3	; 0x03
    2278:	fc 01       	movw	r30, r24
    227a:	e2 0f       	add	r30, r18
    227c:	f3 1f       	adc	r31, r19
    227e:	80 81       	ld	r24, Z
    2280:	88 23       	and	r24, r24
    2282:	29 f7       	brne	.-54     	; 0x224e <UART_transmit_String+0x14>
	{
		UART_transmit_Char(data[i]);
		i++;
	}
}
    2284:	0f 90       	pop	r0
    2286:	0f 90       	pop	r0
    2288:	0f 90       	pop	r0
    228a:	cf 91       	pop	r28
    228c:	df 91       	pop	r29
    228e:	08 95       	ret

00002290 <MTIMER2_voidInit>:
 /**********************************************************************************************************************
  *  Functions Definitions
  *********************************************************************************************************************/

void MTIMER2_voidInit()
{
    2290:	df 93       	push	r29
    2292:	cf 93       	push	r28
    2294:	cd b7       	in	r28, 0x3d	; 61
    2296:	de b7       	in	r29, 0x3e	; 62
	/*Choose Normal Mode*/
	//CLR_BIT(TCCR2, TCCR2_WGM00);
	//CLR_BIT(TCCR2, TCCR2_WGM01);

	/*Timer Over flow flag Enable*/
	SET_BIT(TIMSK, TIMSK_TOIE2);
    2298:	a9 e5       	ldi	r26, 0x59	; 89
    229a:	b0 e0       	ldi	r27, 0x00	; 0
    229c:	e9 e5       	ldi	r30, 0x59	; 89
    229e:	f0 e0       	ldi	r31, 0x00	; 0
    22a0:	80 81       	ld	r24, Z
    22a2:	80 64       	ori	r24, 0x40	; 64
    22a4:	8c 93       	st	X, r24


	TCNT2 = 130; //initialized to count 1 MS
    22a6:	e4 e4       	ldi	r30, 0x44	; 68
    22a8:	f0 e0       	ldi	r31, 0x00	; 0
    22aa:	82 e8       	ldi	r24, 0x82	; 130
    22ac:	80 83       	st	Z, r24
	/*Set PRESCALAR 8*/
	CLR_BIT(TCCR2, TCCR2_CS20);
    22ae:	a5 e4       	ldi	r26, 0x45	; 69
    22b0:	b0 e0       	ldi	r27, 0x00	; 0
    22b2:	e5 e4       	ldi	r30, 0x45	; 69
    22b4:	f0 e0       	ldi	r31, 0x00	; 0
    22b6:	80 81       	ld	r24, Z
    22b8:	8e 7f       	andi	r24, 0xFE	; 254
    22ba:	8c 93       	st	X, r24
	SET_BIT(TCCR2, TCCR2_CS21);
    22bc:	a5 e4       	ldi	r26, 0x45	; 69
    22be:	b0 e0       	ldi	r27, 0x00	; 0
    22c0:	e5 e4       	ldi	r30, 0x45	; 69
    22c2:	f0 e0       	ldi	r31, 0x00	; 0
    22c4:	80 81       	ld	r24, Z
    22c6:	82 60       	ori	r24, 0x02	; 2
    22c8:	8c 93       	st	X, r24
	CLR_BIT(TCCR2, TCCR2_CS22);
    22ca:	a5 e4       	ldi	r26, 0x45	; 69
    22cc:	b0 e0       	ldi	r27, 0x00	; 0
    22ce:	e5 e4       	ldi	r30, 0x45	; 69
    22d0:	f0 e0       	ldi	r31, 0x00	; 0
    22d2:	80 81       	ld	r24, Z
    22d4:	8b 7f       	andi	r24, 0xFB	; 251
    22d6:	8c 93       	st	X, r24
	/*Set PRESCALAR 8*/
	CLR_BIT(TCCR2, TCCR0_CS00);
	SET_BIT(TCCR2, TCCR0_CS01);
	CLR_BIT(TCCR2, TCCR0_CS02);
	#endif
}
    22d8:	cf 91       	pop	r28
    22da:	df 91       	pop	r29
    22dc:	08 95       	ret

000022de <MTIMER2_voidSetDuty>:

void MTIMER2_voidSetDuty(u8 Copy_u8DutyCycle)
{
    22de:	df 93       	push	r29
    22e0:	cf 93       	push	r28
    22e2:	0f 92       	push	r0
    22e4:	cd b7       	in	r28, 0x3d	; 61
    22e6:	de b7       	in	r29, 0x3e	; 62
    22e8:	89 83       	std	Y+1, r24	; 0x01
	/*Check for mode is PWM*/

	OCR2 = Copy_u8DutyCycle;               /*Sets OCR0 value*/
    22ea:	e3 e4       	ldi	r30, 0x43	; 67
    22ec:	f0 e0       	ldi	r31, 0x00	; 0
    22ee:	89 81       	ldd	r24, Y+1	; 0x01
    22f0:	80 83       	st	Z, r24

}
    22f2:	0f 90       	pop	r0
    22f4:	cf 91       	pop	r28
    22f6:	df 91       	pop	r29
    22f8:	08 95       	ret

000022fa <MTIMER2_voidTimer2OVSetCallBack>:

void MTIMER2_voidTimer2OVSetCallBack(void (*Copy_pvCallBackFunc)(void))
{
    22fa:	df 93       	push	r29
    22fc:	cf 93       	push	r28
    22fe:	00 d0       	rcall	.+0      	; 0x2300 <MTIMER2_voidTimer2OVSetCallBack+0x6>
    2300:	cd b7       	in	r28, 0x3d	; 61
    2302:	de b7       	in	r29, 0x3e	; 62
    2304:	9a 83       	std	Y+2, r25	; 0x02
    2306:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_pvCallBackFunc != NULL) /*checking if function exists*/
    2308:	89 81       	ldd	r24, Y+1	; 0x01
    230a:	9a 81       	ldd	r25, Y+2	; 0x02
    230c:	00 97       	sbiw	r24, 0x00	; 0
    230e:	31 f0       	breq	.+12     	; 0x231c <MTIMER2_voidTimer2OVSetCallBack+0x22>
	{
		Global_pvTimer2OverFlowCallBack= Copy_pvCallBackFunc; /*ADDS ISR Function*/
    2310:	89 81       	ldd	r24, Y+1	; 0x01
    2312:	9a 81       	ldd	r25, Y+2	; 0x02
    2314:	90 93 7d 01 	sts	0x017D, r25
    2318:	80 93 7c 01 	sts	0x017C, r24
	else
	{
		/*do nothing*/
	}

}
    231c:	0f 90       	pop	r0
    231e:	0f 90       	pop	r0
    2320:	cf 91       	pop	r28
    2322:	df 91       	pop	r29
    2324:	08 95       	ret

00002326 <MTIMER2_voidTimer2CTCSetCallBack>:

void MTIMER2_voidTimer2CTCSetCallBack(void (*Copy_pvCallBackFunc)(void))
{
    2326:	df 93       	push	r29
    2328:	cf 93       	push	r28
    232a:	00 d0       	rcall	.+0      	; 0x232c <MTIMER2_voidTimer2CTCSetCallBack+0x6>
    232c:	cd b7       	in	r28, 0x3d	; 61
    232e:	de b7       	in	r29, 0x3e	; 62
    2330:	9a 83       	std	Y+2, r25	; 0x02
    2332:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_pvCallBackFunc != NULL) /*checking if function exists*/
    2334:	89 81       	ldd	r24, Y+1	; 0x01
    2336:	9a 81       	ldd	r25, Y+2	; 0x02
    2338:	00 97       	sbiw	r24, 0x00	; 0
    233a:	31 f0       	breq	.+12     	; 0x2348 <MTIMER2_voidTimer2CTCSetCallBack+0x22>
	{
		Global_pvTimer2CTCCallBack= Copy_pvCallBackFunc; /*ADDS ISR Function*/
    233c:	89 81       	ldd	r24, Y+1	; 0x01
    233e:	9a 81       	ldd	r25, Y+2	; 0x02
    2340:	90 93 7f 01 	sts	0x017F, r25
    2344:	80 93 7e 01 	sts	0x017E, r24
	else
	{
		/*do nothing*/
	}

}
    2348:	0f 90       	pop	r0
    234a:	0f 90       	pop	r0
    234c:	cf 91       	pop	r28
    234e:	df 91       	pop	r29
    2350:	08 95       	ret

00002352 <MTIMER2_voidSetBusyWait>:

void MTIMER2_voidSetBusyWait(u16 Copy_u8WaitTime){
    2352:	df 93       	push	r29
    2354:	cf 93       	push	r28
    2356:	00 d0       	rcall	.+0      	; 0x2358 <MTIMER2_voidSetBusyWait+0x6>
    2358:	00 d0       	rcall	.+0      	; 0x235a <MTIMER2_voidSetBusyWait+0x8>
    235a:	0f 92       	push	r0
    235c:	cd b7       	in	r28, 0x3d	; 61
    235e:	de b7       	in	r29, 0x3e	; 62
    2360:	9d 83       	std	Y+5, r25	; 0x05
    2362:	8c 83       	std	Y+4, r24	; 0x04
	u16 Local_u8Counter = 0;
    2364:	1b 82       	std	Y+3, r1	; 0x03
    2366:	1a 82       	std	Y+2, r1	; 0x02
	u8 counter = 0;
    2368:	19 82       	std	Y+1, r1	; 0x01
    236a:	1d c0       	rjmp	.+58     	; 0x23a6 <MTIMER2_voidSetBusyWait+0x54>
	while(Local_u8Counter != Copy_u8WaitTime){
		if(GET_BIT(TIFR,TIFR_OCF2)){
    236c:	e8 e5       	ldi	r30, 0x58	; 88
    236e:	f0 e0       	ldi	r31, 0x00	; 0
    2370:	80 81       	ld	r24, Z
    2372:	86 95       	lsr	r24
    2374:	88 2f       	mov	r24, r24
    2376:	90 e0       	ldi	r25, 0x00	; 0
    2378:	81 70       	andi	r24, 0x01	; 1
    237a:	90 70       	andi	r25, 0x00	; 0
    237c:	88 23       	and	r24, r24
    237e:	51 f0       	breq	.+20     	; 0x2394 <MTIMER2_voidSetBusyWait+0x42>
			counter++;
    2380:	89 81       	ldd	r24, Y+1	; 0x01
    2382:	8f 5f       	subi	r24, 0xFF	; 255
    2384:	89 83       	std	Y+1, r24	; 0x01
			SET_BIT(TIFR,TIFR_OCF2);
    2386:	a8 e5       	ldi	r26, 0x58	; 88
    2388:	b0 e0       	ldi	r27, 0x00	; 0
    238a:	e8 e5       	ldi	r30, 0x58	; 88
    238c:	f0 e0       	ldi	r31, 0x00	; 0
    238e:	80 81       	ld	r24, Z
    2390:	82 60       	ori	r24, 0x02	; 2
    2392:	8c 93       	st	X, r24
		}
		if(counter == 4){
    2394:	89 81       	ldd	r24, Y+1	; 0x01
    2396:	84 30       	cpi	r24, 0x04	; 4
    2398:	31 f4       	brne	.+12     	; 0x23a6 <MTIMER2_voidSetBusyWait+0x54>
			Local_u8Counter++;
    239a:	8a 81       	ldd	r24, Y+2	; 0x02
    239c:	9b 81       	ldd	r25, Y+3	; 0x03
    239e:	01 96       	adiw	r24, 0x01	; 1
    23a0:	9b 83       	std	Y+3, r25	; 0x03
    23a2:	8a 83       	std	Y+2, r24	; 0x02
			counter = 0;
    23a4:	19 82       	std	Y+1, r1	; 0x01
}

void MTIMER2_voidSetBusyWait(u16 Copy_u8WaitTime){
	u16 Local_u8Counter = 0;
	u8 counter = 0;
	while(Local_u8Counter != Copy_u8WaitTime){
    23a6:	2a 81       	ldd	r18, Y+2	; 0x02
    23a8:	3b 81       	ldd	r19, Y+3	; 0x03
    23aa:	8c 81       	ldd	r24, Y+4	; 0x04
    23ac:	9d 81       	ldd	r25, Y+5	; 0x05
    23ae:	28 17       	cp	r18, r24
    23b0:	39 07       	cpc	r19, r25
    23b2:	e1 f6       	brne	.-72     	; 0x236c <MTIMER2_voidSetBusyWait+0x1a>
		if(counter == 4){
			Local_u8Counter++;
			counter = 0;
		}
	}
}
    23b4:	0f 90       	pop	r0
    23b6:	0f 90       	pop	r0
    23b8:	0f 90       	pop	r0
    23ba:	0f 90       	pop	r0
    23bc:	0f 90       	pop	r0
    23be:	cf 91       	pop	r28
    23c0:	df 91       	pop	r29
    23c2:	08 95       	ret

000023c4 <__vector_5>:

//TIMER OVERFLOW ISR
void  __vector_5 (void)	__attribute__((signal));
void  __vector_5 (void)
{
    23c4:	1f 92       	push	r1
    23c6:	0f 92       	push	r0
    23c8:	0f b6       	in	r0, 0x3f	; 63
    23ca:	0f 92       	push	r0
    23cc:	11 24       	eor	r1, r1
    23ce:	2f 93       	push	r18
    23d0:	3f 93       	push	r19
    23d2:	4f 93       	push	r20
    23d4:	5f 93       	push	r21
    23d6:	6f 93       	push	r22
    23d8:	7f 93       	push	r23
    23da:	8f 93       	push	r24
    23dc:	9f 93       	push	r25
    23de:	af 93       	push	r26
    23e0:	bf 93       	push	r27
    23e2:	ef 93       	push	r30
    23e4:	ff 93       	push	r31
    23e6:	df 93       	push	r29
    23e8:	cf 93       	push	r28
    23ea:	cd b7       	in	r28, 0x3d	; 61
    23ec:	de b7       	in	r29, 0x3e	; 62
	TCNT2 = 130; //Reloaded to count 1 MS
    23ee:	e4 e4       	ldi	r30, 0x44	; 68
    23f0:	f0 e0       	ldi	r31, 0x00	; 0
    23f2:	82 e8       	ldi	r24, 0x82	; 130
    23f4:	80 83       	st	Z, r24
	if(Global_pvTimer2OverFlowCallBack != NULL)
    23f6:	80 91 7c 01 	lds	r24, 0x017C
    23fa:	90 91 7d 01 	lds	r25, 0x017D
    23fe:	00 97       	sbiw	r24, 0x00	; 0
    2400:	29 f0       	breq	.+10     	; 0x240c <__vector_5+0x48>
	{
		Global_pvTimer2OverFlowCallBack();
    2402:	e0 91 7c 01 	lds	r30, 0x017C
    2406:	f0 91 7d 01 	lds	r31, 0x017D
    240a:	09 95       	icall
	else
	{
		/*Do nothing*/
	}

}
    240c:	cf 91       	pop	r28
    240e:	df 91       	pop	r29
    2410:	ff 91       	pop	r31
    2412:	ef 91       	pop	r30
    2414:	bf 91       	pop	r27
    2416:	af 91       	pop	r26
    2418:	9f 91       	pop	r25
    241a:	8f 91       	pop	r24
    241c:	7f 91       	pop	r23
    241e:	6f 91       	pop	r22
    2420:	5f 91       	pop	r21
    2422:	4f 91       	pop	r20
    2424:	3f 91       	pop	r19
    2426:	2f 91       	pop	r18
    2428:	0f 90       	pop	r0
    242a:	0f be       	out	0x3f, r0	; 63
    242c:	0f 90       	pop	r0
    242e:	1f 90       	pop	r1
    2430:	18 95       	reti

00002432 <__vector_4>:

//ON COMPARE ISR
void  __vector_4 (void)	__attribute__((signal));
void  __vector_4 (void)
{
    2432:	1f 92       	push	r1
    2434:	0f 92       	push	r0
    2436:	0f b6       	in	r0, 0x3f	; 63
    2438:	0f 92       	push	r0
    243a:	11 24       	eor	r1, r1
    243c:	2f 93       	push	r18
    243e:	3f 93       	push	r19
    2440:	4f 93       	push	r20
    2442:	5f 93       	push	r21
    2444:	6f 93       	push	r22
    2446:	7f 93       	push	r23
    2448:	8f 93       	push	r24
    244a:	9f 93       	push	r25
    244c:	af 93       	push	r26
    244e:	bf 93       	push	r27
    2450:	ef 93       	push	r30
    2452:	ff 93       	push	r31
    2454:	df 93       	push	r29
    2456:	cf 93       	push	r28
    2458:	cd b7       	in	r28, 0x3d	; 61
    245a:	de b7       	in	r29, 0x3e	; 62
	if(Global_pvTimer2CTCCallBack != NULL)
    245c:	80 91 7e 01 	lds	r24, 0x017E
    2460:	90 91 7f 01 	lds	r25, 0x017F
    2464:	00 97       	sbiw	r24, 0x00	; 0
    2466:	29 f0       	breq	.+10     	; 0x2472 <__vector_4+0x40>
	{
		Global_pvTimer2CTCCallBack();
    2468:	e0 91 7e 01 	lds	r30, 0x017E
    246c:	f0 91 7f 01 	lds	r31, 0x017F
    2470:	09 95       	icall
	else
	{
		/*Do nothing*/
	}

}
    2472:	cf 91       	pop	r28
    2474:	df 91       	pop	r29
    2476:	ff 91       	pop	r31
    2478:	ef 91       	pop	r30
    247a:	bf 91       	pop	r27
    247c:	af 91       	pop	r26
    247e:	9f 91       	pop	r25
    2480:	8f 91       	pop	r24
    2482:	7f 91       	pop	r23
    2484:	6f 91       	pop	r22
    2486:	5f 91       	pop	r21
    2488:	4f 91       	pop	r20
    248a:	3f 91       	pop	r19
    248c:	2f 91       	pop	r18
    248e:	0f 90       	pop	r0
    2490:	0f be       	out	0x3f, r0	; 63
    2492:	0f 90       	pop	r0
    2494:	1f 90       	pop	r1
    2496:	18 95       	reti

00002498 <TIMER1_FPWMinit>:
#include "../../LIB/BIT_MATH.h"
#include "TIMER1_PRIVATE.h"
#include "../DIO/DIO_INTERFACE.h"


void TIMER1_FPWMinit(){
    2498:	df 93       	push	r29
    249a:	cf 93       	push	r28
    249c:	cd b7       	in	r28, 0x3d	; 61
    249e:	de b7       	in	r29, 0x3e	; 62
	//Configure TIMER1
	TCCR1A = 0;
    24a0:	ef e4       	ldi	r30, 0x4F	; 79
    24a2:	f0 e0       	ldi	r31, 0x00	; 0
    24a4:	10 82       	st	Z, r1
	TCCR1B = 0;
    24a6:	ee e4       	ldi	r30, 0x4E	; 78
    24a8:	f0 e0       	ldi	r31, 0x00	; 0
    24aa:	10 82       	st	Z, r1

	//NON Inverted PWM
	SET_BIT(TCCR1A,TCCR1A_COM1A1);
    24ac:	af e4       	ldi	r26, 0x4F	; 79
    24ae:	b0 e0       	ldi	r27, 0x00	; 0
    24b0:	ef e4       	ldi	r30, 0x4F	; 79
    24b2:	f0 e0       	ldi	r31, 0x00	; 0
    24b4:	80 81       	ld	r24, Z
    24b6:	80 68       	ori	r24, 0x80	; 128
    24b8:	8c 93       	st	X, r24
	SET_BIT(TCCR1A,TCCR1A_COM1B1);
    24ba:	af e4       	ldi	r26, 0x4F	; 79
    24bc:	b0 e0       	ldi	r27, 0x00	; 0
    24be:	ef e4       	ldi	r30, 0x4F	; 79
    24c0:	f0 e0       	ldi	r31, 0x00	; 0
    24c2:	80 81       	ld	r24, Z
    24c4:	80 62       	ori	r24, 0x20	; 32
    24c6:	8c 93       	st	X, r24

	//MODE 14(FAST PWM)
	SET_BIT(TCCR1A,TCCR1A_WGM11);
    24c8:	af e4       	ldi	r26, 0x4F	; 79
    24ca:	b0 e0       	ldi	r27, 0x00	; 0
    24cc:	ef e4       	ldi	r30, 0x4F	; 79
    24ce:	f0 e0       	ldi	r31, 0x00	; 0
    24d0:	80 81       	ld	r24, Z
    24d2:	82 60       	ori	r24, 0x02	; 2
    24d4:	8c 93       	st	X, r24
	SET_BIT(TCCR1B,TCCR1B_WGM12);
    24d6:	ae e4       	ldi	r26, 0x4E	; 78
    24d8:	b0 e0       	ldi	r27, 0x00	; 0
    24da:	ee e4       	ldi	r30, 0x4E	; 78
    24dc:	f0 e0       	ldi	r31, 0x00	; 0
    24de:	80 81       	ld	r24, Z
    24e0:	88 60       	ori	r24, 0x08	; 8
    24e2:	8c 93       	st	X, r24
	SET_BIT(TCCR1B,TCCR1B_WGM13);
    24e4:	ae e4       	ldi	r26, 0x4E	; 78
    24e6:	b0 e0       	ldi	r27, 0x00	; 0
    24e8:	ee e4       	ldi	r30, 0x4E	; 78
    24ea:	f0 e0       	ldi	r31, 0x00	; 0
    24ec:	80 81       	ld	r24, Z
    24ee:	80 61       	ori	r24, 0x10	; 16
    24f0:	8c 93       	st	X, r24

	SET_BIT(TCCR1B,TCCR1B_CS10); //PRESCALER=8
    24f2:	ae e4       	ldi	r26, 0x4E	; 78
    24f4:	b0 e0       	ldi	r27, 0x00	; 0
    24f6:	ee e4       	ldi	r30, 0x4E	; 78
    24f8:	f0 e0       	ldi	r31, 0x00	; 0
    24fa:	80 81       	ld	r24, Z
    24fc:	81 60       	ori	r24, 0x01	; 1
    24fe:	8c 93       	st	X, r24

	ICR1=19999;  //fPWM=50Hz (Period = 20ms Standard).
    2500:	e6 e4       	ldi	r30, 0x46	; 70
    2502:	f0 e0       	ldi	r31, 0x00	; 0
    2504:	8f e1       	ldi	r24, 0x1F	; 31
    2506:	9e e4       	ldi	r25, 0x4E	; 78
    2508:	91 83       	std	Z+1, r25	; 0x01
    250a:	80 83       	st	Z, r24
	OCR1A = 388; //Door is closed
    250c:	ea e4       	ldi	r30, 0x4A	; 74
    250e:	f0 e0       	ldi	r31, 0x00	; 0
    2510:	84 e8       	ldi	r24, 0x84	; 132
    2512:	91 e0       	ldi	r25, 0x01	; 1
    2514:	91 83       	std	Z+1, r25	; 0x01
    2516:	80 83       	st	Z, r24
	//PWM Pins as Out

}
    2518:	cf 91       	pop	r28
    251a:	df 91       	pop	r29
    251c:	08 95       	ret

0000251e <TIMER1_SetDutyCycle>:

void TIMER1_SetDutyCycle(u16 duty){
    251e:	df 93       	push	r29
    2520:	cf 93       	push	r28
    2522:	00 d0       	rcall	.+0      	; 0x2524 <TIMER1_SetDutyCycle+0x6>
    2524:	cd b7       	in	r28, 0x3d	; 61
    2526:	de b7       	in	r29, 0x3e	; 62
    2528:	9a 83       	std	Y+2, r25	; 0x02
    252a:	89 83       	std	Y+1, r24	; 0x01
	OCR1A = duty;
    252c:	ea e4       	ldi	r30, 0x4A	; 74
    252e:	f0 e0       	ldi	r31, 0x00	; 0
    2530:	89 81       	ldd	r24, Y+1	; 0x01
    2532:	9a 81       	ldd	r25, Y+2	; 0x02
    2534:	91 83       	std	Z+1, r25	; 0x01
    2536:	80 83       	st	Z, r24
}
    2538:	0f 90       	pop	r0
    253a:	0f 90       	pop	r0
    253c:	cf 91       	pop	r28
    253e:	df 91       	pop	r29
    2540:	08 95       	ret

00002542 <DIO_SetPinDirection>:
#include "DIO_interface.h"

void DIO_SetPinDirection(Eports_DIO port, Epins_DIO pin, Edirection_DIO direction)
{
    2542:	df 93       	push	r29
    2544:	cf 93       	push	r28
    2546:	cd b7       	in	r28, 0x3d	; 61
    2548:	de b7       	in	r29, 0x3e	; 62
    254a:	29 97       	sbiw	r28, 0x09	; 9
    254c:	0f b6       	in	r0, 0x3f	; 63
    254e:	f8 94       	cli
    2550:	de bf       	out	0x3e, r29	; 62
    2552:	0f be       	out	0x3f, r0	; 63
    2554:	cd bf       	out	0x3d, r28	; 61
    2556:	89 83       	std	Y+1, r24	; 0x01
    2558:	6a 83       	std	Y+2, r22	; 0x02
    255a:	4b 83       	std	Y+3, r20	; 0x03
	switch(direction)
    255c:	8b 81       	ldd	r24, Y+3	; 0x03
    255e:	28 2f       	mov	r18, r24
    2560:	30 e0       	ldi	r19, 0x00	; 0
    2562:	39 87       	std	Y+9, r19	; 0x09
    2564:	28 87       	std	Y+8, r18	; 0x08
    2566:	88 85       	ldd	r24, Y+8	; 0x08
    2568:	99 85       	ldd	r25, Y+9	; 0x09
    256a:	00 97       	sbiw	r24, 0x00	; 0
    256c:	09 f4       	brne	.+2      	; 0x2570 <DIO_SetPinDirection+0x2e>
    256e:	76 c0       	rjmp	.+236    	; 0x265c <DIO_SetPinDirection+0x11a>
    2570:	28 85       	ldd	r18, Y+8	; 0x08
    2572:	39 85       	ldd	r19, Y+9	; 0x09
    2574:	21 30       	cpi	r18, 0x01	; 1
    2576:	31 05       	cpc	r19, r1
    2578:	09 f0       	breq	.+2      	; 0x257c <DIO_SetPinDirection+0x3a>
    257a:	2e c1       	rjmp	.+604    	; 0x27d8 <DIO_SetPinDirection+0x296>
	{
		case _OUTPUT:
			switch(port)
    257c:	89 81       	ldd	r24, Y+1	; 0x01
    257e:	28 2f       	mov	r18, r24
    2580:	30 e0       	ldi	r19, 0x00	; 0
    2582:	3f 83       	std	Y+7, r19	; 0x07
    2584:	2e 83       	std	Y+6, r18	; 0x06
    2586:	8e 81       	ldd	r24, Y+6	; 0x06
    2588:	9f 81       	ldd	r25, Y+7	; 0x07
    258a:	82 30       	cpi	r24, 0x02	; 2
    258c:	91 05       	cpc	r25, r1
    258e:	51 f1       	breq	.+84     	; 0x25e4 <DIO_SetPinDirection+0xa2>
    2590:	2e 81       	ldd	r18, Y+6	; 0x06
    2592:	3f 81       	ldd	r19, Y+7	; 0x07
    2594:	23 30       	cpi	r18, 0x03	; 3
    2596:	31 05       	cpc	r19, r1
    2598:	34 f4       	brge	.+12     	; 0x25a6 <DIO_SetPinDirection+0x64>
    259a:	8e 81       	ldd	r24, Y+6	; 0x06
    259c:	9f 81       	ldd	r25, Y+7	; 0x07
    259e:	81 30       	cpi	r24, 0x01	; 1
    25a0:	91 05       	cpc	r25, r1
    25a2:	61 f0       	breq	.+24     	; 0x25bc <DIO_SetPinDirection+0x7a>
    25a4:	19 c1       	rjmp	.+562    	; 0x27d8 <DIO_SetPinDirection+0x296>
    25a6:	2e 81       	ldd	r18, Y+6	; 0x06
    25a8:	3f 81       	ldd	r19, Y+7	; 0x07
    25aa:	23 30       	cpi	r18, 0x03	; 3
    25ac:	31 05       	cpc	r19, r1
    25ae:	71 f1       	breq	.+92     	; 0x260c <DIO_SetPinDirection+0xca>
    25b0:	8e 81       	ldd	r24, Y+6	; 0x06
    25b2:	9f 81       	ldd	r25, Y+7	; 0x07
    25b4:	84 30       	cpi	r24, 0x04	; 4
    25b6:	91 05       	cpc	r25, r1
    25b8:	e9 f1       	breq	.+122    	; 0x2634 <DIO_SetPinDirection+0xf2>
    25ba:	0e c1       	rjmp	.+540    	; 0x27d8 <DIO_SetPinDirection+0x296>
			{
				case _PORTA:
					SET_BIT(DDRA_R,pin); break;
    25bc:	aa e3       	ldi	r26, 0x3A	; 58
    25be:	b0 e0       	ldi	r27, 0x00	; 0
    25c0:	ea e3       	ldi	r30, 0x3A	; 58
    25c2:	f0 e0       	ldi	r31, 0x00	; 0
    25c4:	80 81       	ld	r24, Z
    25c6:	48 2f       	mov	r20, r24
    25c8:	8a 81       	ldd	r24, Y+2	; 0x02
    25ca:	28 2f       	mov	r18, r24
    25cc:	30 e0       	ldi	r19, 0x00	; 0
    25ce:	81 e0       	ldi	r24, 0x01	; 1
    25d0:	90 e0       	ldi	r25, 0x00	; 0
    25d2:	02 2e       	mov	r0, r18
    25d4:	02 c0       	rjmp	.+4      	; 0x25da <DIO_SetPinDirection+0x98>
    25d6:	88 0f       	add	r24, r24
    25d8:	99 1f       	adc	r25, r25
    25da:	0a 94       	dec	r0
    25dc:	e2 f7       	brpl	.-8      	; 0x25d6 <DIO_SetPinDirection+0x94>
    25de:	84 2b       	or	r24, r20
    25e0:	8c 93       	st	X, r24
    25e2:	fa c0       	rjmp	.+500    	; 0x27d8 <DIO_SetPinDirection+0x296>
				case _PORTB:
					SET_BIT(DDRB_R,pin); break;
    25e4:	a7 e3       	ldi	r26, 0x37	; 55
    25e6:	b0 e0       	ldi	r27, 0x00	; 0
    25e8:	e7 e3       	ldi	r30, 0x37	; 55
    25ea:	f0 e0       	ldi	r31, 0x00	; 0
    25ec:	80 81       	ld	r24, Z
    25ee:	48 2f       	mov	r20, r24
    25f0:	8a 81       	ldd	r24, Y+2	; 0x02
    25f2:	28 2f       	mov	r18, r24
    25f4:	30 e0       	ldi	r19, 0x00	; 0
    25f6:	81 e0       	ldi	r24, 0x01	; 1
    25f8:	90 e0       	ldi	r25, 0x00	; 0
    25fa:	02 2e       	mov	r0, r18
    25fc:	02 c0       	rjmp	.+4      	; 0x2602 <DIO_SetPinDirection+0xc0>
    25fe:	88 0f       	add	r24, r24
    2600:	99 1f       	adc	r25, r25
    2602:	0a 94       	dec	r0
    2604:	e2 f7       	brpl	.-8      	; 0x25fe <DIO_SetPinDirection+0xbc>
    2606:	84 2b       	or	r24, r20
    2608:	8c 93       	st	X, r24
    260a:	e6 c0       	rjmp	.+460    	; 0x27d8 <DIO_SetPinDirection+0x296>
				case _PORTC:
					SET_BIT(DDRC_R,pin); break;
    260c:	a4 e3       	ldi	r26, 0x34	; 52
    260e:	b0 e0       	ldi	r27, 0x00	; 0
    2610:	e4 e3       	ldi	r30, 0x34	; 52
    2612:	f0 e0       	ldi	r31, 0x00	; 0
    2614:	80 81       	ld	r24, Z
    2616:	48 2f       	mov	r20, r24
    2618:	8a 81       	ldd	r24, Y+2	; 0x02
    261a:	28 2f       	mov	r18, r24
    261c:	30 e0       	ldi	r19, 0x00	; 0
    261e:	81 e0       	ldi	r24, 0x01	; 1
    2620:	90 e0       	ldi	r25, 0x00	; 0
    2622:	02 2e       	mov	r0, r18
    2624:	02 c0       	rjmp	.+4      	; 0x262a <DIO_SetPinDirection+0xe8>
    2626:	88 0f       	add	r24, r24
    2628:	99 1f       	adc	r25, r25
    262a:	0a 94       	dec	r0
    262c:	e2 f7       	brpl	.-8      	; 0x2626 <DIO_SetPinDirection+0xe4>
    262e:	84 2b       	or	r24, r20
    2630:	8c 93       	st	X, r24
    2632:	d2 c0       	rjmp	.+420    	; 0x27d8 <DIO_SetPinDirection+0x296>
				case _PORTD:
					SET_BIT(DDRD_R,pin); break;
    2634:	a1 e3       	ldi	r26, 0x31	; 49
    2636:	b0 e0       	ldi	r27, 0x00	; 0
    2638:	e1 e3       	ldi	r30, 0x31	; 49
    263a:	f0 e0       	ldi	r31, 0x00	; 0
    263c:	80 81       	ld	r24, Z
    263e:	48 2f       	mov	r20, r24
    2640:	8a 81       	ldd	r24, Y+2	; 0x02
    2642:	28 2f       	mov	r18, r24
    2644:	30 e0       	ldi	r19, 0x00	; 0
    2646:	81 e0       	ldi	r24, 0x01	; 1
    2648:	90 e0       	ldi	r25, 0x00	; 0
    264a:	02 2e       	mov	r0, r18
    264c:	02 c0       	rjmp	.+4      	; 0x2652 <DIO_SetPinDirection+0x110>
    264e:	88 0f       	add	r24, r24
    2650:	99 1f       	adc	r25, r25
    2652:	0a 94       	dec	r0
    2654:	e2 f7       	brpl	.-8      	; 0x264e <DIO_SetPinDirection+0x10c>
    2656:	84 2b       	or	r24, r20
    2658:	8c 93       	st	X, r24
    265a:	be c0       	rjmp	.+380    	; 0x27d8 <DIO_SetPinDirection+0x296>

			}
			break;
		case _INPUT:
			switch(port)
    265c:	89 81       	ldd	r24, Y+1	; 0x01
    265e:	28 2f       	mov	r18, r24
    2660:	30 e0       	ldi	r19, 0x00	; 0
    2662:	3d 83       	std	Y+5, r19	; 0x05
    2664:	2c 83       	std	Y+4, r18	; 0x04
    2666:	8c 81       	ldd	r24, Y+4	; 0x04
    2668:	9d 81       	ldd	r25, Y+5	; 0x05
    266a:	82 30       	cpi	r24, 0x02	; 2
    266c:	91 05       	cpc	r25, r1
    266e:	09 f4       	brne	.+2      	; 0x2672 <DIO_SetPinDirection+0x130>
    2670:	3f c0       	rjmp	.+126    	; 0x26f0 <DIO_SetPinDirection+0x1ae>
    2672:	2c 81       	ldd	r18, Y+4	; 0x04
    2674:	3d 81       	ldd	r19, Y+5	; 0x05
    2676:	23 30       	cpi	r18, 0x03	; 3
    2678:	31 05       	cpc	r19, r1
    267a:	34 f4       	brge	.+12     	; 0x2688 <DIO_SetPinDirection+0x146>
    267c:	8c 81       	ldd	r24, Y+4	; 0x04
    267e:	9d 81       	ldd	r25, Y+5	; 0x05
    2680:	81 30       	cpi	r24, 0x01	; 1
    2682:	91 05       	cpc	r25, r1
    2684:	71 f0       	breq	.+28     	; 0x26a2 <DIO_SetPinDirection+0x160>
    2686:	a8 c0       	rjmp	.+336    	; 0x27d8 <DIO_SetPinDirection+0x296>
    2688:	2c 81       	ldd	r18, Y+4	; 0x04
    268a:	3d 81       	ldd	r19, Y+5	; 0x05
    268c:	23 30       	cpi	r18, 0x03	; 3
    268e:	31 05       	cpc	r19, r1
    2690:	09 f4       	brne	.+2      	; 0x2694 <DIO_SetPinDirection+0x152>
    2692:	55 c0       	rjmp	.+170    	; 0x273e <DIO_SetPinDirection+0x1fc>
    2694:	8c 81       	ldd	r24, Y+4	; 0x04
    2696:	9d 81       	ldd	r25, Y+5	; 0x05
    2698:	84 30       	cpi	r24, 0x04	; 4
    269a:	91 05       	cpc	r25, r1
    269c:	09 f4       	brne	.+2      	; 0x26a0 <DIO_SetPinDirection+0x15e>
    269e:	76 c0       	rjmp	.+236    	; 0x278c <DIO_SetPinDirection+0x24a>
    26a0:	9b c0       	rjmp	.+310    	; 0x27d8 <DIO_SetPinDirection+0x296>
			{
				case _PORTA:
					CLEAR_BIT(DDRA_R,pin); SET_BIT(PINA_R,pin);break;
    26a2:	aa e3       	ldi	r26, 0x3A	; 58
    26a4:	b0 e0       	ldi	r27, 0x00	; 0
    26a6:	ea e3       	ldi	r30, 0x3A	; 58
    26a8:	f0 e0       	ldi	r31, 0x00	; 0
    26aa:	80 81       	ld	r24, Z
    26ac:	48 2f       	mov	r20, r24
    26ae:	8a 81       	ldd	r24, Y+2	; 0x02
    26b0:	28 2f       	mov	r18, r24
    26b2:	30 e0       	ldi	r19, 0x00	; 0
    26b4:	81 e0       	ldi	r24, 0x01	; 1
    26b6:	90 e0       	ldi	r25, 0x00	; 0
    26b8:	02 c0       	rjmp	.+4      	; 0x26be <DIO_SetPinDirection+0x17c>
    26ba:	88 0f       	add	r24, r24
    26bc:	99 1f       	adc	r25, r25
    26be:	2a 95       	dec	r18
    26c0:	e2 f7       	brpl	.-8      	; 0x26ba <DIO_SetPinDirection+0x178>
    26c2:	80 95       	com	r24
    26c4:	84 23       	and	r24, r20
    26c6:	8c 93       	st	X, r24
    26c8:	a9 e3       	ldi	r26, 0x39	; 57
    26ca:	b0 e0       	ldi	r27, 0x00	; 0
    26cc:	e9 e3       	ldi	r30, 0x39	; 57
    26ce:	f0 e0       	ldi	r31, 0x00	; 0
    26d0:	80 81       	ld	r24, Z
    26d2:	48 2f       	mov	r20, r24
    26d4:	8a 81       	ldd	r24, Y+2	; 0x02
    26d6:	28 2f       	mov	r18, r24
    26d8:	30 e0       	ldi	r19, 0x00	; 0
    26da:	81 e0       	ldi	r24, 0x01	; 1
    26dc:	90 e0       	ldi	r25, 0x00	; 0
    26de:	02 2e       	mov	r0, r18
    26e0:	02 c0       	rjmp	.+4      	; 0x26e6 <DIO_SetPinDirection+0x1a4>
    26e2:	88 0f       	add	r24, r24
    26e4:	99 1f       	adc	r25, r25
    26e6:	0a 94       	dec	r0
    26e8:	e2 f7       	brpl	.-8      	; 0x26e2 <DIO_SetPinDirection+0x1a0>
    26ea:	84 2b       	or	r24, r20
    26ec:	8c 93       	st	X, r24
    26ee:	74 c0       	rjmp	.+232    	; 0x27d8 <DIO_SetPinDirection+0x296>
				case _PORTB:
					CLEAR_BIT(DDRB_R,pin); SET_BIT(PINB_R,pin);break;
    26f0:	a7 e3       	ldi	r26, 0x37	; 55
    26f2:	b0 e0       	ldi	r27, 0x00	; 0
    26f4:	e7 e3       	ldi	r30, 0x37	; 55
    26f6:	f0 e0       	ldi	r31, 0x00	; 0
    26f8:	80 81       	ld	r24, Z
    26fa:	48 2f       	mov	r20, r24
    26fc:	8a 81       	ldd	r24, Y+2	; 0x02
    26fe:	28 2f       	mov	r18, r24
    2700:	30 e0       	ldi	r19, 0x00	; 0
    2702:	81 e0       	ldi	r24, 0x01	; 1
    2704:	90 e0       	ldi	r25, 0x00	; 0
    2706:	02 c0       	rjmp	.+4      	; 0x270c <DIO_SetPinDirection+0x1ca>
    2708:	88 0f       	add	r24, r24
    270a:	99 1f       	adc	r25, r25
    270c:	2a 95       	dec	r18
    270e:	e2 f7       	brpl	.-8      	; 0x2708 <DIO_SetPinDirection+0x1c6>
    2710:	80 95       	com	r24
    2712:	84 23       	and	r24, r20
    2714:	8c 93       	st	X, r24
    2716:	a6 e3       	ldi	r26, 0x36	; 54
    2718:	b0 e0       	ldi	r27, 0x00	; 0
    271a:	e6 e3       	ldi	r30, 0x36	; 54
    271c:	f0 e0       	ldi	r31, 0x00	; 0
    271e:	80 81       	ld	r24, Z
    2720:	48 2f       	mov	r20, r24
    2722:	8a 81       	ldd	r24, Y+2	; 0x02
    2724:	28 2f       	mov	r18, r24
    2726:	30 e0       	ldi	r19, 0x00	; 0
    2728:	81 e0       	ldi	r24, 0x01	; 1
    272a:	90 e0       	ldi	r25, 0x00	; 0
    272c:	02 2e       	mov	r0, r18
    272e:	02 c0       	rjmp	.+4      	; 0x2734 <DIO_SetPinDirection+0x1f2>
    2730:	88 0f       	add	r24, r24
    2732:	99 1f       	adc	r25, r25
    2734:	0a 94       	dec	r0
    2736:	e2 f7       	brpl	.-8      	; 0x2730 <DIO_SetPinDirection+0x1ee>
    2738:	84 2b       	or	r24, r20
    273a:	8c 93       	st	X, r24
    273c:	4d c0       	rjmp	.+154    	; 0x27d8 <DIO_SetPinDirection+0x296>
				case _PORTC:
					CLEAR_BIT(DDRC_R,pin); SET_BIT(PINC_R,pin);break;
    273e:	a4 e3       	ldi	r26, 0x34	; 52
    2740:	b0 e0       	ldi	r27, 0x00	; 0
    2742:	e4 e3       	ldi	r30, 0x34	; 52
    2744:	f0 e0       	ldi	r31, 0x00	; 0
    2746:	80 81       	ld	r24, Z
    2748:	48 2f       	mov	r20, r24
    274a:	8a 81       	ldd	r24, Y+2	; 0x02
    274c:	28 2f       	mov	r18, r24
    274e:	30 e0       	ldi	r19, 0x00	; 0
    2750:	81 e0       	ldi	r24, 0x01	; 1
    2752:	90 e0       	ldi	r25, 0x00	; 0
    2754:	02 c0       	rjmp	.+4      	; 0x275a <DIO_SetPinDirection+0x218>
    2756:	88 0f       	add	r24, r24
    2758:	99 1f       	adc	r25, r25
    275a:	2a 95       	dec	r18
    275c:	e2 f7       	brpl	.-8      	; 0x2756 <DIO_SetPinDirection+0x214>
    275e:	80 95       	com	r24
    2760:	84 23       	and	r24, r20
    2762:	8c 93       	st	X, r24
    2764:	a3 e3       	ldi	r26, 0x33	; 51
    2766:	b0 e0       	ldi	r27, 0x00	; 0
    2768:	e3 e3       	ldi	r30, 0x33	; 51
    276a:	f0 e0       	ldi	r31, 0x00	; 0
    276c:	80 81       	ld	r24, Z
    276e:	48 2f       	mov	r20, r24
    2770:	8a 81       	ldd	r24, Y+2	; 0x02
    2772:	28 2f       	mov	r18, r24
    2774:	30 e0       	ldi	r19, 0x00	; 0
    2776:	81 e0       	ldi	r24, 0x01	; 1
    2778:	90 e0       	ldi	r25, 0x00	; 0
    277a:	02 2e       	mov	r0, r18
    277c:	02 c0       	rjmp	.+4      	; 0x2782 <DIO_SetPinDirection+0x240>
    277e:	88 0f       	add	r24, r24
    2780:	99 1f       	adc	r25, r25
    2782:	0a 94       	dec	r0
    2784:	e2 f7       	brpl	.-8      	; 0x277e <DIO_SetPinDirection+0x23c>
    2786:	84 2b       	or	r24, r20
    2788:	8c 93       	st	X, r24
    278a:	26 c0       	rjmp	.+76     	; 0x27d8 <DIO_SetPinDirection+0x296>
				case _PORTD:
					CLEAR_BIT(DDRD_R,pin); SET_BIT(PIND_R,pin);break;
    278c:	a1 e3       	ldi	r26, 0x31	; 49
    278e:	b0 e0       	ldi	r27, 0x00	; 0
    2790:	e1 e3       	ldi	r30, 0x31	; 49
    2792:	f0 e0       	ldi	r31, 0x00	; 0
    2794:	80 81       	ld	r24, Z
    2796:	48 2f       	mov	r20, r24
    2798:	8a 81       	ldd	r24, Y+2	; 0x02
    279a:	28 2f       	mov	r18, r24
    279c:	30 e0       	ldi	r19, 0x00	; 0
    279e:	81 e0       	ldi	r24, 0x01	; 1
    27a0:	90 e0       	ldi	r25, 0x00	; 0
    27a2:	02 c0       	rjmp	.+4      	; 0x27a8 <DIO_SetPinDirection+0x266>
    27a4:	88 0f       	add	r24, r24
    27a6:	99 1f       	adc	r25, r25
    27a8:	2a 95       	dec	r18
    27aa:	e2 f7       	brpl	.-8      	; 0x27a4 <DIO_SetPinDirection+0x262>
    27ac:	80 95       	com	r24
    27ae:	84 23       	and	r24, r20
    27b0:	8c 93       	st	X, r24
    27b2:	a0 e3       	ldi	r26, 0x30	; 48
    27b4:	b0 e0       	ldi	r27, 0x00	; 0
    27b6:	e0 e3       	ldi	r30, 0x30	; 48
    27b8:	f0 e0       	ldi	r31, 0x00	; 0
    27ba:	80 81       	ld	r24, Z
    27bc:	48 2f       	mov	r20, r24
    27be:	8a 81       	ldd	r24, Y+2	; 0x02
    27c0:	28 2f       	mov	r18, r24
    27c2:	30 e0       	ldi	r19, 0x00	; 0
    27c4:	81 e0       	ldi	r24, 0x01	; 1
    27c6:	90 e0       	ldi	r25, 0x00	; 0
    27c8:	02 2e       	mov	r0, r18
    27ca:	02 c0       	rjmp	.+4      	; 0x27d0 <DIO_SetPinDirection+0x28e>
    27cc:	88 0f       	add	r24, r24
    27ce:	99 1f       	adc	r25, r25
    27d0:	0a 94       	dec	r0
    27d2:	e2 f7       	brpl	.-8      	; 0x27cc <DIO_SetPinDirection+0x28a>
    27d4:	84 2b       	or	r24, r20
    27d6:	8c 93       	st	X, r24

			}
			break;
		default: break;
	}
}
    27d8:	29 96       	adiw	r28, 0x09	; 9
    27da:	0f b6       	in	r0, 0x3f	; 63
    27dc:	f8 94       	cli
    27de:	de bf       	out	0x3e, r29	; 62
    27e0:	0f be       	out	0x3f, r0	; 63
    27e2:	cd bf       	out	0x3d, r28	; 61
    27e4:	cf 91       	pop	r28
    27e6:	df 91       	pop	r29
    27e8:	08 95       	ret

000027ea <DIO_SetPortDirection>:
void DIO_SetPortDirection(Eports_DIO port, Edirection_DIO direction)
{
    27ea:	df 93       	push	r29
    27ec:	cf 93       	push	r28
    27ee:	cd b7       	in	r28, 0x3d	; 61
    27f0:	de b7       	in	r29, 0x3e	; 62
    27f2:	28 97       	sbiw	r28, 0x08	; 8
    27f4:	0f b6       	in	r0, 0x3f	; 63
    27f6:	f8 94       	cli
    27f8:	de bf       	out	0x3e, r29	; 62
    27fa:	0f be       	out	0x3f, r0	; 63
    27fc:	cd bf       	out	0x3d, r28	; 61
    27fe:	89 83       	std	Y+1, r24	; 0x01
    2800:	6a 83       	std	Y+2, r22	; 0x02
	switch(direction)
    2802:	8a 81       	ldd	r24, Y+2	; 0x02
    2804:	28 2f       	mov	r18, r24
    2806:	30 e0       	ldi	r19, 0x00	; 0
    2808:	38 87       	std	Y+8, r19	; 0x08
    280a:	2f 83       	std	Y+7, r18	; 0x07
    280c:	8f 81       	ldd	r24, Y+7	; 0x07
    280e:	98 85       	ldd	r25, Y+8	; 0x08
    2810:	00 97       	sbiw	r24, 0x00	; 0
    2812:	d1 f1       	breq	.+116    	; 0x2888 <DIO_SetPortDirection+0x9e>
    2814:	2f 81       	ldd	r18, Y+7	; 0x07
    2816:	38 85       	ldd	r19, Y+8	; 0x08
    2818:	21 30       	cpi	r18, 0x01	; 1
    281a:	31 05       	cpc	r19, r1
    281c:	09 f0       	breq	.+2      	; 0x2820 <DIO_SetPortDirection+0x36>
    281e:	63 c0       	rjmp	.+198    	; 0x28e6 <DIO_SetPortDirection+0xfc>
	{
		case _OUTPUT:
			switch(port)
    2820:	89 81       	ldd	r24, Y+1	; 0x01
    2822:	28 2f       	mov	r18, r24
    2824:	30 e0       	ldi	r19, 0x00	; 0
    2826:	3e 83       	std	Y+6, r19	; 0x06
    2828:	2d 83       	std	Y+5, r18	; 0x05
    282a:	8d 81       	ldd	r24, Y+5	; 0x05
    282c:	9e 81       	ldd	r25, Y+6	; 0x06
    282e:	82 30       	cpi	r24, 0x02	; 2
    2830:	91 05       	cpc	r25, r1
    2832:	d9 f0       	breq	.+54     	; 0x286a <DIO_SetPortDirection+0x80>
    2834:	2d 81       	ldd	r18, Y+5	; 0x05
    2836:	3e 81       	ldd	r19, Y+6	; 0x06
    2838:	23 30       	cpi	r18, 0x03	; 3
    283a:	31 05       	cpc	r19, r1
    283c:	34 f4       	brge	.+12     	; 0x284a <DIO_SetPortDirection+0x60>
    283e:	8d 81       	ldd	r24, Y+5	; 0x05
    2840:	9e 81       	ldd	r25, Y+6	; 0x06
    2842:	81 30       	cpi	r24, 0x01	; 1
    2844:	91 05       	cpc	r25, r1
    2846:	61 f0       	breq	.+24     	; 0x2860 <DIO_SetPortDirection+0x76>
    2848:	4e c0       	rjmp	.+156    	; 0x28e6 <DIO_SetPortDirection+0xfc>
    284a:	2d 81       	ldd	r18, Y+5	; 0x05
    284c:	3e 81       	ldd	r19, Y+6	; 0x06
    284e:	23 30       	cpi	r18, 0x03	; 3
    2850:	31 05       	cpc	r19, r1
    2852:	81 f0       	breq	.+32     	; 0x2874 <DIO_SetPortDirection+0x8a>
    2854:	8d 81       	ldd	r24, Y+5	; 0x05
    2856:	9e 81       	ldd	r25, Y+6	; 0x06
    2858:	84 30       	cpi	r24, 0x04	; 4
    285a:	91 05       	cpc	r25, r1
    285c:	81 f0       	breq	.+32     	; 0x287e <DIO_SetPortDirection+0x94>
    285e:	43 c0       	rjmp	.+134    	; 0x28e6 <DIO_SetPortDirection+0xfc>
			{
				case _PORTA:
					DDRA_R = _PORT_HIGH; break;
    2860:	ea e3       	ldi	r30, 0x3A	; 58
    2862:	f0 e0       	ldi	r31, 0x00	; 0
    2864:	8f ef       	ldi	r24, 0xFF	; 255
    2866:	80 83       	st	Z, r24
    2868:	3e c0       	rjmp	.+124    	; 0x28e6 <DIO_SetPortDirection+0xfc>
				case _PORTB:
					DDRB_R = _PORT_HIGH; break;
    286a:	e7 e3       	ldi	r30, 0x37	; 55
    286c:	f0 e0       	ldi	r31, 0x00	; 0
    286e:	8f ef       	ldi	r24, 0xFF	; 255
    2870:	80 83       	st	Z, r24
    2872:	39 c0       	rjmp	.+114    	; 0x28e6 <DIO_SetPortDirection+0xfc>
				case _PORTC:
					DDRC_R = _PORT_HIGH; break;
    2874:	e4 e3       	ldi	r30, 0x34	; 52
    2876:	f0 e0       	ldi	r31, 0x00	; 0
    2878:	8f ef       	ldi	r24, 0xFF	; 255
    287a:	80 83       	st	Z, r24
    287c:	34 c0       	rjmp	.+104    	; 0x28e6 <DIO_SetPortDirection+0xfc>
				case _PORTD:
					DDRD_R = _PORT_HIGH; break;
    287e:	e1 e3       	ldi	r30, 0x31	; 49
    2880:	f0 e0       	ldi	r31, 0x00	; 0
    2882:	8f ef       	ldi	r24, 0xFF	; 255
    2884:	80 83       	st	Z, r24
    2886:	2f c0       	rjmp	.+94     	; 0x28e6 <DIO_SetPortDirection+0xfc>

			}
			break;
		case _INPUT:
			switch(port)
    2888:	89 81       	ldd	r24, Y+1	; 0x01
    288a:	28 2f       	mov	r18, r24
    288c:	30 e0       	ldi	r19, 0x00	; 0
    288e:	3c 83       	std	Y+4, r19	; 0x04
    2890:	2b 83       	std	Y+3, r18	; 0x03
    2892:	8b 81       	ldd	r24, Y+3	; 0x03
    2894:	9c 81       	ldd	r25, Y+4	; 0x04
    2896:	82 30       	cpi	r24, 0x02	; 2
    2898:	91 05       	cpc	r25, r1
    289a:	d1 f0       	breq	.+52     	; 0x28d0 <DIO_SetPortDirection+0xe6>
    289c:	2b 81       	ldd	r18, Y+3	; 0x03
    289e:	3c 81       	ldd	r19, Y+4	; 0x04
    28a0:	23 30       	cpi	r18, 0x03	; 3
    28a2:	31 05       	cpc	r19, r1
    28a4:	34 f4       	brge	.+12     	; 0x28b2 <DIO_SetPortDirection+0xc8>
    28a6:	8b 81       	ldd	r24, Y+3	; 0x03
    28a8:	9c 81       	ldd	r25, Y+4	; 0x04
    28aa:	81 30       	cpi	r24, 0x01	; 1
    28ac:	91 05       	cpc	r25, r1
    28ae:	61 f0       	breq	.+24     	; 0x28c8 <DIO_SetPortDirection+0xde>
    28b0:	1a c0       	rjmp	.+52     	; 0x28e6 <DIO_SetPortDirection+0xfc>
    28b2:	2b 81       	ldd	r18, Y+3	; 0x03
    28b4:	3c 81       	ldd	r19, Y+4	; 0x04
    28b6:	23 30       	cpi	r18, 0x03	; 3
    28b8:	31 05       	cpc	r19, r1
    28ba:	71 f0       	breq	.+28     	; 0x28d8 <DIO_SetPortDirection+0xee>
    28bc:	8b 81       	ldd	r24, Y+3	; 0x03
    28be:	9c 81       	ldd	r25, Y+4	; 0x04
    28c0:	84 30       	cpi	r24, 0x04	; 4
    28c2:	91 05       	cpc	r25, r1
    28c4:	69 f0       	breq	.+26     	; 0x28e0 <DIO_SetPortDirection+0xf6>
    28c6:	0f c0       	rjmp	.+30     	; 0x28e6 <DIO_SetPortDirection+0xfc>
			{
				case _PORTA:
					DDRA_R = _LOW; break;
    28c8:	ea e3       	ldi	r30, 0x3A	; 58
    28ca:	f0 e0       	ldi	r31, 0x00	; 0
    28cc:	10 82       	st	Z, r1
    28ce:	0b c0       	rjmp	.+22     	; 0x28e6 <DIO_SetPortDirection+0xfc>
				case _PORTB:
					DDRB_R = _LOW; break;
    28d0:	e7 e3       	ldi	r30, 0x37	; 55
    28d2:	f0 e0       	ldi	r31, 0x00	; 0
    28d4:	10 82       	st	Z, r1
    28d6:	07 c0       	rjmp	.+14     	; 0x28e6 <DIO_SetPortDirection+0xfc>
				case _PORTC:
					DDRC_R = _LOW; break;
    28d8:	e4 e3       	ldi	r30, 0x34	; 52
    28da:	f0 e0       	ldi	r31, 0x00	; 0
    28dc:	10 82       	st	Z, r1
    28de:	03 c0       	rjmp	.+6      	; 0x28e6 <DIO_SetPortDirection+0xfc>
				case _PORTD:
					DDRD_R = _LOW; break;
    28e0:	e1 e3       	ldi	r30, 0x31	; 49
    28e2:	f0 e0       	ldi	r31, 0x00	; 0
    28e4:	10 82       	st	Z, r1

			}
			break;
		default: break;
	}
}
    28e6:	28 96       	adiw	r28, 0x08	; 8
    28e8:	0f b6       	in	r0, 0x3f	; 63
    28ea:	f8 94       	cli
    28ec:	de bf       	out	0x3e, r29	; 62
    28ee:	0f be       	out	0x3f, r0	; 63
    28f0:	cd bf       	out	0x3d, r28	; 61
    28f2:	cf 91       	pop	r28
    28f4:	df 91       	pop	r29
    28f6:	08 95       	ret

000028f8 <DIO_SetPinValue>:

void DIO_SetPinValue(Eports_DIO port, Epins_DIO pin, Estate_DIO value)
{
    28f8:	df 93       	push	r29
    28fa:	cf 93       	push	r28
    28fc:	cd b7       	in	r28, 0x3d	; 61
    28fe:	de b7       	in	r29, 0x3e	; 62
    2900:	29 97       	sbiw	r28, 0x09	; 9
    2902:	0f b6       	in	r0, 0x3f	; 63
    2904:	f8 94       	cli
    2906:	de bf       	out	0x3e, r29	; 62
    2908:	0f be       	out	0x3f, r0	; 63
    290a:	cd bf       	out	0x3d, r28	; 61
    290c:	89 83       	std	Y+1, r24	; 0x01
    290e:	6a 83       	std	Y+2, r22	; 0x02
    2910:	4b 83       	std	Y+3, r20	; 0x03
	switch(value)
    2912:	8b 81       	ldd	r24, Y+3	; 0x03
    2914:	28 2f       	mov	r18, r24
    2916:	30 e0       	ldi	r19, 0x00	; 0
    2918:	39 87       	std	Y+9, r19	; 0x09
    291a:	28 87       	std	Y+8, r18	; 0x08
    291c:	88 85       	ldd	r24, Y+8	; 0x08
    291e:	99 85       	ldd	r25, Y+9	; 0x09
    2920:	00 97       	sbiw	r24, 0x00	; 0
    2922:	09 f4       	brne	.+2      	; 0x2926 <DIO_SetPinValue+0x2e>
    2924:	76 c0       	rjmp	.+236    	; 0x2a12 <DIO_SetPinValue+0x11a>
    2926:	28 85       	ldd	r18, Y+8	; 0x08
    2928:	39 85       	ldd	r19, Y+9	; 0x09
    292a:	21 30       	cpi	r18, 0x01	; 1
    292c:	31 05       	cpc	r19, r1
    292e:	09 f0       	breq	.+2      	; 0x2932 <DIO_SetPinValue+0x3a>
    2930:	e4 c0       	rjmp	.+456    	; 0x2afa <DIO_SetPinValue+0x202>
	{
		case _HIGH:
			switch(port)
    2932:	89 81       	ldd	r24, Y+1	; 0x01
    2934:	28 2f       	mov	r18, r24
    2936:	30 e0       	ldi	r19, 0x00	; 0
    2938:	3f 83       	std	Y+7, r19	; 0x07
    293a:	2e 83       	std	Y+6, r18	; 0x06
    293c:	8e 81       	ldd	r24, Y+6	; 0x06
    293e:	9f 81       	ldd	r25, Y+7	; 0x07
    2940:	82 30       	cpi	r24, 0x02	; 2
    2942:	91 05       	cpc	r25, r1
    2944:	51 f1       	breq	.+84     	; 0x299a <DIO_SetPinValue+0xa2>
    2946:	2e 81       	ldd	r18, Y+6	; 0x06
    2948:	3f 81       	ldd	r19, Y+7	; 0x07
    294a:	23 30       	cpi	r18, 0x03	; 3
    294c:	31 05       	cpc	r19, r1
    294e:	34 f4       	brge	.+12     	; 0x295c <DIO_SetPinValue+0x64>
    2950:	8e 81       	ldd	r24, Y+6	; 0x06
    2952:	9f 81       	ldd	r25, Y+7	; 0x07
    2954:	81 30       	cpi	r24, 0x01	; 1
    2956:	91 05       	cpc	r25, r1
    2958:	61 f0       	breq	.+24     	; 0x2972 <DIO_SetPinValue+0x7a>
    295a:	cf c0       	rjmp	.+414    	; 0x2afa <DIO_SetPinValue+0x202>
    295c:	2e 81       	ldd	r18, Y+6	; 0x06
    295e:	3f 81       	ldd	r19, Y+7	; 0x07
    2960:	23 30       	cpi	r18, 0x03	; 3
    2962:	31 05       	cpc	r19, r1
    2964:	71 f1       	breq	.+92     	; 0x29c2 <DIO_SetPinValue+0xca>
    2966:	8e 81       	ldd	r24, Y+6	; 0x06
    2968:	9f 81       	ldd	r25, Y+7	; 0x07
    296a:	84 30       	cpi	r24, 0x04	; 4
    296c:	91 05       	cpc	r25, r1
    296e:	e9 f1       	breq	.+122    	; 0x29ea <DIO_SetPinValue+0xf2>
    2970:	c4 c0       	rjmp	.+392    	; 0x2afa <DIO_SetPinValue+0x202>
			{
				case _PORTA:
					SET_BIT(PORTA_R,pin); break;
    2972:	ab e3       	ldi	r26, 0x3B	; 59
    2974:	b0 e0       	ldi	r27, 0x00	; 0
    2976:	eb e3       	ldi	r30, 0x3B	; 59
    2978:	f0 e0       	ldi	r31, 0x00	; 0
    297a:	80 81       	ld	r24, Z
    297c:	48 2f       	mov	r20, r24
    297e:	8a 81       	ldd	r24, Y+2	; 0x02
    2980:	28 2f       	mov	r18, r24
    2982:	30 e0       	ldi	r19, 0x00	; 0
    2984:	81 e0       	ldi	r24, 0x01	; 1
    2986:	90 e0       	ldi	r25, 0x00	; 0
    2988:	02 2e       	mov	r0, r18
    298a:	02 c0       	rjmp	.+4      	; 0x2990 <DIO_SetPinValue+0x98>
    298c:	88 0f       	add	r24, r24
    298e:	99 1f       	adc	r25, r25
    2990:	0a 94       	dec	r0
    2992:	e2 f7       	brpl	.-8      	; 0x298c <DIO_SetPinValue+0x94>
    2994:	84 2b       	or	r24, r20
    2996:	8c 93       	st	X, r24
    2998:	b0 c0       	rjmp	.+352    	; 0x2afa <DIO_SetPinValue+0x202>
				case _PORTB:
					SET_BIT(PORTB_R,pin); break;
    299a:	a8 e3       	ldi	r26, 0x38	; 56
    299c:	b0 e0       	ldi	r27, 0x00	; 0
    299e:	e8 e3       	ldi	r30, 0x38	; 56
    29a0:	f0 e0       	ldi	r31, 0x00	; 0
    29a2:	80 81       	ld	r24, Z
    29a4:	48 2f       	mov	r20, r24
    29a6:	8a 81       	ldd	r24, Y+2	; 0x02
    29a8:	28 2f       	mov	r18, r24
    29aa:	30 e0       	ldi	r19, 0x00	; 0
    29ac:	81 e0       	ldi	r24, 0x01	; 1
    29ae:	90 e0       	ldi	r25, 0x00	; 0
    29b0:	02 2e       	mov	r0, r18
    29b2:	02 c0       	rjmp	.+4      	; 0x29b8 <DIO_SetPinValue+0xc0>
    29b4:	88 0f       	add	r24, r24
    29b6:	99 1f       	adc	r25, r25
    29b8:	0a 94       	dec	r0
    29ba:	e2 f7       	brpl	.-8      	; 0x29b4 <DIO_SetPinValue+0xbc>
    29bc:	84 2b       	or	r24, r20
    29be:	8c 93       	st	X, r24
    29c0:	9c c0       	rjmp	.+312    	; 0x2afa <DIO_SetPinValue+0x202>
				case _PORTC:
					SET_BIT(PORTC_R,pin); break;
    29c2:	a5 e3       	ldi	r26, 0x35	; 53
    29c4:	b0 e0       	ldi	r27, 0x00	; 0
    29c6:	e5 e3       	ldi	r30, 0x35	; 53
    29c8:	f0 e0       	ldi	r31, 0x00	; 0
    29ca:	80 81       	ld	r24, Z
    29cc:	48 2f       	mov	r20, r24
    29ce:	8a 81       	ldd	r24, Y+2	; 0x02
    29d0:	28 2f       	mov	r18, r24
    29d2:	30 e0       	ldi	r19, 0x00	; 0
    29d4:	81 e0       	ldi	r24, 0x01	; 1
    29d6:	90 e0       	ldi	r25, 0x00	; 0
    29d8:	02 2e       	mov	r0, r18
    29da:	02 c0       	rjmp	.+4      	; 0x29e0 <DIO_SetPinValue+0xe8>
    29dc:	88 0f       	add	r24, r24
    29de:	99 1f       	adc	r25, r25
    29e0:	0a 94       	dec	r0
    29e2:	e2 f7       	brpl	.-8      	; 0x29dc <DIO_SetPinValue+0xe4>
    29e4:	84 2b       	or	r24, r20
    29e6:	8c 93       	st	X, r24
    29e8:	88 c0       	rjmp	.+272    	; 0x2afa <DIO_SetPinValue+0x202>
				case _PORTD:
					SET_BIT(PORTD_R,pin); break;
    29ea:	a2 e3       	ldi	r26, 0x32	; 50
    29ec:	b0 e0       	ldi	r27, 0x00	; 0
    29ee:	e2 e3       	ldi	r30, 0x32	; 50
    29f0:	f0 e0       	ldi	r31, 0x00	; 0
    29f2:	80 81       	ld	r24, Z
    29f4:	48 2f       	mov	r20, r24
    29f6:	8a 81       	ldd	r24, Y+2	; 0x02
    29f8:	28 2f       	mov	r18, r24
    29fa:	30 e0       	ldi	r19, 0x00	; 0
    29fc:	81 e0       	ldi	r24, 0x01	; 1
    29fe:	90 e0       	ldi	r25, 0x00	; 0
    2a00:	02 2e       	mov	r0, r18
    2a02:	02 c0       	rjmp	.+4      	; 0x2a08 <DIO_SetPinValue+0x110>
    2a04:	88 0f       	add	r24, r24
    2a06:	99 1f       	adc	r25, r25
    2a08:	0a 94       	dec	r0
    2a0a:	e2 f7       	brpl	.-8      	; 0x2a04 <DIO_SetPinValue+0x10c>
    2a0c:	84 2b       	or	r24, r20
    2a0e:	8c 93       	st	X, r24
    2a10:	74 c0       	rjmp	.+232    	; 0x2afa <DIO_SetPinValue+0x202>

			}
			break;
		case _LOW:
			switch(port)
    2a12:	89 81       	ldd	r24, Y+1	; 0x01
    2a14:	28 2f       	mov	r18, r24
    2a16:	30 e0       	ldi	r19, 0x00	; 0
    2a18:	3d 83       	std	Y+5, r19	; 0x05
    2a1a:	2c 83       	std	Y+4, r18	; 0x04
    2a1c:	8c 81       	ldd	r24, Y+4	; 0x04
    2a1e:	9d 81       	ldd	r25, Y+5	; 0x05
    2a20:	82 30       	cpi	r24, 0x02	; 2
    2a22:	91 05       	cpc	r25, r1
    2a24:	61 f1       	breq	.+88     	; 0x2a7e <DIO_SetPinValue+0x186>
    2a26:	2c 81       	ldd	r18, Y+4	; 0x04
    2a28:	3d 81       	ldd	r19, Y+5	; 0x05
    2a2a:	23 30       	cpi	r18, 0x03	; 3
    2a2c:	31 05       	cpc	r19, r1
    2a2e:	34 f4       	brge	.+12     	; 0x2a3c <DIO_SetPinValue+0x144>
    2a30:	8c 81       	ldd	r24, Y+4	; 0x04
    2a32:	9d 81       	ldd	r25, Y+5	; 0x05
    2a34:	81 30       	cpi	r24, 0x01	; 1
    2a36:	91 05       	cpc	r25, r1
    2a38:	69 f0       	breq	.+26     	; 0x2a54 <DIO_SetPinValue+0x15c>
    2a3a:	5f c0       	rjmp	.+190    	; 0x2afa <DIO_SetPinValue+0x202>
    2a3c:	2c 81       	ldd	r18, Y+4	; 0x04
    2a3e:	3d 81       	ldd	r19, Y+5	; 0x05
    2a40:	23 30       	cpi	r18, 0x03	; 3
    2a42:	31 05       	cpc	r19, r1
    2a44:	89 f1       	breq	.+98     	; 0x2aa8 <DIO_SetPinValue+0x1b0>
    2a46:	8c 81       	ldd	r24, Y+4	; 0x04
    2a48:	9d 81       	ldd	r25, Y+5	; 0x05
    2a4a:	84 30       	cpi	r24, 0x04	; 4
    2a4c:	91 05       	cpc	r25, r1
    2a4e:	09 f4       	brne	.+2      	; 0x2a52 <DIO_SetPinValue+0x15a>
    2a50:	40 c0       	rjmp	.+128    	; 0x2ad2 <DIO_SetPinValue+0x1da>
    2a52:	53 c0       	rjmp	.+166    	; 0x2afa <DIO_SetPinValue+0x202>
			{
				case _PORTA:
					CLEAR_BIT(PORTA_R,pin); break;
    2a54:	ab e3       	ldi	r26, 0x3B	; 59
    2a56:	b0 e0       	ldi	r27, 0x00	; 0
    2a58:	eb e3       	ldi	r30, 0x3B	; 59
    2a5a:	f0 e0       	ldi	r31, 0x00	; 0
    2a5c:	80 81       	ld	r24, Z
    2a5e:	48 2f       	mov	r20, r24
    2a60:	8a 81       	ldd	r24, Y+2	; 0x02
    2a62:	28 2f       	mov	r18, r24
    2a64:	30 e0       	ldi	r19, 0x00	; 0
    2a66:	81 e0       	ldi	r24, 0x01	; 1
    2a68:	90 e0       	ldi	r25, 0x00	; 0
    2a6a:	02 2e       	mov	r0, r18
    2a6c:	02 c0       	rjmp	.+4      	; 0x2a72 <DIO_SetPinValue+0x17a>
    2a6e:	88 0f       	add	r24, r24
    2a70:	99 1f       	adc	r25, r25
    2a72:	0a 94       	dec	r0
    2a74:	e2 f7       	brpl	.-8      	; 0x2a6e <DIO_SetPinValue+0x176>
    2a76:	80 95       	com	r24
    2a78:	84 23       	and	r24, r20
    2a7a:	8c 93       	st	X, r24
    2a7c:	3e c0       	rjmp	.+124    	; 0x2afa <DIO_SetPinValue+0x202>
				case _PORTB:  
					CLEAR_BIT(PORTB_R,pin); break;
    2a7e:	a8 e3       	ldi	r26, 0x38	; 56
    2a80:	b0 e0       	ldi	r27, 0x00	; 0
    2a82:	e8 e3       	ldi	r30, 0x38	; 56
    2a84:	f0 e0       	ldi	r31, 0x00	; 0
    2a86:	80 81       	ld	r24, Z
    2a88:	48 2f       	mov	r20, r24
    2a8a:	8a 81       	ldd	r24, Y+2	; 0x02
    2a8c:	28 2f       	mov	r18, r24
    2a8e:	30 e0       	ldi	r19, 0x00	; 0
    2a90:	81 e0       	ldi	r24, 0x01	; 1
    2a92:	90 e0       	ldi	r25, 0x00	; 0
    2a94:	02 2e       	mov	r0, r18
    2a96:	02 c0       	rjmp	.+4      	; 0x2a9c <DIO_SetPinValue+0x1a4>
    2a98:	88 0f       	add	r24, r24
    2a9a:	99 1f       	adc	r25, r25
    2a9c:	0a 94       	dec	r0
    2a9e:	e2 f7       	brpl	.-8      	; 0x2a98 <DIO_SetPinValue+0x1a0>
    2aa0:	80 95       	com	r24
    2aa2:	84 23       	and	r24, r20
    2aa4:	8c 93       	st	X, r24
    2aa6:	29 c0       	rjmp	.+82     	; 0x2afa <DIO_SetPinValue+0x202>
				case _PORTC:  
					CLEAR_BIT(PORTC_R,pin); break;
    2aa8:	a5 e3       	ldi	r26, 0x35	; 53
    2aaa:	b0 e0       	ldi	r27, 0x00	; 0
    2aac:	e5 e3       	ldi	r30, 0x35	; 53
    2aae:	f0 e0       	ldi	r31, 0x00	; 0
    2ab0:	80 81       	ld	r24, Z
    2ab2:	48 2f       	mov	r20, r24
    2ab4:	8a 81       	ldd	r24, Y+2	; 0x02
    2ab6:	28 2f       	mov	r18, r24
    2ab8:	30 e0       	ldi	r19, 0x00	; 0
    2aba:	81 e0       	ldi	r24, 0x01	; 1
    2abc:	90 e0       	ldi	r25, 0x00	; 0
    2abe:	02 2e       	mov	r0, r18
    2ac0:	02 c0       	rjmp	.+4      	; 0x2ac6 <DIO_SetPinValue+0x1ce>
    2ac2:	88 0f       	add	r24, r24
    2ac4:	99 1f       	adc	r25, r25
    2ac6:	0a 94       	dec	r0
    2ac8:	e2 f7       	brpl	.-8      	; 0x2ac2 <DIO_SetPinValue+0x1ca>
    2aca:	80 95       	com	r24
    2acc:	84 23       	and	r24, r20
    2ace:	8c 93       	st	X, r24
    2ad0:	14 c0       	rjmp	.+40     	; 0x2afa <DIO_SetPinValue+0x202>
				case _PORTD:  
					CLEAR_BIT(PORTD_R,pin); break;					
    2ad2:	a2 e3       	ldi	r26, 0x32	; 50
    2ad4:	b0 e0       	ldi	r27, 0x00	; 0
    2ad6:	e2 e3       	ldi	r30, 0x32	; 50
    2ad8:	f0 e0       	ldi	r31, 0x00	; 0
    2ada:	80 81       	ld	r24, Z
    2adc:	48 2f       	mov	r20, r24
    2ade:	8a 81       	ldd	r24, Y+2	; 0x02
    2ae0:	28 2f       	mov	r18, r24
    2ae2:	30 e0       	ldi	r19, 0x00	; 0
    2ae4:	81 e0       	ldi	r24, 0x01	; 1
    2ae6:	90 e0       	ldi	r25, 0x00	; 0
    2ae8:	02 2e       	mov	r0, r18
    2aea:	02 c0       	rjmp	.+4      	; 0x2af0 <DIO_SetPinValue+0x1f8>
    2aec:	88 0f       	add	r24, r24
    2aee:	99 1f       	adc	r25, r25
    2af0:	0a 94       	dec	r0
    2af2:	e2 f7       	brpl	.-8      	; 0x2aec <DIO_SetPinValue+0x1f4>
    2af4:	80 95       	com	r24
    2af6:	84 23       	and	r24, r20
    2af8:	8c 93       	st	X, r24
			}
			break;
		default: break;
	}
}
    2afa:	29 96       	adiw	r28, 0x09	; 9
    2afc:	0f b6       	in	r0, 0x3f	; 63
    2afe:	f8 94       	cli
    2b00:	de bf       	out	0x3e, r29	; 62
    2b02:	0f be       	out	0x3f, r0	; 63
    2b04:	cd bf       	out	0x3d, r28	; 61
    2b06:	cf 91       	pop	r28
    2b08:	df 91       	pop	r29
    2b0a:	08 95       	ret

00002b0c <DIO_SetPortValue>:

void DIO_SetPortValue(Eports_DIO port, u8 value)
{
    2b0c:	df 93       	push	r29
    2b0e:	cf 93       	push	r28
    2b10:	00 d0       	rcall	.+0      	; 0x2b12 <DIO_SetPortValue+0x6>
    2b12:	00 d0       	rcall	.+0      	; 0x2b14 <DIO_SetPortValue+0x8>
    2b14:	cd b7       	in	r28, 0x3d	; 61
    2b16:	de b7       	in	r29, 0x3e	; 62
    2b18:	89 83       	std	Y+1, r24	; 0x01
    2b1a:	6a 83       	std	Y+2, r22	; 0x02
	switch(port)
    2b1c:	89 81       	ldd	r24, Y+1	; 0x01
    2b1e:	28 2f       	mov	r18, r24
    2b20:	30 e0       	ldi	r19, 0x00	; 0
    2b22:	3c 83       	std	Y+4, r19	; 0x04
    2b24:	2b 83       	std	Y+3, r18	; 0x03
    2b26:	8b 81       	ldd	r24, Y+3	; 0x03
    2b28:	9c 81       	ldd	r25, Y+4	; 0x04
    2b2a:	82 30       	cpi	r24, 0x02	; 2
    2b2c:	91 05       	cpc	r25, r1
    2b2e:	d9 f0       	breq	.+54     	; 0x2b66 <DIO_SetPortValue+0x5a>
    2b30:	2b 81       	ldd	r18, Y+3	; 0x03
    2b32:	3c 81       	ldd	r19, Y+4	; 0x04
    2b34:	23 30       	cpi	r18, 0x03	; 3
    2b36:	31 05       	cpc	r19, r1
    2b38:	34 f4       	brge	.+12     	; 0x2b46 <DIO_SetPortValue+0x3a>
    2b3a:	8b 81       	ldd	r24, Y+3	; 0x03
    2b3c:	9c 81       	ldd	r25, Y+4	; 0x04
    2b3e:	81 30       	cpi	r24, 0x01	; 1
    2b40:	91 05       	cpc	r25, r1
    2b42:	61 f0       	breq	.+24     	; 0x2b5c <DIO_SetPortValue+0x50>
    2b44:	1e c0       	rjmp	.+60     	; 0x2b82 <DIO_SetPortValue+0x76>
    2b46:	2b 81       	ldd	r18, Y+3	; 0x03
    2b48:	3c 81       	ldd	r19, Y+4	; 0x04
    2b4a:	23 30       	cpi	r18, 0x03	; 3
    2b4c:	31 05       	cpc	r19, r1
    2b4e:	81 f0       	breq	.+32     	; 0x2b70 <DIO_SetPortValue+0x64>
    2b50:	8b 81       	ldd	r24, Y+3	; 0x03
    2b52:	9c 81       	ldd	r25, Y+4	; 0x04
    2b54:	84 30       	cpi	r24, 0x04	; 4
    2b56:	91 05       	cpc	r25, r1
    2b58:	81 f0       	breq	.+32     	; 0x2b7a <DIO_SetPortValue+0x6e>
    2b5a:	13 c0       	rjmp	.+38     	; 0x2b82 <DIO_SetPortValue+0x76>
	{
		case _PORTA:
			PORTA_R = value; break;
    2b5c:	eb e3       	ldi	r30, 0x3B	; 59
    2b5e:	f0 e0       	ldi	r31, 0x00	; 0
    2b60:	8a 81       	ldd	r24, Y+2	; 0x02
    2b62:	80 83       	st	Z, r24
    2b64:	0e c0       	rjmp	.+28     	; 0x2b82 <DIO_SetPortValue+0x76>
		case _PORTB:
			PORTB_R = value; break;
    2b66:	e8 e3       	ldi	r30, 0x38	; 56
    2b68:	f0 e0       	ldi	r31, 0x00	; 0
    2b6a:	8a 81       	ldd	r24, Y+2	; 0x02
    2b6c:	80 83       	st	Z, r24
    2b6e:	09 c0       	rjmp	.+18     	; 0x2b82 <DIO_SetPortValue+0x76>
		case _PORTC:
			PORTC_R = value; break;
    2b70:	e5 e3       	ldi	r30, 0x35	; 53
    2b72:	f0 e0       	ldi	r31, 0x00	; 0
    2b74:	8a 81       	ldd	r24, Y+2	; 0x02
    2b76:	80 83       	st	Z, r24
    2b78:	04 c0       	rjmp	.+8      	; 0x2b82 <DIO_SetPortValue+0x76>
		case _PORTD:
			PORTD_R = value; break;					
    2b7a:	e2 e3       	ldi	r30, 0x32	; 50
    2b7c:	f0 e0       	ldi	r31, 0x00	; 0
    2b7e:	8a 81       	ldd	r24, Y+2	; 0x02
    2b80:	80 83       	st	Z, r24
	}	
}
    2b82:	0f 90       	pop	r0
    2b84:	0f 90       	pop	r0
    2b86:	0f 90       	pop	r0
    2b88:	0f 90       	pop	r0
    2b8a:	cf 91       	pop	r28
    2b8c:	df 91       	pop	r29
    2b8e:	08 95       	ret

00002b90 <DIO_GetPinValue>:

Estate_DIO DIO_GetPinValue(Eports_DIO port, Epins_DIO pin)
{
    2b90:	df 93       	push	r29
    2b92:	cf 93       	push	r28
    2b94:	00 d0       	rcall	.+0      	; 0x2b96 <DIO_GetPinValue+0x6>
    2b96:	00 d0       	rcall	.+0      	; 0x2b98 <DIO_GetPinValue+0x8>
    2b98:	0f 92       	push	r0
    2b9a:	cd b7       	in	r28, 0x3d	; 61
    2b9c:	de b7       	in	r29, 0x3e	; 62
    2b9e:	8a 83       	std	Y+2, r24	; 0x02
    2ba0:	6b 83       	std	Y+3, r22	; 0x03
	Estate_DIO value=_LOW;
    2ba2:	19 82       	std	Y+1, r1	; 0x01
	switch(port)
    2ba4:	8a 81       	ldd	r24, Y+2	; 0x02
    2ba6:	28 2f       	mov	r18, r24
    2ba8:	30 e0       	ldi	r19, 0x00	; 0
    2baa:	3d 83       	std	Y+5, r19	; 0x05
    2bac:	2c 83       	std	Y+4, r18	; 0x04
    2bae:	4c 81       	ldd	r20, Y+4	; 0x04
    2bb0:	5d 81       	ldd	r21, Y+5	; 0x05
    2bb2:	42 30       	cpi	r20, 0x02	; 2
    2bb4:	51 05       	cpc	r21, r1
    2bb6:	41 f1       	breq	.+80     	; 0x2c08 <DIO_GetPinValue+0x78>
    2bb8:	8c 81       	ldd	r24, Y+4	; 0x04
    2bba:	9d 81       	ldd	r25, Y+5	; 0x05
    2bbc:	83 30       	cpi	r24, 0x03	; 3
    2bbe:	91 05       	cpc	r25, r1
    2bc0:	34 f4       	brge	.+12     	; 0x2bce <DIO_GetPinValue+0x3e>
    2bc2:	2c 81       	ldd	r18, Y+4	; 0x04
    2bc4:	3d 81       	ldd	r19, Y+5	; 0x05
    2bc6:	21 30       	cpi	r18, 0x01	; 1
    2bc8:	31 05       	cpc	r19, r1
    2bca:	61 f0       	breq	.+24     	; 0x2be4 <DIO_GetPinValue+0x54>
    2bcc:	52 c0       	rjmp	.+164    	; 0x2c72 <DIO_GetPinValue+0xe2>
    2bce:	4c 81       	ldd	r20, Y+4	; 0x04
    2bd0:	5d 81       	ldd	r21, Y+5	; 0x05
    2bd2:	43 30       	cpi	r20, 0x03	; 3
    2bd4:	51 05       	cpc	r21, r1
    2bd6:	51 f1       	breq	.+84     	; 0x2c2c <DIO_GetPinValue+0x9c>
    2bd8:	8c 81       	ldd	r24, Y+4	; 0x04
    2bda:	9d 81       	ldd	r25, Y+5	; 0x05
    2bdc:	84 30       	cpi	r24, 0x04	; 4
    2bde:	91 05       	cpc	r25, r1
    2be0:	b9 f1       	breq	.+110    	; 0x2c50 <DIO_GetPinValue+0xc0>
    2be2:	47 c0       	rjmp	.+142    	; 0x2c72 <DIO_GetPinValue+0xe2>
	{
		case _PORTA:
			value = GET_BIT(PINA_R,pin); break;
    2be4:	e9 e3       	ldi	r30, 0x39	; 57
    2be6:	f0 e0       	ldi	r31, 0x00	; 0
    2be8:	80 81       	ld	r24, Z
    2bea:	28 2f       	mov	r18, r24
    2bec:	30 e0       	ldi	r19, 0x00	; 0
    2bee:	8b 81       	ldd	r24, Y+3	; 0x03
    2bf0:	88 2f       	mov	r24, r24
    2bf2:	90 e0       	ldi	r25, 0x00	; 0
    2bf4:	a9 01       	movw	r20, r18
    2bf6:	02 c0       	rjmp	.+4      	; 0x2bfc <DIO_GetPinValue+0x6c>
    2bf8:	55 95       	asr	r21
    2bfa:	47 95       	ror	r20
    2bfc:	8a 95       	dec	r24
    2bfe:	e2 f7       	brpl	.-8      	; 0x2bf8 <DIO_GetPinValue+0x68>
    2c00:	ca 01       	movw	r24, r20
    2c02:	81 70       	andi	r24, 0x01	; 1
    2c04:	89 83       	std	Y+1, r24	; 0x01
    2c06:	35 c0       	rjmp	.+106    	; 0x2c72 <DIO_GetPinValue+0xe2>
		case _PORTB:  
			value = GET_BIT(PINB_R,pin); break;
    2c08:	e6 e3       	ldi	r30, 0x36	; 54
    2c0a:	f0 e0       	ldi	r31, 0x00	; 0
    2c0c:	80 81       	ld	r24, Z
    2c0e:	28 2f       	mov	r18, r24
    2c10:	30 e0       	ldi	r19, 0x00	; 0
    2c12:	8b 81       	ldd	r24, Y+3	; 0x03
    2c14:	88 2f       	mov	r24, r24
    2c16:	90 e0       	ldi	r25, 0x00	; 0
    2c18:	a9 01       	movw	r20, r18
    2c1a:	02 c0       	rjmp	.+4      	; 0x2c20 <DIO_GetPinValue+0x90>
    2c1c:	55 95       	asr	r21
    2c1e:	47 95       	ror	r20
    2c20:	8a 95       	dec	r24
    2c22:	e2 f7       	brpl	.-8      	; 0x2c1c <DIO_GetPinValue+0x8c>
    2c24:	ca 01       	movw	r24, r20
    2c26:	81 70       	andi	r24, 0x01	; 1
    2c28:	89 83       	std	Y+1, r24	; 0x01
    2c2a:	23 c0       	rjmp	.+70     	; 0x2c72 <DIO_GetPinValue+0xe2>
		case _PORTC:  
			value = GET_BIT(PINC_R,pin); break;
    2c2c:	e3 e3       	ldi	r30, 0x33	; 51
    2c2e:	f0 e0       	ldi	r31, 0x00	; 0
    2c30:	80 81       	ld	r24, Z
    2c32:	28 2f       	mov	r18, r24
    2c34:	30 e0       	ldi	r19, 0x00	; 0
    2c36:	8b 81       	ldd	r24, Y+3	; 0x03
    2c38:	88 2f       	mov	r24, r24
    2c3a:	90 e0       	ldi	r25, 0x00	; 0
    2c3c:	a9 01       	movw	r20, r18
    2c3e:	02 c0       	rjmp	.+4      	; 0x2c44 <DIO_GetPinValue+0xb4>
    2c40:	55 95       	asr	r21
    2c42:	47 95       	ror	r20
    2c44:	8a 95       	dec	r24
    2c46:	e2 f7       	brpl	.-8      	; 0x2c40 <DIO_GetPinValue+0xb0>
    2c48:	ca 01       	movw	r24, r20
    2c4a:	81 70       	andi	r24, 0x01	; 1
    2c4c:	89 83       	std	Y+1, r24	; 0x01
    2c4e:	11 c0       	rjmp	.+34     	; 0x2c72 <DIO_GetPinValue+0xe2>
		case _PORTD:  
			value = GET_BIT(PIND_R,pin); break;						
    2c50:	e0 e3       	ldi	r30, 0x30	; 48
    2c52:	f0 e0       	ldi	r31, 0x00	; 0
    2c54:	80 81       	ld	r24, Z
    2c56:	28 2f       	mov	r18, r24
    2c58:	30 e0       	ldi	r19, 0x00	; 0
    2c5a:	8b 81       	ldd	r24, Y+3	; 0x03
    2c5c:	88 2f       	mov	r24, r24
    2c5e:	90 e0       	ldi	r25, 0x00	; 0
    2c60:	a9 01       	movw	r20, r18
    2c62:	02 c0       	rjmp	.+4      	; 0x2c68 <DIO_GetPinValue+0xd8>
    2c64:	55 95       	asr	r21
    2c66:	47 95       	ror	r20
    2c68:	8a 95       	dec	r24
    2c6a:	e2 f7       	brpl	.-8      	; 0x2c64 <DIO_GetPinValue+0xd4>
    2c6c:	ca 01       	movw	r24, r20
    2c6e:	81 70       	andi	r24, 0x01	; 1
    2c70:	89 83       	std	Y+1, r24	; 0x01
	}	
	return value;
    2c72:	89 81       	ldd	r24, Y+1	; 0x01
}
    2c74:	0f 90       	pop	r0
    2c76:	0f 90       	pop	r0
    2c78:	0f 90       	pop	r0
    2c7a:	0f 90       	pop	r0
    2c7c:	0f 90       	pop	r0
    2c7e:	cf 91       	pop	r28
    2c80:	df 91       	pop	r29
    2c82:	08 95       	ret

00002c84 <DIO_GetPortValue>:
u8 DIO_GetPortValue(Eports_DIO port)
{
    2c84:	df 93       	push	r29
    2c86:	cf 93       	push	r28
    2c88:	00 d0       	rcall	.+0      	; 0x2c8a <DIO_GetPortValue+0x6>
    2c8a:	00 d0       	rcall	.+0      	; 0x2c8c <DIO_GetPortValue+0x8>
    2c8c:	cd b7       	in	r28, 0x3d	; 61
    2c8e:	de b7       	in	r29, 0x3e	; 62
    2c90:	8a 83       	std	Y+2, r24	; 0x02
	u8 value=0;
    2c92:	19 82       	std	Y+1, r1	; 0x01
	switch(port)
    2c94:	8a 81       	ldd	r24, Y+2	; 0x02
    2c96:	28 2f       	mov	r18, r24
    2c98:	30 e0       	ldi	r19, 0x00	; 0
    2c9a:	3c 83       	std	Y+4, r19	; 0x04
    2c9c:	2b 83       	std	Y+3, r18	; 0x03
    2c9e:	8b 81       	ldd	r24, Y+3	; 0x03
    2ca0:	9c 81       	ldd	r25, Y+4	; 0x04
    2ca2:	82 30       	cpi	r24, 0x02	; 2
    2ca4:	91 05       	cpc	r25, r1
    2ca6:	d9 f0       	breq	.+54     	; 0x2cde <DIO_GetPortValue+0x5a>
    2ca8:	2b 81       	ldd	r18, Y+3	; 0x03
    2caa:	3c 81       	ldd	r19, Y+4	; 0x04
    2cac:	23 30       	cpi	r18, 0x03	; 3
    2cae:	31 05       	cpc	r19, r1
    2cb0:	34 f4       	brge	.+12     	; 0x2cbe <DIO_GetPortValue+0x3a>
    2cb2:	8b 81       	ldd	r24, Y+3	; 0x03
    2cb4:	9c 81       	ldd	r25, Y+4	; 0x04
    2cb6:	81 30       	cpi	r24, 0x01	; 1
    2cb8:	91 05       	cpc	r25, r1
    2cba:	61 f0       	breq	.+24     	; 0x2cd4 <DIO_GetPortValue+0x50>
    2cbc:	1e c0       	rjmp	.+60     	; 0x2cfa <DIO_GetPortValue+0x76>
    2cbe:	2b 81       	ldd	r18, Y+3	; 0x03
    2cc0:	3c 81       	ldd	r19, Y+4	; 0x04
    2cc2:	23 30       	cpi	r18, 0x03	; 3
    2cc4:	31 05       	cpc	r19, r1
    2cc6:	81 f0       	breq	.+32     	; 0x2ce8 <DIO_GetPortValue+0x64>
    2cc8:	8b 81       	ldd	r24, Y+3	; 0x03
    2cca:	9c 81       	ldd	r25, Y+4	; 0x04
    2ccc:	84 30       	cpi	r24, 0x04	; 4
    2cce:	91 05       	cpc	r25, r1
    2cd0:	81 f0       	breq	.+32     	; 0x2cf2 <DIO_GetPortValue+0x6e>
    2cd2:	13 c0       	rjmp	.+38     	; 0x2cfa <DIO_GetPortValue+0x76>
	{
		case _PORTA:
			value = PINA_R; break;
    2cd4:	e9 e3       	ldi	r30, 0x39	; 57
    2cd6:	f0 e0       	ldi	r31, 0x00	; 0
    2cd8:	80 81       	ld	r24, Z
    2cda:	89 83       	std	Y+1, r24	; 0x01
    2cdc:	0e c0       	rjmp	.+28     	; 0x2cfa <DIO_GetPortValue+0x76>
		case _PORTB:  
			value = PINB_R; break;
    2cde:	e6 e3       	ldi	r30, 0x36	; 54
    2ce0:	f0 e0       	ldi	r31, 0x00	; 0
    2ce2:	80 81       	ld	r24, Z
    2ce4:	89 83       	std	Y+1, r24	; 0x01
    2ce6:	09 c0       	rjmp	.+18     	; 0x2cfa <DIO_GetPortValue+0x76>
		case _PORTC:  
			value = PINC_R; break;
    2ce8:	e3 e3       	ldi	r30, 0x33	; 51
    2cea:	f0 e0       	ldi	r31, 0x00	; 0
    2cec:	80 81       	ld	r24, Z
    2cee:	89 83       	std	Y+1, r24	; 0x01
    2cf0:	04 c0       	rjmp	.+8      	; 0x2cfa <DIO_GetPortValue+0x76>
		case _PORTD:  
			value = PIND_R; break;						
    2cf2:	e0 e3       	ldi	r30, 0x30	; 48
    2cf4:	f0 e0       	ldi	r31, 0x00	; 0
    2cf6:	80 81       	ld	r24, Z
    2cf8:	89 83       	std	Y+1, r24	; 0x01
	}	
	return value;
    2cfa:	89 81       	ldd	r24, Y+1	; 0x01
}
    2cfc:	0f 90       	pop	r0
    2cfe:	0f 90       	pop	r0
    2d00:	0f 90       	pop	r0
    2d02:	0f 90       	pop	r0
    2d04:	cf 91       	pop	r28
    2d06:	df 91       	pop	r29
    2d08:	08 95       	ret

00002d0a <ADC_INIT>:
	Volt = ADC_R;
	//CLEAR_BIT(ADCSRA_R,ADIE_R);  //enable ADC interrupt
}*/

void ADC_INIT(void)
{
    2d0a:	df 93       	push	r29
    2d0c:	cf 93       	push	r28
    2d0e:	cd b7       	in	r28, 0x3d	; 61
    2d10:	de b7       	in	r29, 0x3e	; 62
	DIO_SetPortDirection(_PORTA,_PORT_INPUT);
    2d12:	81 e0       	ldi	r24, 0x01	; 1
    2d14:	60 e0       	ldi	r22, 0x00	; 0
    2d16:	0e 94 f5 13 	call	0x27ea	; 0x27ea <DIO_SetPortDirection>
	SET_BIT(ADCSRA_R,ADEN_R);  //enable ADC
    2d1a:	a6 e2       	ldi	r26, 0x26	; 38
    2d1c:	b0 e0       	ldi	r27, 0x00	; 0
    2d1e:	e6 e2       	ldi	r30, 0x26	; 38
    2d20:	f0 e0       	ldi	r31, 0x00	; 0
    2d22:	80 81       	ld	r24, Z
    2d24:	80 68       	ori	r24, 0x80	; 128
    2d26:	8c 93       	st	X, r24
	
	/*set the prescaler of ADC to 64*/
	SET_BIT(ADCSRA_R,ADPS2_R);
    2d28:	a6 e2       	ldi	r26, 0x26	; 38
    2d2a:	b0 e0       	ldi	r27, 0x00	; 0
    2d2c:	e6 e2       	ldi	r30, 0x26	; 38
    2d2e:	f0 e0       	ldi	r31, 0x00	; 0
    2d30:	80 81       	ld	r24, Z
    2d32:	84 60       	ori	r24, 0x04	; 4
    2d34:	8c 93       	st	X, r24
	SET_BIT(ADCSRA_R,ADPS1_R);
    2d36:	a6 e2       	ldi	r26, 0x26	; 38
    2d38:	b0 e0       	ldi	r27, 0x00	; 0
    2d3a:	e6 e2       	ldi	r30, 0x26	; 38
    2d3c:	f0 e0       	ldi	r31, 0x00	; 0
    2d3e:	80 81       	ld	r24, Z
    2d40:	82 60       	ori	r24, 0x02	; 2
    2d42:	8c 93       	st	X, r24
		
	SET_BIT(ADMUX_R,REFS0_R);  //set ADC voltage from AVCC
    2d44:	a7 e2       	ldi	r26, 0x27	; 39
    2d46:	b0 e0       	ldi	r27, 0x00	; 0
    2d48:	e7 e2       	ldi	r30, 0x27	; 39
    2d4a:	f0 e0       	ldi	r31, 0x00	; 0
    2d4c:	80 81       	ld	r24, Z
    2d4e:	80 64       	ori	r24, 0x40	; 64
    2d50:	8c 93       	st	X, r24
	//SET_BIT(ADCSRA_R,ADIE_R);  //enable ADC interrupt
	
	//sei(); //enable global interrupts
}
    2d52:	cf 91       	pop	r28
    2d54:	df 91       	pop	r29
    2d56:	08 95       	ret

00002d58 <ADC_u16ReadData>:

u16 ADC_u16ReadData(u8 channel)
{
    2d58:	df 93       	push	r29
    2d5a:	cf 93       	push	r28
    2d5c:	0f 92       	push	r0
    2d5e:	cd b7       	in	r28, 0x3d	; 61
    2d60:	de b7       	in	r29, 0x3e	; 62
    2d62:	89 83       	std	Y+1, r24	; 0x01
	ADMUX_R &= 0b11100000;
    2d64:	a7 e2       	ldi	r26, 0x27	; 39
    2d66:	b0 e0       	ldi	r27, 0x00	; 0
    2d68:	e7 e2       	ldi	r30, 0x27	; 39
    2d6a:	f0 e0       	ldi	r31, 0x00	; 0
    2d6c:	80 81       	ld	r24, Z
    2d6e:	80 7e       	andi	r24, 0xE0	; 224
    2d70:	8c 93       	st	X, r24

	ADMUX_R |= channel;
    2d72:	a7 e2       	ldi	r26, 0x27	; 39
    2d74:	b0 e0       	ldi	r27, 0x00	; 0
    2d76:	e7 e2       	ldi	r30, 0x27	; 39
    2d78:	f0 e0       	ldi	r31, 0x00	; 0
    2d7a:	90 81       	ld	r25, Z
    2d7c:	89 81       	ldd	r24, Y+1	; 0x01
    2d7e:	89 2b       	or	r24, r25
    2d80:	8c 93       	st	X, r24
		SET_BIT(ADCSRA_R,ADSC_R);
		while(GET_BIT(ADCSRA_R,ADIF_R)==0);
		ADMUX_R = 0xC2;
	}*/

	SET_BIT(ADCSRA_R,ADSC_R); //start the conversion process
    2d82:	a6 e2       	ldi	r26, 0x26	; 38
    2d84:	b0 e0       	ldi	r27, 0x00	; 0
    2d86:	e6 e2       	ldi	r30, 0x26	; 38
    2d88:	f0 e0       	ldi	r31, 0x00	; 0
    2d8a:	80 81       	ld	r24, Z
    2d8c:	80 64       	ori	r24, 0x40	; 64
    2d8e:	8c 93       	st	X, r24
	while(GET_BIT(ADCSRA_R,ADIF_R)==0);
    2d90:	e6 e2       	ldi	r30, 0x26	; 38
    2d92:	f0 e0       	ldi	r31, 0x00	; 0
    2d94:	80 81       	ld	r24, Z
    2d96:	82 95       	swap	r24
    2d98:	8f 70       	andi	r24, 0x0F	; 15
    2d9a:	88 2f       	mov	r24, r24
    2d9c:	90 e0       	ldi	r25, 0x00	; 0
    2d9e:	81 70       	andi	r24, 0x01	; 1
    2da0:	90 70       	andi	r25, 0x00	; 0
    2da2:	00 97       	sbiw	r24, 0x00	; 0
    2da4:	a9 f3       	breq	.-22     	; 0x2d90 <ADC_u16ReadData+0x38>

	CLEAR_BIT(ADCSRA_R,ADIF_R);
    2da6:	a6 e2       	ldi	r26, 0x26	; 38
    2da8:	b0 e0       	ldi	r27, 0x00	; 0
    2daa:	e6 e2       	ldi	r30, 0x26	; 38
    2dac:	f0 e0       	ldi	r31, 0x00	; 0
    2dae:	80 81       	ld	r24, Z
    2db0:	8f 7e       	andi	r24, 0xEF	; 239
    2db2:	8c 93       	st	X, r24
	return ADC_R;
    2db4:	e4 e2       	ldi	r30, 0x24	; 36
    2db6:	f0 e0       	ldi	r31, 0x00	; 0
    2db8:	80 81       	ld	r24, Z
    2dba:	91 81       	ldd	r25, Z+1	; 0x01

}
    2dbc:	0f 90       	pop	r0
    2dbe:	cf 91       	pop	r28
    2dc0:	df 91       	pop	r29
    2dc2:	08 95       	ret

00002dc4 <ADC_f32ReadVoltage>:

f32 ADC_f32ReadVoltage(u8 channel)
{
    2dc4:	df 93       	push	r29
    2dc6:	cf 93       	push	r28
    2dc8:	cd b7       	in	r28, 0x3d	; 61
    2dca:	de b7       	in	r29, 0x3e	; 62
    2dcc:	27 97       	sbiw	r28, 0x07	; 7
    2dce:	0f b6       	in	r0, 0x3f	; 63
    2dd0:	f8 94       	cli
    2dd2:	de bf       	out	0x3e, r29	; 62
    2dd4:	0f be       	out	0x3f, r0	; 63
    2dd6:	cd bf       	out	0x3d, r28	; 61
    2dd8:	8f 83       	std	Y+7, r24	; 0x07
	
	u16 voltage = ADC_u16ReadData(channel);
    2dda:	8f 81       	ldd	r24, Y+7	; 0x07
    2ddc:	0e 94 ac 16 	call	0x2d58	; 0x2d58 <ADC_u16ReadData>
    2de0:	9e 83       	std	Y+6, r25	; 0x06
    2de2:	8d 83       	std	Y+5, r24	; 0x05
	f32 Vin  = (Vref*voltage)/1024.0;
    2de4:	2d 81       	ldd	r18, Y+5	; 0x05
    2de6:	3e 81       	ldd	r19, Y+6	; 0x06
    2de8:	c9 01       	movw	r24, r18
    2dea:	88 0f       	add	r24, r24
    2dec:	99 1f       	adc	r25, r25
    2dee:	88 0f       	add	r24, r24
    2df0:	99 1f       	adc	r25, r25
    2df2:	82 0f       	add	r24, r18
    2df4:	93 1f       	adc	r25, r19
    2df6:	cc 01       	movw	r24, r24
    2df8:	a0 e0       	ldi	r26, 0x00	; 0
    2dfa:	b0 e0       	ldi	r27, 0x00	; 0
    2dfc:	bc 01       	movw	r22, r24
    2dfe:	cd 01       	movw	r24, r26
    2e00:	0e 94 be 0a 	call	0x157c	; 0x157c <__floatunsisf>
    2e04:	dc 01       	movw	r26, r24
    2e06:	cb 01       	movw	r24, r22
    2e08:	bc 01       	movw	r22, r24
    2e0a:	cd 01       	movw	r24, r26
    2e0c:	20 e0       	ldi	r18, 0x00	; 0
    2e0e:	30 e0       	ldi	r19, 0x00	; 0
    2e10:	40 e8       	ldi	r20, 0x80	; 128
    2e12:	54 e4       	ldi	r21, 0x44	; 68
    2e14:	0e 94 8e 09 	call	0x131c	; 0x131c <__divsf3>
    2e18:	dc 01       	movw	r26, r24
    2e1a:	cb 01       	movw	r24, r22
    2e1c:	89 83       	std	Y+1, r24	; 0x01
    2e1e:	9a 83       	std	Y+2, r25	; 0x02
    2e20:	ab 83       	std	Y+3, r26	; 0x03
    2e22:	bc 83       	std	Y+4, r27	; 0x04
	return Vin ;
    2e24:	89 81       	ldd	r24, Y+1	; 0x01
    2e26:	9a 81       	ldd	r25, Y+2	; 0x02
    2e28:	ab 81       	ldd	r26, Y+3	; 0x03
    2e2a:	bc 81       	ldd	r27, Y+4	; 0x04
}
    2e2c:	bc 01       	movw	r22, r24
    2e2e:	cd 01       	movw	r24, r26
    2e30:	27 96       	adiw	r28, 0x07	; 7
    2e32:	0f b6       	in	r0, 0x3f	; 63
    2e34:	f8 94       	cli
    2e36:	de bf       	out	0x3e, r29	; 62
    2e38:	0f be       	out	0x3f, r0	; 63
    2e3a:	cd bf       	out	0x3d, r28	; 61
    2e3c:	cf 91       	pop	r28
    2e3e:	df 91       	pop	r29
    2e40:	08 95       	ret

00002e42 <LIGHT_Control>:
/**********************************************************************************************************************
 *  Functions Definitions
 *********************************************************************************************************************/
 
void LIGHT_Control(u16 LDR_DATA)
{
    2e42:	df 93       	push	r29
    2e44:	cf 93       	push	r28
    2e46:	00 d0       	rcall	.+0      	; 0x2e48 <LIGHT_Control+0x6>
    2e48:	0f 92       	push	r0
    2e4a:	cd b7       	in	r28, 0x3d	; 61
    2e4c:	de b7       	in	r29, 0x3e	; 62
    2e4e:	9b 83       	std	Y+3, r25	; 0x03
    2e50:	8a 83       	std	Y+2, r24	; 0x02

	u8 Duty = ((LDR_DATA/1024.0) * 100);
    2e52:	8a 81       	ldd	r24, Y+2	; 0x02
    2e54:	9b 81       	ldd	r25, Y+3	; 0x03
    2e56:	cc 01       	movw	r24, r24
    2e58:	a0 e0       	ldi	r26, 0x00	; 0
    2e5a:	b0 e0       	ldi	r27, 0x00	; 0
    2e5c:	bc 01       	movw	r22, r24
    2e5e:	cd 01       	movw	r24, r26
    2e60:	0e 94 be 0a 	call	0x157c	; 0x157c <__floatunsisf>
    2e64:	dc 01       	movw	r26, r24
    2e66:	cb 01       	movw	r24, r22
    2e68:	bc 01       	movw	r22, r24
    2e6a:	cd 01       	movw	r24, r26
    2e6c:	20 e0       	ldi	r18, 0x00	; 0
    2e6e:	30 e0       	ldi	r19, 0x00	; 0
    2e70:	40 e8       	ldi	r20, 0x80	; 128
    2e72:	54 e4       	ldi	r21, 0x44	; 68
    2e74:	0e 94 8e 09 	call	0x131c	; 0x131c <__divsf3>
    2e78:	dc 01       	movw	r26, r24
    2e7a:	cb 01       	movw	r24, r22
    2e7c:	bc 01       	movw	r22, r24
    2e7e:	cd 01       	movw	r24, r26
    2e80:	20 e0       	ldi	r18, 0x00	; 0
    2e82:	30 e0       	ldi	r19, 0x00	; 0
    2e84:	48 ec       	ldi	r20, 0xC8	; 200
    2e86:	52 e4       	ldi	r21, 0x42	; 66
    2e88:	0e 94 94 08 	call	0x1128	; 0x1128 <__mulsf3>
    2e8c:	dc 01       	movw	r26, r24
    2e8e:	cb 01       	movw	r24, r22
    2e90:	bc 01       	movw	r22, r24
    2e92:	cd 01       	movw	r24, r26
    2e94:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2e98:	dc 01       	movw	r26, r24
    2e9a:	cb 01       	movw	r24, r22
    2e9c:	89 83       	std	Y+1, r24	; 0x01

	if((Duty>=25))
    2e9e:	89 81       	ldd	r24, Y+1	; 0x01
    2ea0:	89 31       	cpi	r24, 0x19	; 25
    2ea2:	30 f0       	brcs	.+12     	; 0x2eb0 <LIGHT_Control+0x6e>
	{
		DIO_SetPinValue(LIGHT_PORT,LIGHT_PIN,_LOW);
    2ea4:	82 e0       	ldi	r24, 0x02	; 2
    2ea6:	62 e0       	ldi	r22, 0x02	; 2
    2ea8:	40 e0       	ldi	r20, 0x00	; 0
    2eaa:	0e 94 7c 14 	call	0x28f8	; 0x28f8 <DIO_SetPinValue>
    2eae:	05 c0       	rjmp	.+10     	; 0x2eba <LIGHT_Control+0x78>
	}else
	{
		DIO_SetPinValue(LIGHT_PORT,LIGHT_PIN,_HIGH);
    2eb0:	82 e0       	ldi	r24, 0x02	; 2
    2eb2:	62 e0       	ldi	r22, 0x02	; 2
    2eb4:	41 e0       	ldi	r20, 0x01	; 1
    2eb6:	0e 94 7c 14 	call	0x28f8	; 0x28f8 <DIO_SetPinValue>
	}

}
    2eba:	0f 90       	pop	r0
    2ebc:	0f 90       	pop	r0
    2ebe:	0f 90       	pop	r0
    2ec0:	cf 91       	pop	r28
    2ec2:	df 91       	pop	r29
    2ec4:	08 95       	ret

00002ec6 <LM35_Read_Temp>:
/**********************************************************************************************************************
 *  Functions Definitions
 *********************************************************************************************************************/

u8 LM35_Read_Temp(void)
{
    2ec6:	df 93       	push	r29
    2ec8:	cf 93       	push	r28
    2eca:	0f 92       	push	r0
    2ecc:	cd b7       	in	r28, 0x3d	; 61
    2ece:	de b7       	in	r29, 0x3e	; 62
	u8 temp = ADC_u16ReadData(LM35_PIN)/2.04 ; /*to get the exact temperature*/
    2ed0:	82 e0       	ldi	r24, 0x02	; 2
    2ed2:	0e 94 ac 16 	call	0x2d58	; 0x2d58 <ADC_u16ReadData>
    2ed6:	cc 01       	movw	r24, r24
    2ed8:	a0 e0       	ldi	r26, 0x00	; 0
    2eda:	b0 e0       	ldi	r27, 0x00	; 0
    2edc:	bc 01       	movw	r22, r24
    2ede:	cd 01       	movw	r24, r26
    2ee0:	0e 94 be 0a 	call	0x157c	; 0x157c <__floatunsisf>
    2ee4:	dc 01       	movw	r26, r24
    2ee6:	cb 01       	movw	r24, r22
    2ee8:	bc 01       	movw	r22, r24
    2eea:	cd 01       	movw	r24, r26
    2eec:	2c e5       	ldi	r18, 0x5C	; 92
    2eee:	3f e8       	ldi	r19, 0x8F	; 143
    2ef0:	42 e0       	ldi	r20, 0x02	; 2
    2ef2:	50 e4       	ldi	r21, 0x40	; 64
    2ef4:	0e 94 8e 09 	call	0x131c	; 0x131c <__divsf3>
    2ef8:	dc 01       	movw	r26, r24
    2efa:	cb 01       	movw	r24, r22
    2efc:	bc 01       	movw	r22, r24
    2efe:	cd 01       	movw	r24, r26
    2f00:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2f04:	dc 01       	movw	r26, r24
    2f06:	cb 01       	movw	r24, r22
    2f08:	89 83       	std	Y+1, r24	; 0x01
	return temp;
    2f0a:	89 81       	ldd	r24, Y+1	; 0x01
} 
    2f0c:	0f 90       	pop	r0
    2f0e:	cf 91       	pop	r28
    2f10:	df 91       	pop	r29
    2f12:	08 95       	ret

00002f14 <LDR_GetData>:
/**********************************************************************************************************************
 *  Functions Definitions
 *********************************************************************************************************************/

u16 LDR_GetData(void)
{
    2f14:	df 93       	push	r29
    2f16:	cf 93       	push	r28
    2f18:	00 d0       	rcall	.+0      	; 0x2f1a <LDR_GetData+0x6>
    2f1a:	cd b7       	in	r28, 0x3d	; 61
    2f1c:	de b7       	in	r29, 0x3e	; 62
	u16 LDR_VOLT = ADC_u16ReadData(LDR_PIN);
    2f1e:	80 e0       	ldi	r24, 0x00	; 0
    2f20:	0e 94 ac 16 	call	0x2d58	; 0x2d58 <ADC_u16ReadData>
    2f24:	9a 83       	std	Y+2, r25	; 0x02
    2f26:	89 83       	std	Y+1, r24	; 0x01
	return LDR_VOLT;
    2f28:	89 81       	ldd	r24, Y+1	; 0x01
    2f2a:	9a 81       	ldd	r25, Y+2	; 0x02
}
    2f2c:	0f 90       	pop	r0
    2f2e:	0f 90       	pop	r0
    2f30:	cf 91       	pop	r28
    2f32:	df 91       	pop	r29
    2f34:	08 95       	ret

00002f36 <GAS_GetData>:
/**********************************************************************************************************************
 *  Functions Definitions
 *********************************************************************************************************************/
 
u8 GAS_GetData(void)
{
    2f36:	df 93       	push	r29
    2f38:	cf 93       	push	r28
    2f3a:	cd b7       	in	r28, 0x3d	; 61
    2f3c:	de b7       	in	r29, 0x3e	; 62
	return DIO_GetPinValue(GAS_PORT,GAS_PIN);
    2f3e:	82 e0       	ldi	r24, 0x02	; 2
    2f40:	60 e0       	ldi	r22, 0x00	; 0
    2f42:	0e 94 c8 15 	call	0x2b90	; 0x2b90 <DIO_GetPinValue>
}
    2f46:	cf 91       	pop	r28
    2f48:	df 91       	pop	r29
    2f4a:	08 95       	ret

00002f4c <GAS_Alarm>:

void GAS_Alarm(u8 GAS_State)
{
    2f4c:	df 93       	push	r29
    2f4e:	cf 93       	push	r28
    2f50:	00 d0       	rcall	.+0      	; 0x2f52 <GAS_Alarm+0x6>
    2f52:	0f 92       	push	r0
    2f54:	cd b7       	in	r28, 0x3d	; 61
    2f56:	de b7       	in	r29, 0x3e	; 62
    2f58:	89 83       	std	Y+1, r24	; 0x01
	switch(GAS_State)
    2f5a:	89 81       	ldd	r24, Y+1	; 0x01
    2f5c:	28 2f       	mov	r18, r24
    2f5e:	30 e0       	ldi	r19, 0x00	; 0
    2f60:	3b 83       	std	Y+3, r19	; 0x03
    2f62:	2a 83       	std	Y+2, r18	; 0x02
    2f64:	8a 81       	ldd	r24, Y+2	; 0x02
    2f66:	9b 81       	ldd	r25, Y+3	; 0x03
    2f68:	00 97       	sbiw	r24, 0x00	; 0
    2f6a:	31 f0       	breq	.+12     	; 0x2f78 <GAS_Alarm+0x2c>
    2f6c:	2a 81       	ldd	r18, Y+2	; 0x02
    2f6e:	3b 81       	ldd	r19, Y+3	; 0x03
    2f70:	21 30       	cpi	r18, 0x01	; 1
    2f72:	31 05       	cpc	r19, r1
    2f74:	39 f0       	breq	.+14     	; 0x2f84 <GAS_Alarm+0x38>
    2f76:	0b c0       	rjmp	.+22     	; 0x2f8e <GAS_Alarm+0x42>
	{
		case 0: DIO_SetPinValue(GAS_PORT,GAS_ALARM_PIN,_LOW); break;
    2f78:	82 e0       	ldi	r24, 0x02	; 2
    2f7a:	61 e0       	ldi	r22, 0x01	; 1
    2f7c:	40 e0       	ldi	r20, 0x00	; 0
    2f7e:	0e 94 7c 14 	call	0x28f8	; 0x28f8 <DIO_SetPinValue>
    2f82:	05 c0       	rjmp	.+10     	; 0x2f8e <GAS_Alarm+0x42>
		case 1: DIO_SetPinValue(GAS_PORT,GAS_ALARM_PIN,_HIGH); break;
    2f84:	82 e0       	ldi	r24, 0x02	; 2
    2f86:	61 e0       	ldi	r22, 0x01	; 1
    2f88:	41 e0       	ldi	r20, 0x01	; 1
    2f8a:	0e 94 7c 14 	call	0x28f8	; 0x28f8 <DIO_SetPinValue>

	}
}
    2f8e:	0f 90       	pop	r0
    2f90:	0f 90       	pop	r0
    2f92:	0f 90       	pop	r0
    2f94:	cf 91       	pop	r28
    2f96:	df 91       	pop	r29
    2f98:	08 95       	ret

00002f9a <FAN_Control>:
/**********************************************************************************************************************
 *  Functions Definitions
 *********************************************************************************************************************/
 
void FAN_Control(u8 Temp,u8 Critical_Temp)
{
    2f9a:	df 93       	push	r29
    2f9c:	cf 93       	push	r28
    2f9e:	00 d0       	rcall	.+0      	; 0x2fa0 <FAN_Control+0x6>
    2fa0:	cd b7       	in	r28, 0x3d	; 61
    2fa2:	de b7       	in	r29, 0x3e	; 62
    2fa4:	89 83       	std	Y+1, r24	; 0x01
    2fa6:	6a 83       	std	Y+2, r22	; 0x02

	if(Temp < Critical_Temp)
    2fa8:	99 81       	ldd	r25, Y+1	; 0x01
    2faa:	8a 81       	ldd	r24, Y+2	; 0x02
    2fac:	98 17       	cp	r25, r24
    2fae:	30 f4       	brcc	.+12     	; 0x2fbc <FAN_Control+0x22>
	{
		DIO_SetPinValue(FAN_PORT,FAN_PIN,_LOW);
    2fb0:	82 e0       	ldi	r24, 0x02	; 2
    2fb2:	63 e0       	ldi	r22, 0x03	; 3
    2fb4:	40 e0       	ldi	r20, 0x00	; 0
    2fb6:	0e 94 7c 14 	call	0x28f8	; 0x28f8 <DIO_SetPinValue>
    2fba:	09 c0       	rjmp	.+18     	; 0x2fce <FAN_Control+0x34>
	}else if(Temp >= Critical_Temp)
    2fbc:	99 81       	ldd	r25, Y+1	; 0x01
    2fbe:	8a 81       	ldd	r24, Y+2	; 0x02
    2fc0:	98 17       	cp	r25, r24
    2fc2:	28 f0       	brcs	.+10     	; 0x2fce <FAN_Control+0x34>
	{
		DIO_SetPinValue(FAN_PORT,FAN_PIN,_HIGH);
    2fc4:	82 e0       	ldi	r24, 0x02	; 2
    2fc6:	63 e0       	ldi	r22, 0x03	; 3
    2fc8:	41 e0       	ldi	r20, 0x01	; 1
    2fca:	0e 94 7c 14 	call	0x28f8	; 0x28f8 <DIO_SetPinValue>
	}

}
    2fce:	0f 90       	pop	r0
    2fd0:	0f 90       	pop	r0
    2fd2:	cf 91       	pop	r28
    2fd4:	df 91       	pop	r29
    2fd6:	08 95       	ret

00002fd8 <HW_Init>:
/**********************************************************************************************************************
 *  Functions Definitions
 *********************************************************************************************************************/

void HW_Init(void)
{
    2fd8:	df 93       	push	r29
    2fda:	cf 93       	push	r28
    2fdc:	cd b7       	in	r28, 0x3d	; 61
    2fde:	de b7       	in	r29, 0x3e	; 62
	DIO_SetPinDirection(FAN_PORT,FAN_PIN,_OUTPUT);
    2fe0:	82 e0       	ldi	r24, 0x02	; 2
    2fe2:	63 e0       	ldi	r22, 0x03	; 3
    2fe4:	41 e0       	ldi	r20, 0x01	; 1
    2fe6:	0e 94 a1 12 	call	0x2542	; 0x2542 <DIO_SetPinDirection>
	DIO_SetPinDirection(GAS_PORT,GAS_PIN,_INPUT);
    2fea:	82 e0       	ldi	r24, 0x02	; 2
    2fec:	60 e0       	ldi	r22, 0x00	; 0
    2fee:	40 e0       	ldi	r20, 0x00	; 0
    2ff0:	0e 94 a1 12 	call	0x2542	; 0x2542 <DIO_SetPinDirection>
	DIO_SetPinDirection(MUSIC_PORT,MUSIC_PIN,_OUTPUT);
    2ff4:	83 e0       	ldi	r24, 0x03	; 3
    2ff6:	60 e0       	ldi	r22, 0x00	; 0
    2ff8:	41 e0       	ldi	r20, 0x01	; 1
    2ffa:	0e 94 a1 12 	call	0x2542	; 0x2542 <DIO_SetPinDirection>
	DIO_SetPinDirection(GAS_PORT,GAS_ALARM_PIN,_OUTPUT);
    2ffe:	82 e0       	ldi	r24, 0x02	; 2
    3000:	61 e0       	ldi	r22, 0x01	; 1
    3002:	41 e0       	ldi	r20, 0x01	; 1
    3004:	0e 94 a1 12 	call	0x2542	; 0x2542 <DIO_SetPinDirection>
	DIO_SetPinDirection(LIGHT_PORT,LIGHT_PIN,_OUTPUT);
    3008:	82 e0       	ldi	r24, 0x02	; 2
    300a:	62 e0       	ldi	r22, 0x02	; 2
    300c:	41 e0       	ldi	r20, 0x01	; 1
    300e:	0e 94 a1 12 	call	0x2542	; 0x2542 <DIO_SetPinDirection>
	DIO_SetPinDirection(DOOR_PORT,DOOR_PIN,_OUTPUT);
    3012:	84 e0       	ldi	r24, 0x04	; 4
    3014:	65 e0       	ldi	r22, 0x05	; 5
    3016:	41 e0       	ldi	r20, 0x01	; 1
    3018:	0e 94 a1 12 	call	0x2542	; 0x2542 <DIO_SetPinDirection>

	UART_init();
    301c:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <UART_init>
	ADC_INIT();
    3020:	0e 94 85 16 	call	0x2d0a	; 0x2d0a <ADC_INIT>
	TIMER1_FPWMinit();
    3024:	0e 94 4c 12 	call	0x2498	; 0x2498 <TIMER1_FPWMinit>
}
    3028:	cf 91       	pop	r28
    302a:	df 91       	pop	r29
    302c:	08 95       	ret

0000302e <Control_GAS>:


void Control_GAS(void)
{
    302e:	df 93       	push	r29
    3030:	cf 93       	push	r28
    3032:	cd b7       	in	r28, 0x3d	; 61
    3034:	de b7       	in	r29, 0x3e	; 62
	Control_union.Stats_t.SMOKE = GAS_GetData();
    3036:	0e 94 9b 17 	call	0x2f36	; 0x2f36 <GAS_GetData>
    303a:	81 70       	andi	r24, 0x01	; 1
    303c:	81 70       	andi	r24, 0x01	; 1
    303e:	98 2f       	mov	r25, r24
    3040:	99 0f       	add	r25, r25
    3042:	99 0f       	add	r25, r25
    3044:	99 0f       	add	r25, r25
    3046:	80 91 be 01 	lds	r24, 0x01BE
    304a:	87 7f       	andi	r24, 0xF7	; 247
    304c:	89 2b       	or	r24, r25
    304e:	80 93 be 01 	sts	0x01BE, r24
	GAS_Alarm(Control_union.Stats_t.SMOKE);
    3052:	80 91 be 01 	lds	r24, 0x01BE
    3056:	86 95       	lsr	r24
    3058:	86 95       	lsr	r24
    305a:	86 95       	lsr	r24
    305c:	81 70       	andi	r24, 0x01	; 1
    305e:	0e 94 a6 17 	call	0x2f4c	; 0x2f4c <GAS_Alarm>
}
    3062:	cf 91       	pop	r28
    3064:	df 91       	pop	r29
    3066:	08 95       	ret

00003068 <Control_Temperature>:


void Control_Temperature(void)
{
    3068:	df 93       	push	r29
    306a:	cf 93       	push	r28
    306c:	cd b7       	in	r28, 0x3d	; 61
    306e:	de b7       	in	r29, 0x3e	; 62
	Temp_Display= LM35_Read_Temp();
    3070:	0e 94 63 17 	call	0x2ec6	; 0x2ec6 <LM35_Read_Temp>
    3074:	80 93 7a 01 	sts	0x017A, r24


	FAN_Control(Temp_Display, Global_Control[TASK_TEMP]);
    3078:	80 91 7a 01 	lds	r24, 0x017A
    307c:	90 91 76 01 	lds	r25, 0x0176
    3080:	69 2f       	mov	r22, r25
    3082:	0e 94 cd 17 	call	0x2f9a	; 0x2f9a <FAN_Control>

}
    3086:	cf 91       	pop	r28
    3088:	df 91       	pop	r29
    308a:	08 95       	ret

0000308c <Control_Lights>:


void Control_Lights(void)
{
    308c:	df 93       	push	r29
    308e:	cf 93       	push	r28
    3090:	00 d0       	rcall	.+0      	; 0x3092 <Control_Lights+0x6>
    3092:	cd b7       	in	r28, 0x3d	; 61
    3094:	de b7       	in	r29, 0x3e	; 62
	if(Global_Control[TASK_LDR])
    3096:	80 91 77 01 	lds	r24, 0x0177
    309a:	88 23       	and	r24, r24
    309c:	71 f0       	breq	.+28     	; 0x30ba <Control_Lights+0x2e>
	{
		Control_union.Stats_t.LIGHTS = 1;
    309e:	80 91 be 01 	lds	r24, 0x01BE
    30a2:	81 60       	ori	r24, 0x01	; 1
    30a4:	80 93 be 01 	sts	0x01BE, r24
		u16 LDR_DATA = LDR_GetData();
    30a8:	0e 94 8a 17 	call	0x2f14	; 0x2f14 <LDR_GetData>
    30ac:	9a 83       	std	Y+2, r25	; 0x02
    30ae:	89 83       	std	Y+1, r24	; 0x01
		LIGHT_Control(LDR_DATA);
    30b0:	89 81       	ldd	r24, Y+1	; 0x01
    30b2:	9a 81       	ldd	r25, Y+2	; 0x02
    30b4:	0e 94 21 17 	call	0x2e42	; 0x2e42 <LIGHT_Control>
    30b8:	09 c0       	rjmp	.+18     	; 0x30cc <Control_Lights+0x40>

	}else
	{
		Control_union.Stats_t.LIGHTS = 0;
    30ba:	80 91 be 01 	lds	r24, 0x01BE
    30be:	8e 7f       	andi	r24, 0xFE	; 254
    30c0:	80 93 be 01 	sts	0x01BE, r24
		LIGHT_Control(LIGHT_OFF);
    30c4:	88 ee       	ldi	r24, 0xE8	; 232
    30c6:	93 e0       	ldi	r25, 0x03	; 3
    30c8:	0e 94 21 17 	call	0x2e42	; 0x2e42 <LIGHT_Control>

	}
}
    30cc:	0f 90       	pop	r0
    30ce:	0f 90       	pop	r0
    30d0:	cf 91       	pop	r28
    30d2:	df 91       	pop	r29
    30d4:	08 95       	ret

000030d6 <Control_Door>:


void Control_Door(void){
    30d6:	df 93       	push	r29
    30d8:	cf 93       	push	r28
    30da:	cd b7       	in	r28, 0x3d	; 61
    30dc:	de b7       	in	r29, 0x3e	; 62
	if(Global_Control[TASK_DOOR]){
    30de:	80 91 78 01 	lds	r24, 0x0178
    30e2:	88 23       	and	r24, r24
    30e4:	51 f0       	breq	.+20     	; 0x30fa <Control_Door+0x24>
		Control_union.Stats_t.DOORS = 1;
    30e6:	80 91 be 01 	lds	r24, 0x01BE
    30ea:	82 60       	ori	r24, 0x02	; 2
    30ec:	80 93 be 01 	sts	0x01BE, r24
		TIMER1_SetDutyCycle(1249);
    30f0:	81 ee       	ldi	r24, 0xE1	; 225
    30f2:	94 e0       	ldi	r25, 0x04	; 4
    30f4:	0e 94 8f 12 	call	0x251e	; 0x251e <TIMER1_SetDutyCycle>
    30f8:	09 c0       	rjmp	.+18     	; 0x310c <Control_Door+0x36>
	}
	else{
		Control_union.Stats_t.DOORS = 0;
    30fa:	80 91 be 01 	lds	r24, 0x01BE
    30fe:	8d 7f       	andi	r24, 0xFD	; 253
    3100:	80 93 be 01 	sts	0x01BE, r24
		TIMER1_SetDutyCycle(388);
    3104:	84 e8       	ldi	r24, 0x84	; 132
    3106:	91 e0       	ldi	r25, 0x01	; 1
    3108:	0e 94 8f 12 	call	0x251e	; 0x251e <TIMER1_SetDutyCycle>
	}
}
    310c:	cf 91       	pop	r28
    310e:	df 91       	pop	r29
    3110:	08 95       	ret

00003112 <Control_Music>:


void Control_Music(void){
    3112:	df 93       	push	r29
    3114:	cf 93       	push	r28
    3116:	cd b7       	in	r28, 0x3d	; 61
    3118:	de b7       	in	r29, 0x3e	; 62
	if(Global_Control[TASK_MUSIC]){
    311a:	80 91 79 01 	lds	r24, 0x0179
    311e:	88 23       	and	r24, r24
    3120:	59 f0       	breq	.+22     	; 0x3138 <Control_Music+0x26>
		Control_union.Stats_t.SOUND = 1;
    3122:	80 91 be 01 	lds	r24, 0x01BE
    3126:	84 60       	ori	r24, 0x04	; 4
    3128:	80 93 be 01 	sts	0x01BE, r24
		DIO_SetPinValue(MUSIC_PORT,MUSIC_PIN,_HIGH);
    312c:	83 e0       	ldi	r24, 0x03	; 3
    312e:	60 e0       	ldi	r22, 0x00	; 0
    3130:	41 e0       	ldi	r20, 0x01	; 1
    3132:	0e 94 7c 14 	call	0x28f8	; 0x28f8 <DIO_SetPinValue>
    3136:	0a c0       	rjmp	.+20     	; 0x314c <Control_Music+0x3a>
	}
	else{
		Control_union.Stats_t.SOUND = 0;
    3138:	80 91 be 01 	lds	r24, 0x01BE
    313c:	8b 7f       	andi	r24, 0xFB	; 251
    313e:	80 93 be 01 	sts	0x01BE, r24
		DIO_SetPinValue(MUSIC_PORT,MUSIC_PIN,_LOW);
    3142:	83 e0       	ldi	r24, 0x03	; 3
    3144:	60 e0       	ldi	r22, 0x00	; 0
    3146:	40 e0       	ldi	r20, 0x00	; 0
    3148:	0e 94 7c 14 	call	0x28f8	; 0x28f8 <DIO_SetPinValue>
	}
}
    314c:	cf 91       	pop	r28
    314e:	df 91       	pop	r29
    3150:	08 95       	ret

00003152 <Control_ReceiveSendUART>:


void Control_ReceiveSendUART(){
    3152:	df 93       	push	r29
    3154:	cf 93       	push	r28
    3156:	00 d0       	rcall	.+0      	; 0x3158 <Control_ReceiveSendUART+0x6>
    3158:	cd b7       	in	r28, 0x3d	; 61
    315a:	de b7       	in	r29, 0x3e	; 62
	static u8 flag=1, flag2=0, flag3=0;
	u8 sent_Data = Control_union.Stats_REG;
    315c:	80 91 be 01 	lds	r24, 0x01BE
    3160:	8a 83       	std	Y+2, r24	; 0x02
	u8 rec_Data;
	if(flag == 0){
    3162:	80 91 7b 01 	lds	r24, 0x017B
    3166:	88 23       	and	r24, r24
    3168:	c9 f4       	brne	.+50     	; 0x319c <Control_ReceiveSendUART+0x4a>
		if(flag2 == 1){
    316a:	80 91 81 01 	lds	r24, 0x0181
    316e:	81 30       	cpi	r24, 0x01	; 1
    3170:	41 f4       	brne	.+16     	; 0x3182 <Control_ReceiveSendUART+0x30>
			UART_transmit_Char(sent_Data);
    3172:	8a 81       	ldd	r24, Y+2	; 0x02
    3174:	88 2f       	mov	r24, r24
    3176:	90 e0       	ldi	r25, 0x00	; 0
    3178:	0e 94 f2 10 	call	0x21e4	; 0x21e4 <UART_transmit_Char>
			flag2 = 0;
    317c:	10 92 81 01 	sts	0x0181, r1
    3180:	09 c0       	rjmp	.+18     	; 0x3194 <Control_ReceiveSendUART+0x42>
		}
		else{
			UART_transmit_Char(Temp_Display);
    3182:	80 91 7a 01 	lds	r24, 0x017A
    3186:	88 2f       	mov	r24, r24
    3188:	90 e0       	ldi	r25, 0x00	; 0
    318a:	0e 94 f2 10 	call	0x21e4	; 0x21e4 <UART_transmit_Char>
			flag2 = 1;
    318e:	81 e0       	ldi	r24, 0x01	; 1
    3190:	80 93 81 01 	sts	0x0181, r24
		}
		flag=1;
    3194:	81 e0       	ldi	r24, 0x01	; 1
    3196:	80 93 7b 01 	sts	0x017B, r24
    319a:	21 c0       	rjmp	.+66     	; 0x31de <Control_ReceiveSendUART+0x8c>
	}else{

		rec_Data = UART_recieve_Char();
    319c:	0e 94 0e 11 	call	0x221c	; 0x221c <UART_recieve_Char>
    31a0:	89 83       	std	Y+1, r24	; 0x01
		if(flag3 == 0){
    31a2:	80 91 80 01 	lds	r24, 0x0180
    31a6:	88 23       	and	r24, r24
    31a8:	39 f4       	brne	.+14     	; 0x31b8 <Control_ReceiveSendUART+0x66>
			Global_Control[TASK_TEMP] = rec_Data;
    31aa:	89 81       	ldd	r24, Y+1	; 0x01
    31ac:	80 93 76 01 	sts	0x0176, r24
			flag3 = 1;
    31b0:	81 e0       	ldi	r24, 0x01	; 1
    31b2:	80 93 80 01 	sts	0x0180, r24
    31b6:	11 c0       	rjmp	.+34     	; 0x31da <Control_ReceiveSendUART+0x88>
		}
		else{
			Global_Control[TASK_LDR] = GET_BIT(rec_Data,0);
    31b8:	89 81       	ldd	r24, Y+1	; 0x01
    31ba:	81 70       	andi	r24, 0x01	; 1
    31bc:	80 93 77 01 	sts	0x0177, r24
			Global_Control[TASK_DOOR] = GET_BIT(rec_Data,1);
    31c0:	89 81       	ldd	r24, Y+1	; 0x01
    31c2:	86 95       	lsr	r24
    31c4:	81 70       	andi	r24, 0x01	; 1
    31c6:	80 93 78 01 	sts	0x0178, r24
			Global_Control[TASK_MUSIC] = GET_BIT(rec_Data,2) ;
    31ca:	89 81       	ldd	r24, Y+1	; 0x01
    31cc:	86 95       	lsr	r24
    31ce:	86 95       	lsr	r24
    31d0:	81 70       	andi	r24, 0x01	; 1
    31d2:	80 93 79 01 	sts	0x0179, r24
			flag3 = 0;
    31d6:	10 92 80 01 	sts	0x0180, r1
		}
		flag=0;
    31da:	10 92 7b 01 	sts	0x017B, r1
	}
}
    31de:	0f 90       	pop	r0
    31e0:	0f 90       	pop	r0
    31e2:	cf 91       	pop	r28
    31e4:	df 91       	pop	r29
    31e6:	08 95       	ret

000031e8 <main>:
 *  Functions Definitions
 *********************************************************************************************************************/
 
 /*Main function of Application layer*/
int main(void)
{
    31e8:	df 93       	push	r29
    31ea:	cf 93       	push	r28
    31ec:	cd b7       	in	r28, 0x3d	; 61
    31ee:	de b7       	in	r29, 0x3e	; 62
	SCH_init();
    31f0:	0e 94 2c 0d 	call	0x1a58	; 0x1a58 <SCH_init>
	HW_Init();
    31f4:	0e 94 ec 17 	call	0x2fd8	; 0x2fd8 <HW_Init>

	SCH_Add_Task(Control_ReceiveSendUART,0,150);
    31f8:	89 ea       	ldi	r24, 0xA9	; 169
    31fa:	98 e1       	ldi	r25, 0x18	; 24
    31fc:	60 e0       	ldi	r22, 0x00	; 0
    31fe:	46 e9       	ldi	r20, 0x96	; 150
    3200:	50 e0       	ldi	r21, 0x00	; 0
    3202:	0e 94 f8 0d 	call	0x1bf0	; 0x1bf0 <SCH_Add_Task>
	SCH_Add_Task(Control_GAS,1,5);
    3206:	87 e1       	ldi	r24, 0x17	; 23
    3208:	98 e1       	ldi	r25, 0x18	; 24
    320a:	61 e0       	ldi	r22, 0x01	; 1
    320c:	45 e0       	ldi	r20, 0x05	; 5
    320e:	50 e0       	ldi	r21, 0x00	; 0
    3210:	0e 94 f8 0d 	call	0x1bf0	; 0x1bf0 <SCH_Add_Task>
	SCH_Add_Task(Control_Temperature,2,7);
    3214:	84 e3       	ldi	r24, 0x34	; 52
    3216:	98 e1       	ldi	r25, 0x18	; 24
    3218:	62 e0       	ldi	r22, 0x02	; 2
    321a:	47 e0       	ldi	r20, 0x07	; 7
    321c:	50 e0       	ldi	r21, 0x00	; 0
    321e:	0e 94 f8 0d 	call	0x1bf0	; 0x1bf0 <SCH_Add_Task>
	SCH_Add_Task(Control_Lights,3,20);
    3222:	86 e4       	ldi	r24, 0x46	; 70
    3224:	98 e1       	ldi	r25, 0x18	; 24
    3226:	63 e0       	ldi	r22, 0x03	; 3
    3228:	44 e1       	ldi	r20, 0x14	; 20
    322a:	50 e0       	ldi	r21, 0x00	; 0
    322c:	0e 94 f8 0d 	call	0x1bf0	; 0x1bf0 <SCH_Add_Task>
	SCH_Add_Task(Control_Door,4,20);
    3230:	8b e6       	ldi	r24, 0x6B	; 107
    3232:	98 e1       	ldi	r25, 0x18	; 24
    3234:	64 e0       	ldi	r22, 0x04	; 4
    3236:	44 e1       	ldi	r20, 0x14	; 20
    3238:	50 e0       	ldi	r21, 0x00	; 0
    323a:	0e 94 f8 0d 	call	0x1bf0	; 0x1bf0 <SCH_Add_Task>
	SCH_Add_Task(Control_Music,5,20);
    323e:	89 e8       	ldi	r24, 0x89	; 137
    3240:	98 e1       	ldi	r25, 0x18	; 24
    3242:	65 e0       	ldi	r22, 0x05	; 5
    3244:	44 e1       	ldi	r20, 0x14	; 20
    3246:	50 e0       	ldi	r21, 0x00	; 0
    3248:	0e 94 f8 0d 	call	0x1bf0	; 0x1bf0 <SCH_Add_Task>

	SCH_Start();
    324c:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <SCH_Start>
	
/*Main super loop*/
	while(1)
	{
		SCH_Dispatcher();
    3250:	0e 94 f9 0e 	call	0x1df2	; 0x1df2 <SCH_Dispatcher>
    3254:	fd cf       	rjmp	.-6      	; 0x3250 <main+0x68>

00003256 <__mulsi3>:
    3256:	62 9f       	mul	r22, r18
    3258:	d0 01       	movw	r26, r0
    325a:	73 9f       	mul	r23, r19
    325c:	f0 01       	movw	r30, r0
    325e:	82 9f       	mul	r24, r18
    3260:	e0 0d       	add	r30, r0
    3262:	f1 1d       	adc	r31, r1
    3264:	64 9f       	mul	r22, r20
    3266:	e0 0d       	add	r30, r0
    3268:	f1 1d       	adc	r31, r1
    326a:	92 9f       	mul	r25, r18
    326c:	f0 0d       	add	r31, r0
    326e:	83 9f       	mul	r24, r19
    3270:	f0 0d       	add	r31, r0
    3272:	74 9f       	mul	r23, r20
    3274:	f0 0d       	add	r31, r0
    3276:	65 9f       	mul	r22, r21
    3278:	f0 0d       	add	r31, r0
    327a:	99 27       	eor	r25, r25
    327c:	72 9f       	mul	r23, r18
    327e:	b0 0d       	add	r27, r0
    3280:	e1 1d       	adc	r30, r1
    3282:	f9 1f       	adc	r31, r25
    3284:	63 9f       	mul	r22, r19
    3286:	b0 0d       	add	r27, r0
    3288:	e1 1d       	adc	r30, r1
    328a:	f9 1f       	adc	r31, r25
    328c:	bd 01       	movw	r22, r26
    328e:	cf 01       	movw	r24, r30
    3290:	11 24       	eor	r1, r1
    3292:	08 95       	ret

00003294 <__udivmodsi4>:
    3294:	a1 e2       	ldi	r26, 0x21	; 33
    3296:	1a 2e       	mov	r1, r26
    3298:	aa 1b       	sub	r26, r26
    329a:	bb 1b       	sub	r27, r27
    329c:	fd 01       	movw	r30, r26
    329e:	0d c0       	rjmp	.+26     	; 0x32ba <__udivmodsi4_ep>

000032a0 <__udivmodsi4_loop>:
    32a0:	aa 1f       	adc	r26, r26
    32a2:	bb 1f       	adc	r27, r27
    32a4:	ee 1f       	adc	r30, r30
    32a6:	ff 1f       	adc	r31, r31
    32a8:	a2 17       	cp	r26, r18
    32aa:	b3 07       	cpc	r27, r19
    32ac:	e4 07       	cpc	r30, r20
    32ae:	f5 07       	cpc	r31, r21
    32b0:	20 f0       	brcs	.+8      	; 0x32ba <__udivmodsi4_ep>
    32b2:	a2 1b       	sub	r26, r18
    32b4:	b3 0b       	sbc	r27, r19
    32b6:	e4 0b       	sbc	r30, r20
    32b8:	f5 0b       	sbc	r31, r21

000032ba <__udivmodsi4_ep>:
    32ba:	66 1f       	adc	r22, r22
    32bc:	77 1f       	adc	r23, r23
    32be:	88 1f       	adc	r24, r24
    32c0:	99 1f       	adc	r25, r25
    32c2:	1a 94       	dec	r1
    32c4:	69 f7       	brne	.-38     	; 0x32a0 <__udivmodsi4_loop>
    32c6:	60 95       	com	r22
    32c8:	70 95       	com	r23
    32ca:	80 95       	com	r24
    32cc:	90 95       	com	r25
    32ce:	9b 01       	movw	r18, r22
    32d0:	ac 01       	movw	r20, r24
    32d2:	bd 01       	movw	r22, r26
    32d4:	cf 01       	movw	r24, r30
    32d6:	08 95       	ret

000032d8 <__prologue_saves__>:
    32d8:	2f 92       	push	r2
    32da:	3f 92       	push	r3
    32dc:	4f 92       	push	r4
    32de:	5f 92       	push	r5
    32e0:	6f 92       	push	r6
    32e2:	7f 92       	push	r7
    32e4:	8f 92       	push	r8
    32e6:	9f 92       	push	r9
    32e8:	af 92       	push	r10
    32ea:	bf 92       	push	r11
    32ec:	cf 92       	push	r12
    32ee:	df 92       	push	r13
    32f0:	ef 92       	push	r14
    32f2:	ff 92       	push	r15
    32f4:	0f 93       	push	r16
    32f6:	1f 93       	push	r17
    32f8:	cf 93       	push	r28
    32fa:	df 93       	push	r29
    32fc:	cd b7       	in	r28, 0x3d	; 61
    32fe:	de b7       	in	r29, 0x3e	; 62
    3300:	ca 1b       	sub	r28, r26
    3302:	db 0b       	sbc	r29, r27
    3304:	0f b6       	in	r0, 0x3f	; 63
    3306:	f8 94       	cli
    3308:	de bf       	out	0x3e, r29	; 62
    330a:	0f be       	out	0x3f, r0	; 63
    330c:	cd bf       	out	0x3d, r28	; 61
    330e:	09 94       	ijmp

00003310 <__epilogue_restores__>:
    3310:	2a 88       	ldd	r2, Y+18	; 0x12
    3312:	39 88       	ldd	r3, Y+17	; 0x11
    3314:	48 88       	ldd	r4, Y+16	; 0x10
    3316:	5f 84       	ldd	r5, Y+15	; 0x0f
    3318:	6e 84       	ldd	r6, Y+14	; 0x0e
    331a:	7d 84       	ldd	r7, Y+13	; 0x0d
    331c:	8c 84       	ldd	r8, Y+12	; 0x0c
    331e:	9b 84       	ldd	r9, Y+11	; 0x0b
    3320:	aa 84       	ldd	r10, Y+10	; 0x0a
    3322:	b9 84       	ldd	r11, Y+9	; 0x09
    3324:	c8 84       	ldd	r12, Y+8	; 0x08
    3326:	df 80       	ldd	r13, Y+7	; 0x07
    3328:	ee 80       	ldd	r14, Y+6	; 0x06
    332a:	fd 80       	ldd	r15, Y+5	; 0x05
    332c:	0c 81       	ldd	r16, Y+4	; 0x04
    332e:	1b 81       	ldd	r17, Y+3	; 0x03
    3330:	aa 81       	ldd	r26, Y+2	; 0x02
    3332:	b9 81       	ldd	r27, Y+1	; 0x01
    3334:	ce 0f       	add	r28, r30
    3336:	d1 1d       	adc	r29, r1
    3338:	0f b6       	in	r0, 0x3f	; 63
    333a:	f8 94       	cli
    333c:	de bf       	out	0x3e, r29	; 62
    333e:	0f be       	out	0x3f, r0	; 63
    3340:	cd bf       	out	0x3d, r28	; 61
    3342:	ed 01       	movw	r28, r26
    3344:	08 95       	ret

00003346 <_exit>:
    3346:	f8 94       	cli

00003348 <__stop_program>:
    3348:	ff cf       	rjmp	.-2      	; 0x3348 <__stop_program>
